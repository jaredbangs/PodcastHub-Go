<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" media="screen" href="/~d/styles/rss2enclosuresfull.xsl"?><?xml-stylesheet type="text/css" media="screen" href="http://feeds.feedburner.com/~d/styles/itemcontent.css"?><rss xmlns:media="http://search.yahoo.com/mrss/" xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd" xmlns:creativeCommons="http://backend.userland.com/creativeCommonsRssModule" xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0" version="2.0"><channel><title>Software Engineering Radio - The Podcast for Professional Software Developers</title><link>http://www.se-radio.net</link><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="self" type="application/rss+xml" href="http://feeds.feedburner.com/se-radio" /><description>Software Engineering Radio is a podcast targeted at the professional software developer. The goal is to be a lasting educational resource, not a newscast. Every 10 days, a new episode is published that covers all topics software engineering. Episodes are either tutorials on a specific topic, or an interview with a well-known character from the software engineering world. All SE Radio episodes are original content — we do not record conferences or talks given in other venues. Each episode comprises two speakers to ensure a lively listening experience. SE Radio is an independent and non-commercial organization. All content is licensed under the Creative Commons 2.5 license.</description><language>en-US</language><image><link>http://www.se-radio.net</link><url>http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-135x142.jpg</url><title>SE-Radio Logo</title></image><copyright>(c)2006-2015 SE-Radio Team. All content is licensed under the Creative Commons 2.5 license (see http://creativecommons.org/licenses/by-nc-nd/2.5/)</copyright><managingEditor>team@se-radio.net (se-radio team)</managingEditor><lastBuildDate>Fri, 13 Nov 2015 14:41:44 PST</lastBuildDate><generator>http://wordpress.org/?v=4.1.8</generator><sy:updatePeriod xmlns:sy="http://purl.org/rss/1.0/modules/syndication/">hourly</sy:updatePeriod><sy:updateFrequency xmlns:sy="http://purl.org/rss/1.0/modules/syndication/">1</sy:updateFrequency><itunes:summary>Software Engineering Radio is a podcast targeted at the professional software developer. The goal is to be a lasting educational resource, not a newscast. Every 10 days, a new episode is published that covers all topics software engineering. Episodes are either tutorials on a specific topic, or an interview with a well-known character from the software engineering world. All SE Radio episodes are original content — we do not record conferences or talks given in other venues. Each episode comprises two speakers to ensure a lively listening experience. SE Radio is an independent and non-commercial organization.</itunes:summary><itunes:author>SE-Radio Team</itunes:author><itunes:explicit>no</itunes:explicit><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:subtitle>Information for Software Developers and Architects</itunes:subtitle><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="self" type="application/rss+xml" href="http://feeds.feedburner.com/se-radio" /><feedburner:info uri="se-radio" /><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="hub" href="http://pubsubhubbub.appspot.com/" /><media:copyright>(c)2006-2015 SE-Radio Team. All content is licensed under the Creative Commons 2.5 license (see http://creativecommons.org/licenses/by-nc-nd/2.5/)</media:copyright><media:thumbnail url="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><media:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</media:keywords><media:category scheme="http://www.itunes.com/dtds/podcast-1.0.dtd">Technology/Software How-To</media:category><itunes:owner><itunes:email>team@se-radio.net</itunes:email><itunes:name>SE-Radio Team</itunes:name></itunes:owner><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><itunes:category text="Technology"><itunes:category text="Software How-To" /></itunes:category><creativeCommons:license>http://creativecommons.org/licenses/by-nc-nd/2.5/</creativeCommons:license><item><title>SE-Radio Episode 242: Dave Thomas on Innovating Legacy Systems</title><link>http://feedproxy.google.com/~r/se-radio/~3/CRxB3Cfgtgc/</link><category>Episodes</category><category>lean</category><category>Legacy Systems</category><category>testing</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Fri, 13 Nov 2015 14:38:38 PST</pubDate><guid isPermaLink="false">http://www.se-radio.net/?p=1892</guid><description>Sven Johann talks with Dave Thomas about innovating legacy systems. Dave clarifies first why legacy systems are both valuable and problematic. Next, they discuss bad systemic and good incremental approaches for innovation of legacy systems; why you shouldn’t rewrite an old system but rather focus on tactical changes to reduce cost or increase productivity within [&amp;#8230;]&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/CRxB3Cfgtgc" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2015/11/se-radio-episode-242-dave-thomas-on-innovating-legacy-systems/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><itunes:subtitle>Sven Johann talks with Dave Thomas about innovating legacy systems. Dave clarifies first why legacy systems are both valuable and problematic. Next, they discuss bad systemic and good incremental approaches for innovation of legacy systems; why you sho...</itunes:subtitle><itunes:summary>Sven Johann talks with Dave Thomas about innovating legacy systems. Dave clarifies first why legacy systems are both valuable and problematic. Next, they discuss bad systemic and good incremental approaches for innovation of legacy systems; why you shouldn’t rewrite an old system but rather focus on tactical changes to reduce cost or increase productivity within one quarter; examples of how to measure success of the innovation; how to get full support from management to use any technology you want; when cleaning up the codebase makes sense and when not; good ideas to innovate the codebase; approaches to introduce tests; and how to deal with data

Venue: GOTO conference in Amsterdam
Related Links

	Dave on Twitter http://twitter.com/daveathomas
	Dave Thomas’ website http://www.davethomas.net/
	Chad Fowler on ‘The big rewrite’ http://chadfowler.com/blog/2006/12/27/the-big-rewrite
	Software Engineering Radio on Technical Debt http://www.se-radio.net/2015/04/episode-224-sven-johann-and-eberhard-wolff-on-technical-debt
	Quickcheck Model-based Testing Frameworks https://en.wikipedia.org/wiki/QuickCheck
	Reducing cycle time is part of Continuous Delivery http://martinfowler.com/books/continuousDelivery.html</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>1:03:51</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/jFfP7AuPJ1o/SE-Radio-Episode-242-Dave-Thomas-on-Innovating-Legacy-Systems.mp3" fileSize="92011494" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2015/11/se-radio-episode-242-dave-thomas-on-innovating-legacy-systems/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/jFfP7AuPJ1o/SE-Radio-Episode-242-Dave-Thomas-on-Innovating-Legacy-Systems.mp3" length="92011494" type="audio/mpeg" /><feedburner:origEnclosureLink>http://traffic.libsyn.com/seradio/SE-Radio-Episode-242-Dave-Thomas-on-Innovating-Legacy-Systems.mp3</feedburner:origEnclosureLink></item><item><title>SE-Radio Episode 241: Kyle Kingsbury on Consensus in Distributed Systems</title><link>http://feedproxy.google.com/~r/se-radio/~3/PwpEJ39Z3FU/</link><category>Episodes</category><category>CAP</category><category>consensus</category><category>databases</category><category>distributed computing</category><category>nosql</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Tue, 03 Nov 2015 10:45:23 PST</pubDate><guid isPermaLink="false">http://www.se-radio.net/?p=1881</guid><description>Kyle Kingsbury, known as Aphyr on Twitter and for his blog by the same name, talks to Stefan Tilkov about consensus in distributed systems and about his experience in testing systems to see how they behave in case of failures. In addition to discussing some of the theoretical foundations, such as the CAP theorem, isolation [&amp;#8230;]&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/PwpEJ39Z3FU" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2015/11/se-radio-episode-241-kyle-kingsbury-on-consensus-in-distributed-systems/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">2</slash:comments><itunes:subtitle>Kyle Kingsbury, known as Aphyr on Twitter and for his blog by the same name, talks to Stefan Tilkov about consensus in distributed systems and about his experience in testing systems to see how they behave in case of failures.</itunes:subtitle><itunes:summary>Kyle Kingsbury, known as Aphyr on Twitter and for his blog by the same name, talks to Stefan Tilkov about consensus in distributed systems and about his experience in testing systems to see how they behave in case of failures. In addition to discussing some of the theoretical foundations, such as the CAP theorem, isolation levels, and consensus protocols, Kyle talks about some specific databases, including MongoDB, Riak, and Redis, and discusses how they maintain and achieve -- or fail to achieve -- a consistent state. Finally, there’s some advice for practitioners on how to pick a solution and understand its properties.

Venue: Internet
Related Links

	Kyle’s website https://aphyr.com/

Call me maybe - the Jepsen blog post series https://aphyr.com/tags/Jepsen

	ANSI SQL Isolation Levels http://docs.oracle.com/cd/B12037_01/server.101/b10743/consist.htm#sthref1919
	CAP Theorem http://dl.acm.org/citation.cfm?id=564601
	CRDTs: CRDTs: Consistency without concurrency control http://pagesperso-systeme.lip6.fr/Marc.Shapiro/papers/RR-6956.pdf?
	Dynamo http://www.allthingsdistributed.com/2007/10/amazons_dynamo.html
	Postgres http://www.postgresql.org/
	Redis http://redis.io/
	Redis’ Sentinel protocol http://redis.io/topics/sentinel
	MongoDB https://www.mongodb.org/
	Riak http://basho.com/products/riak-kv/
	zookeeper http://zookeeper.apache.org/
	NuoDB http://www.nuodb.com/
	Kafka https://kafka.apache.org/
	Cassandra https://cassandra.apache.org/
	Rabbit MQ https://www.rabbitmq.com/
	consul https://www.consul.io/
	etcd https://github.com/coreos/etcd
	Elasticsearch https://www.elastic.co/products/elasticsearch
	Raft https://raft.github.io/
	Clojure http://clojure.org/
	TLA+ http://www.tlaplus.net/
	Spin http://spinroot.com/spin/whatispin.html
	Quickcheck http://www.quviq.com/products/erlang-quickcheck/
	Foundation DB https://foundationdb.com/
	Paxos http://research.microsoft.com/en-us/um/people/lamport/pubs/paxos-simple.pdf
	ZAB (Zookeeper Atomic Broadcast) http://www.tcs.hut.fi/Studies/T-79.5001/reports/2012-deSouzaMedeiros.pdf
	Knossos https://github.com/aphyr/knossos
	Christopher Meiklejohn’s website http://christophermeiklejohn.com/
	Strong Consistency Models https://aphyr.com/posts/313-strong-consistency-models
	Peter Bailis’s website http://www.bailis.org/</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>1:01:14</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/MfBxKjPTdkI/SE-Radio-Episode-241-Kyle-Kingsbury-on-Consensus-in-Distributed-Systems.mp3" fileSize="147034786" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2015/11/se-radio-episode-241-kyle-kingsbury-on-consensus-in-distributed-systems/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/MfBxKjPTdkI/SE-Radio-Episode-241-Kyle-Kingsbury-on-Consensus-in-Distributed-Systems.mp3" length="147034786" type="audio/mpeg" /><feedburner:origEnclosureLink>http://traffic.libsyn.com/seradio/SE-Radio-Episode-241-Kyle-Kingsbury-on-Consensus-in-Distributed-Systems.mp3</feedburner:origEnclosureLink></item><item><title>SE-Radio Episode 240: The Groovy Language with Cédric Champeau</title><link>http://feedproxy.google.com/~r/se-radio/~3/OMSj28fX5UU/</link><category>Episodes</category><category>groovy</category><category>java</category><category>jvm</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Thu, 22 Oct 2015 10:34:34 PDT</pubDate><guid isPermaLink="false">http://www.se-radio.net/?p=1874</guid><description>Josh Long talks to Cédric Champeau about the latest and greatest in the Groovy JVM language, how it has evolved over the years, and where it&amp;#8217;s going. They start by talking about the existing features in the language, the language&amp;#8217;s history and then move on to discuss where the language is going, how Java 8 [&amp;#8230;]&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/OMSj28fX5UU" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2015/10/se-radio-episode-240-the-groovy-language-with-cedric-champeau/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">1</slash:comments><itunes:subtitle>Josh Long talks to Cédric Champeau about the latest and greatest in the Groovy JVM language, how it has evolved over the years, and where it's going. They start by talking about the existing features in the language,</itunes:subtitle><itunes:summary>Josh Long talks to Cédric Champeau about the latest and greatest in the Groovy JVM language, how it has evolved over the years, and where it's going. They start by talking about the existing features in the language, the language's history and then move on to discuss where the language is going, how Java 8 changes things, and what the recent move to Apache means for the language and the community.

Venue: Skype
Related Links

	The Groovy language at Apache http://incubator.apache.org/projects/groovy.html
	The Groovy language site http://www.groovy-lang.org/
	Cédric Champeau's twitter account https://mobile.twitter.com/cedricchampeau
	Cédric Champeau's personal blog http://melix.github.io/blog/</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>1:08:38</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/-R7WfGK_XWs/SE-Radio-Episode-240-The-Groovy-Language-with-Cedric-Champeau.mp3" fileSize="65935863" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2015/10/se-radio-episode-240-the-groovy-language-with-cedric-champeau/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/-R7WfGK_XWs/SE-Radio-Episode-240-The-Groovy-Language-with-Cedric-Champeau.mp3" length="65935863" type="audio/mpeg" /><feedburner:origEnclosureLink>http://traffic.libsyn.com/seradio/SE-Radio-Episode-240-The-Groovy-Language-with-Cedric-Champeau.mp3</feedburner:origEnclosureLink></item><item><title>SE-Radio Episode 239: Andrew Clay Shafer on Modern Platform-as-a-Service</title><link>http://feedproxy.google.com/~r/se-radio/~3/q8IHoiCyJow/</link><category>Episodes</category><category>cloud</category><category>cloud foundry</category><category>containers</category><category>Docker</category><category>kubernetes</category><category>Mesos</category><category>paas</category><category>platform as a service</category><category>runtime</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Fri, 02 Oct 2015 14:28:28 PDT</pubDate><guid isPermaLink="false">http://www.se-radio.net/?p=1851</guid><description>Josh Long talks to Pivotal&amp;#8217;s Andrew Clay Shafer about the state of platforms-as-a-service (PaaS; like Cloud Foundry). They cover how pass relates to the fast-evolving container-ready distributed runtimes such as Lattice, Kubernetes and Mesos. The discussion starts with a look at what PaaS means and moves on to how the technology has evolved, the community [&amp;#8230;]&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/q8IHoiCyJow" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2015/10/se-radio-episode-239-andrew-clay-shafer-on-modern-platform-as-a-service/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">1</slash:comments><itunes:subtitle>Josh Long talks to Pivotal's Andrew Clay Shafer about the state of platforms-as-a-service (PaaS; like Cloud Foundry). They cover how pass relates to the fast-evolving container-ready distributed runtimes such as Lattice, Kubernetes and Mesos.</itunes:subtitle><itunes:summary>Josh Long talks to Pivotal's Andrew Clay Shafer about the state of platforms-as-a-service (PaaS; like Cloud Foundry). They cover how pass relates to the fast-evolving container-ready distributed runtimes such as Lattice, Kubernetes and Mesos. The discussion starts with a look at what PaaS means and moves on to how the technology has evolved, the community has grown, and how the community now shapes its development. Then, the discussion turns to the future of the Cloud Foundry technology and where it lives in a crowded field.

Venue: Internet
Related Links:

	Lattice Cloud Foundry http://cloudfoundry.org/
	Puppet Apache Mesos http://mesos.apache.org/
	Kubernetes Linux Containers (LXC) http://en.wikipedia.org/wiki/LXC
	Open VZ Unikernels http://wiki.xenproject.org/wiki/Unikernels
	OSV Project Mirage http://openmirage.org/
	Andrew’s Twitter: https://twitter.com/littleidea</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>1:16:35</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/Uy4SGxsnqbU/SE-Radio-Episode-239-Andrew-Clay-Shafer-on-Modern-Platform-as-a-Service.mp3" fileSize="110336198" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2015/10/se-radio-episode-239-andrew-clay-shafer-on-modern-platform-as-a-service/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/Uy4SGxsnqbU/SE-Radio-Episode-239-Andrew-Clay-Shafer-on-Modern-Platform-as-a-Service.mp3" length="110336198" type="audio/mpeg" /><feedburner:origEnclosureLink>http://traffic.libsyn.com/seradio/SE-Radio-Episode-239-Andrew-Clay-Shafer-on-Modern-Platform-as-a-Service.mp3</feedburner:origEnclosureLink></item><item><title>SE-Radio Episode 238: Linda Rising on the Agile Brain</title><link>http://feedproxy.google.com/~r/se-radio/~3/m_51Vn9ZViY/</link><category>Episodes</category><category>agile</category><category>brain</category><category>experiments</category><category>mindset</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Fri, 11 Sep 2015 10:04:33 PDT</pubDate><guid isPermaLink="false">http://www.se-radio.net/?p=1838</guid><description>Johannes Thönes talks to Linda Rising, author, speaker and independent consultant, about the Agile Brain. They start by talking about the fixed, talent-oriented mindset and then contrast with the learning-oriented mindset. After establishing the terms, Linda explains how we know which mindset we are in currently and how we can change it for us and others, [&amp;#8230;]&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/m_51Vn9ZViY" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2015/09/se-radio-episode-238-linda-rising-on-the-agile-brain/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">16</slash:comments><itunes:subtitle>Johannes Thönes talks to Linda Rising, author, speaker and independent consultant, about the Agile Brain. They start by talking about the fixed, talent-oriented mindset and then contrast with the learning-oriented mindset. After establishing the terms,</itunes:subtitle><itunes:summary>Johannes Thönes talks to Linda Rising, author, speaker and independent consultant, about the Agile Brain. They start by talking about the fixed, talent-oriented mindset and then contrast with the learning-oriented mindset. After establishing the terms, Linda explains how we know which mindset we are in currently and how we can change it for us and others, for instance, by offering praise in the right way.

In the second part of the interview, they discuss why scientific experiments would be necessary to improve our work, and how we can port some of these practices in our daily work -- for instance through retrospectives.

This episode was recorded one day before Linda's 73th birthday.

Venue: Krakow, ACE! Conference
Related Links
Book: Linda Rising. The Patterns Handbook: Techniques, Strategies, and Applications http://www.amazon.com/Patterns-Handbook-Techniques-Strategies-Applications/dp/0521648181

Book: Linda Rising. Design Patterns in Communications Software http://www.amazon.com/Patterns-Communication-Software-Douglas-Schmidt/dp/0521790409

Book: Mary Lynn Manns and Linda Rising. Fearless Change: Patterns for Introducing New Ideas http://www.amazon.com/exec/obidos/ASIN/0201741571

Book: Mary Lynn Manns and Linda Rising. More Fearless Change: Strategies for Making Your Ideas Happen http://www.amazon.com/More-Fearless-Change-Strategies-Making/dp/0133966445

Episode 105: Retrospectives with Linda Rising http://www.se-radio.net/2008/07/episode-105-retrospectives-with-linda-rising/

Episode 139: Fearless Change with Linda Rising http://www.se-radio.net/2009/06/episode-139-fearless-change-with-linda-rising/

Book: Carol Dweck. Mindset: The New Psychology of Success http://www.amazon.com/Mindset-Psychology-Success-Carol-Dweck/dp/0345472322

Malcolm Gladwell: The Talent Myth http://gladwell.com/the-talent-myth/

Books: Nature or Nurture

How Not to Talk to Your Kids. New York Magazine http://nymag.com/news/features/27840/

Video: Linda Rising. The Agile Mindset -- and beyond. GOTO Aarhus 2013 https://www.youtube.com/watch?v=C13JC_YP2Q8

Release! - A light card game about software and the people who make it. http://inedo.com/release

Brain Science Podcast http://brainsciencepodcast.com/

Radiolab Podcast http://www.radiolab.org/series/podcasts/

Freconomiscs Radio Podcast http://freakonomics.com/radio/

Scientific American Podcast: 60-Second Mind http://www.scientificamerican.com/podcast/60-second-mind/

99U Podcast http://99u.com/category/podcast

Umano https://umano.me/

Linda's Website http://lindarising.org

Linda’s Twitter https://twitter.com/RisingLinda</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>1:06:24</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/5G8ZZrFHC5I/SE-Radio-Episode-238-Linda-Rising-on-the-Agile-Brain.mp3" fileSize="63792361" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2015/09/se-radio-episode-238-linda-rising-on-the-agile-brain/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/5G8ZZrFHC5I/SE-Radio-Episode-238-Linda-Rising-on-the-Agile-Brain.mp3" length="63792361" type="audio/mpeg" /><feedburner:origEnclosureLink>http://traffic.libsyn.com/seradio/SE-Radio-Episode-238-Linda-Rising-on-the-Agile-Brain.mp3</feedburner:origEnclosureLink></item><item><title>SE-Radio Episode 237: Go Behind the Scenes and Meet the Team</title><link>http://feedproxy.google.com/~r/se-radio/~3/Wl5k6WI8Pu0/</link><category>Episodes</category><category>podcasting</category><category>software engineering radio</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Thu, 10 Sep 2015 09:12:32 PDT</pubDate><guid isPermaLink="false">http://www.se-radio.net/?p=1845</guid><description>Show editor Robert Blumen begins with a history of the show, what he has been doing since he became the show editor a year ago, and where he wants the show to go in the future. The remainder of the show is a series of interviews with all of the active hosts, the founder of the [&amp;#8230;]&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/Wl5k6WI8Pu0" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2015/09/se-radio-episode-237-software-engineering-radio-go-behind-the-scenes-and-meet-the-team/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">1</slash:comments><itunes:subtitle>Show editor Robert Blumen begins with a history of the show, what he has been doing since he became the show editor a year ago, and where he wants the show to go in the future. The remainder of the show is a series of interviews with all of the active ...</itunes:subtitle><itunes:summary>Show editor Robert Blumen begins with a history of the show, what he has been doing since he became the show editor a year ago, and where he wants the show to go in the future. The remainder of the show is a series of interviews with all of the active hosts, the founder of the show Markus Voelter, the most recent and current IEEE Software magazine editors Forrest Shull and Diomidis Spinellis, and Brian Brannon from the management and production side.

Venue: Internet
Related Links

	Episode 237 Transcript http://www.se-radio.net/?p=1860
	Software Engineering Radio http://se-radio.net
	Episode #01 http://www.se-radio.net/2006/01/episode-0-about
	The SE Radio team http://www.se-radio.net/2006/01/episode-0-about</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>1:02:44</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/8wIcV8s6Zac/SE-Radio-Episode-237-Go-Behind-the-Scenes-and-Meet-the-Team.mp3" fileSize="60279643" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2015/09/se-radio-episode-237-software-engineering-radio-go-behind-the-scenes-and-meet-the-team/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/8wIcV8s6Zac/SE-Radio-Episode-237-Go-Behind-the-Scenes-and-Meet-the-Team.mp3" length="60279643" type="audio/mpeg" /><feedburner:origEnclosureLink>http://traffic.libsyn.com/seradio/SE-Radio-Episode-237-Go-Behind-the-Scenes-and-Meet-the-Team.mp3</feedburner:origEnclosureLink></item><item><title>SE-Radio Episode 236: Rebecca Parsons on Evolutionary Architecture</title><link>http://feedproxy.google.com/~r/se-radio/~3/ptl7QT_BAz4/</link><category>Episodes</category><category>agile</category><category>architecture</category><category>design</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Fri, 21 Aug 2015 10:25:37 PDT</pubDate><guid isPermaLink="false">http://www.se-radio.net/?p=1830</guid><description>Johannes Thönes talks to Rebecca Parsons, Chief Technology Officer at ThoughtWorks, about evolutionary architecture. The practice of evolutionary software architecture means making decisions as late as possible (last responsible moment) and setting up cross-functional requirements that the architecture has to meet (architectural fitness function). In the beginning, Parsons and Thönes introduce the term evolutionary architecture and [&amp;#8230;]&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/ptl7QT_BAz4" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2015/08/se-radio-episode-236-rebecca-parsons-on-evolutionary-architecture/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">3</slash:comments><itunes:subtitle>Johannes Thönes talks to Rebecca Parsons, Chief Technology Officer at ThoughtWorks, about evolutionary architecture. The practice of evolutionary software architecture means making decisions as late as possible (last responsible moment) and setting up ...</itunes:subtitle><itunes:summary>Johannes Thönes talks to Rebecca Parsons, Chief Technology Officer at ThoughtWorks, about evolutionary architecture. The practice of evolutionary software architecture means making decisions as late as possible (last responsible moment) and setting up cross-functional requirements that the architecture has to meet (architectural fitness function).

In the beginning, Parsons and Thönes introduce the term evolutionary architecture and explain the difference to emergent design. Parsons also explains why big design upfront is a bad idea and why we still need architecture even in Agile projects.

Parsons then describes five principles of evolutionary architecture (last responsible moment, architect and develop for evolvability, Postel’s law, architect for testability, and Conway’s law). She goes on to highlight three techniques of evolutionary architecture (database refactoring, continuous delivery, and microservices).

Venue: London
Related Links

	Episode 182: Domain-Specific Languages with Martin Fowler and Rebecca Parsons http://www.se-radio.net/2012/01/episode-182-domain-specific-languages-with-martin-fowler-and-rebecca-parsons/
	Rebecca's posts from working for the "Technology for Development Office" of Unicef in Uganda http://rebeccaparsons.com/?cat=3
	Episode 166: Living Architectures with John Wiegand http://www.se-radio.net/2010/08/episode-166-living-architectures-with-john-wiegand/
	"[architecture is all the] 'things that people perceive as hard to change.'" - Martin Fowler in Who Needs an Architect
	Episode 224: Technical Debt with Sven Johann http://www.se-radio.net/2015/04/episode-224-sven-johann-and-eberhard-wolff-on-technical-debt/
	Episode 186: Martin Fowler and Pramod Sadalage on Agile Database Development http://www.se-radio.net/2012/06/episode-186-martin-fowler-and-pramod-sadalage-on-agile-database-development/
	Episode 221: Jez Humble on Continuous Delivery http://www.se-radio.net/2015/02/episode-221-jez-humble-on-continuous-delivery/
	Episode 210: Stefan Tilkov on Architecture and Micro Services http://www.se-radio.net/2014/09/episode-210-stefan-tilkov-on-architecture-and-micro-services/
	Episode 213: James Lewis on Microservices http://www.se-radio.net/2014/10/episode-213-james-lewis-on-microservices/
	Building Microservices by Sam Newman http://www.amazon.com/Building-Microservices-Sam-Newman-ebook/dp/B00T3N7XB4/
	Continous Delievery by Jez Humble and David Farley http://www.amazon.com/Continuous-Delivery-Deployment-Automation-Addison-Wesley/dp/0321601912
	Refactoring Databases: Evolutionary Database Design by Scott Ambler, Pramod Sadalage http://www.amazon.com/Refactoring-Databases-Evolutionary-paperback-Addison-Wesley/dp/0321774515
	Rebecca's website http://rebeccaparsons.com
	ThoughtWorks website http://www.thoughtworks.com
	Rebecca's Twitter http:twitter.com/rebeccaparsons</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>54:59</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/V19_mvETmx0/se_radio_236-parsons_final.mp3" fileSize="79238715" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2015/08/se-radio-episode-236-rebecca-parsons-on-evolutionary-architecture/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/V19_mvETmx0/se_radio_236-parsons_final.mp3" length="79238715" type="audio/mpeg" /><feedburner:origEnclosureLink>http://traffic.libsyn.com/seradio/se_radio_236-parsons_final.mp3</feedburner:origEnclosureLink></item><item><title>SE-Radio Episode 235: Ben Hindman on Apache Mesos</title><link>http://feedproxy.google.com/~r/se-radio/~3/voXrRhP7zWc/</link><category>Episodes</category><category>apache</category><category>big data</category><category>cloud</category><category>containers</category><category>data center</category><category>distributed systems</category><category>Docker</category><category>hadoop</category><category>linux</category><category>Mesos</category><category>operating system</category><category>scalability</category><category>Spark</category><category>Twitter</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Mon, 17 Aug 2015 10:20:54 PDT</pubDate><guid isPermaLink="false">http://www.se-radio.net/?p=1823</guid><description>Ben Hindman talks to Jeff Meyerson about Apache Mesos, a distributed systems kernel. Mesos abstracts away many of the hassles of managing a distributed system. Hindman starts with a high-level explanation of Mesos, explaining the problems he encountered trying to run multiple instances of Hadoop against a single data set. He then discusses how Twitter uses [&amp;#8230;]&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/voXrRhP7zWc" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2015/08/se-radio-episode-235-ben-hindman-on-apache-mesos/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><itunes:subtitle>Ben Hindman talks to Jeff Meyerson about Apache Mesos, a distributed systems kernel. Mesos abstracts away many of the hassles of managing a distributed system. Hindman starts with a high-level explanation of Mesos,</itunes:subtitle><itunes:summary>Ben Hindman talks to Jeff Meyerson about Apache Mesos, a distributed systems kernel. Mesos abstracts away many of the hassles of managing a distributed system. Hindman starts with a high-level explanation of Mesos, explaining the problems he encountered trying to run multiple instances of Hadoop against a single data set. He then discusses how Twitter uses Mesos for cluster management. The conversation evolves into a more granular discussion of the abstractions Mesos provides and different ways to leverage those abstractions.

Venue: Internet
Related Links
Apache Mesos http://mesos.apache.org

Ben Hindman speaks about Mesos https://www.youtube.com/watch?v=YB1VW0LKzJ4

Mesosphere blog https://mesosphere.com/blog

Airbnb tech talk https://www.youtube.com/watch?v=Hal00g8o1iY

Ben Hindman on Twitter http://twitter.com/benh</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><media:content url="http://feedproxy.google.com/~r/se-radio/~5/grCTm-ev_io/Episode-235-Ben-Hindman-on-Apache-Mesos.mp3" fileSize="5242880" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2015/08/se-radio-episode-235-ben-hindman-on-apache-mesos/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/grCTm-ev_io/Episode-235-Ben-Hindman-on-Apache-Mesos.mp3" length="5242880" type="audio/mpeg" /><feedburner:origEnclosureLink>http://traffic.libsyn.com/seradio/Episode-235-Ben-Hindman-on-Apache-Mesos.mp3</feedburner:origEnclosureLink></item><item><title>SE-Radio Episode 234: Barry O’Reilly on Lean Enterprise</title><link>http://feedproxy.google.com/~r/se-radio/~3/iYUy7_lU0KM/</link><category>Episodes</category><category>improvement kata</category><category>innovations</category><category>lean enterprise</category><category>lean startup</category><category>organizations</category><category>scaling agile</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Tue, 04 Aug 2015 09:47:00 PDT</pubDate><guid isPermaLink="false">http://www.se-radio.net/?p=1813</guid><description>Johannes Thönes talks to Barry O&amp;#8217;Reilly, principal consultant at ThoughtWorks, about his recently published book Lean Enterprise. A lean enterprise is a large organization that manages to keep innovating while keeping its existing products in the market. O’Reilly talks about the idea of scientific experiments and the build-measure-learn loop popularized by the lean-startup method. He shares [&amp;#8230;]&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/iYUy7_lU0KM" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2015/08/se-radio-episode-234-barry-oreilly-on-lean-enterprise/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">5</slash:comments><itunes:subtitle>Johannes Thönes talks to Barry O'Reilly, principal consultant at ThoughtWorks, about his recently published book Lean Enterprise. A lean enterprise is a large organization that manages to keep innovating while keeping its existing products in the market.</itunes:subtitle><itunes:summary>Johannes Thönes talks to Barry O'Reilly, principal consultant at ThoughtWorks, about his recently published book Lean Enterprise. A lean enterprise is a large organization that manages to keep innovating while keeping its existing products in the market. O’Reilly talks about the idea of scientific experiments and the build-measure-learn loop popularized by the lean-startup method. He shares his experiment of an online wine seller using Twitter. He further discusses the challenges for enterprises trying to do something similar and introduce the three-horizon model, to manage innovative, growing, and new products. As an example of a successful lean enterprise, O’Reilly talks about GOV.UK, the British government’s new website.

Venue: London
Related Links

	Barry O’Reilly's blog http://barryoreilly.com
	Barry O'Reilly on Twitter http://twitter.com/barryoreilly
	Lean Enterprise http://barryoreilly.com/lean-enterprise
	Lean Enterprise: How High Performance Organizations Innovate at Scale http://amzn.com/1449368425, by Jez Humble, Joanne Molesky, and Barry O'Reilly
	The Lean Startup: How Today’s Entrepreneurs Use Continuous Innovation to Create Radically Successful Businesses http://amzn.com/0307887898, by Eric Ries
	GOV.UK http://www.gov.uk
	Intuit https://www.intuit.com
	SnapTax http://turbotax.intuit.ca/tax-software/snaptax.jsp
	The three-horizon model http://www.mckinsey.com/insights/strategy/enduring_ideas_the_three_horizons_of_growth
	Software Engineering Radio Episode 221: Jez Humble on Continuous Delivery http://www.se-radio.net/2015/02/episode-221-jez-humble-on-continuous-delivery</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>1:01:50</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/HYymFxOvLnw/SE-Radio-Episode-234-Barry-OReilly-on-Lean-Enterprise.mp3" fileSize="89085864" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2015/08/se-radio-episode-234-barry-oreilly-on-lean-enterprise/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/HYymFxOvLnw/SE-Radio-Episode-234-Barry-OReilly-on-Lean-Enterprise.mp3" length="89085864" type="audio/mpeg" /><feedburner:origEnclosureLink>http://traffic.libsyn.com/seradio/SE-Radio-Episode-234-Barry-OReilly-on-Lean-Enterprise.mp3</feedburner:origEnclosureLink></item><item><title>SE-Radio Episode 233: Fangjin Yang on OLAP and the Druid Real-Time Analytical Data Store</title><link>http://feedproxy.google.com/~r/se-radio/~3/QbICQJQoBpE/</link><category>Episodes</category><category>analytics</category><category>database</category><category>distributed systems</category><category>Druid</category><category>Lambda architecture</category><category>latency</category><category>OLAP</category><category>real time</category><category>SQL</category><category>zookeeper</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Tue, 28 Jul 2015 14:16:53 PDT</pubDate><guid isPermaLink="false">http://www.se-radio.net/?p=1804</guid><description>Fangjin Yang, creator of the Druid real-time analytical database, talks with Robert Blumen. They discuss the OLAP (online analytical processing) domain, OLAP concepts (hypercube, dimension, metric, and pivot), types of OLAP queries (roll-up, drill-down, and slicing and dicing), use cases for OLAP by organizations, the OLAP store’s position in the enterprise workflow, what “real time” [&amp;#8230;]&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/QbICQJQoBpE" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2015/07/se-radio-episode-233-fangjin-yang-on-olap-and-the-druid-real-time-analytical-data-store/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">2</slash:comments><itunes:subtitle>Fangjin Yang, creator of the Druid real-time analytical database, talks with Robert Blumen. They discuss the OLAP (online analytical processing) domain, OLAP concepts (hypercube, dimension, metric, and pivot), types of OLAP queries (roll-up, drill-down,</itunes:subtitle><itunes:summary>Fangjin Yang, creator of the Druid real-time analytical database, talks with Robert Blumen. They discuss the OLAP (online analytical processing) domain, OLAP concepts (hypercube, dimension, metric, and pivot), types of OLAP queries (roll-up, drill-down, and slicing and dicing), use cases for OLAP by organizations, the OLAP store’s position in the enterprise workflow, what “real time” means in the analytics context, and the relationship between real-time analytics and the Lambda architecture. They then move on to Druid itself: a high-level view, the challenges of implementing real-time analytics, and major application domains for Druid. They also discuss ad-tech and real-time analytics and real-time analytics as an operational tool. Yang then addresses Druid internals: node types, the special handling of the time dimension, the Druid query language, and the relationship between SQL and OLAP. Closing topics are the Druid open source project, community contributions, and the size and scale of some of the larger Druid clusters.

Venue: Internet
Related Links

	Fangjin Yang on Twitter: http://twitter.com/fangjin
	Introduction to OLAP http://www.dwreview.com/OLAP/Introduction_OLAP.html
	Druid http://druid.io
	The Druid project on Twitter https://twitter.com/druidio
	“Druid: A Real-Time Analytical Data Store” http://static.druid.io/docs/druid.pdf
	MetaMarkets—Introduction to Druid by Fangjin Yang https://www.youtube.com/watch?v=hgmxVPx4vVw
	The Strata talk, “Real Time Analytics with Open Source Technologies” https://www.youtube.com/watch?v=kJMYVpnW_AQ</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>51:19</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/7-HObbSSIFg/SE-Radio-Episode-233-Fangjin-Yang-on-OLAP-and-the-Druid-Real-Time-Analytical-Data-Store.mp3" fileSize="12370760" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2015/07/se-radio-episode-233-fangjin-yang-on-olap-and-the-druid-real-time-analytical-data-store/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/7-HObbSSIFg/SE-Radio-Episode-233-Fangjin-Yang-on-OLAP-and-the-Druid-Real-Time-Analytical-Data-Store.mp3" length="12370760" type="audio/mpeg" /><feedburner:origEnclosureLink>http://traffic.libsyn.com/seradio/SE-Radio-Episode-233-Fangjin-Yang-on-OLAP-and-the-Druid-Real-Time-Analytical-Data-Store.mp3</feedburner:origEnclosureLink></item><item><title>Episode 232: Mark Nottingham on HTTP/2</title><link>http://feedproxy.google.com/~r/se-radio/~3/xPKBlCZByIk/</link><category>Episodes</category><category>distributed computing</category><category>http</category><category>HTTP/2</category><category>IETF</category><category>protocols</category><category>rest</category><category>SPDY</category><category>W3C</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Thu, 16 Jul 2015 10:24:23 PDT</pubDate><guid isPermaLink="false">http://www.se-radio.net/?p=1781</guid><description>Stefan Tilkov talks to Mark Nottingham, chair of the IETF (Internet Engineering Task Force) HTTP Working Group and Internet standards veteran, about HTTP/2, the new version of the Web’s core protocol. The discussion provides a glimpse behind the process of building standards. Topics covered include the history of HTTP versions, differences among those versions, and [&amp;#8230;]&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/xPKBlCZByIk" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2015/07/episode-232-mark-nottingham-on-http2/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">2</slash:comments><itunes:subtitle>Stefan Tilkov talks to Mark Nottingham, chair of the IETF (Internet Engineering Task Force) HTTP Working Group and Internet standards veteran, about HTTP/2, the new version of the Web’s core protocol. The discussion provides a glimpse behind the proces...</itunes:subtitle><itunes:summary>Stefan Tilkov talks to Mark Nottingham, chair of the IETF (Internet Engineering Task Force) HTTP Working Group and Internet standards veteran, about HTTP/2, the new version of the Web’s core protocol. The discussion provides a glimpse behind the process of building standards. Topics covered include the history of HTTP versions, differences among those versions, and the relation of HTTP/2 to Google’s SPDY open networking protocol. Mark goes into detail about HTTP/2’s technical features, including binary framing, improved connection handling, server push, and the different protocol negotiation approaches. The episode concludes with a look at the consequences of HTTP/2 availability and adoption, especially regarding the various hacks that are best practices with HTTP/1.1.

Venue: Internet
Related Links
Mark Nottingham’s website https://www.mnot.net

Mark Nottingham on Twitter http://twitter.com/mnot

HTTP/2 home page http://http2.github.io

Daniel Stenberg’s HTTP/2 Explained http://daniel.haxx.se/http2

IETF HTTP Working Group https://httpwg.github.io

HTTP 0.9 http://www.w3.org/Protocols/HTTP/AsImplemented.html

HTTP 1.0 http://www.rfc-editor.org/rfc/rfc1945.txt

Original HTTP 1.1 RFC http://tools.ietf.org/html/rfc2616

Current HTTP/1.1 Specification RFCs:

* Authentication http://tools.ietf.org/html/rfc7235

* Caching http://tools.ietf.org/html/rfc7234

* Conditional Requests http://tools.ietf.org/html/rfc7232

* Message Syntax and Routing http://tools.ietf.org/html/rfc7230

* Range Requests http://tools.ietf.org/html/rfc7233

* Semantics and Content http://tools.ietf.org/html/rfc7231

HTTPbis Working Group http://tools.ietf.org/wg/httpbis

HTTP NG http://www.w3.org/Protocols/HTTP-NG

MIME https://en.wikipedia.org/wiki/MIME

Securing the Web: W3C TAG Finding http://www.w3.org/2001/tag/doc/web-https

SPDY https://developers.google.com/speed/spdy

Waka http://roy.gbiv.com/talks/2012_fielding_waka.pdf

WebSockets https://developer.mozilla.org/en-US/docs/WebSockets

 </itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>1:07:00</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/UJf1psvZaFE/SE-Radio-Episode_232-Mark-Nottingham-on-HTTP2.mp3" fileSize="16133386" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2015/07/episode-232-mark-nottingham-on-http2/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/UJf1psvZaFE/SE-Radio-Episode_232-Mark-Nottingham-on-HTTP2.mp3" length="16133386" type="audio/mpeg" /><feedburner:origEnclosureLink>http://traffic.libsyn.com/seradio/SE-Radio-Episode_232-Mark-Nottingham-on-HTTP2.mp3</feedburner:origEnclosureLink></item><item><title>SE-Radio Episode 231: Joshua Suereth and Matthew Farwell on SBT and Software Builds</title><link>http://feedproxy.google.com/~r/se-radio/~3/FN6qoorPuHw/</link><category>Episodes</category><category>Aether</category><category>Ant</category><category>build tools</category><category>Gradle</category><category>Ivy</category><category>Maven</category><category>SBT</category><category>scala</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Wed, 01 Jul 2015 10:37:21 PDT</pubDate><guid isPermaLink="false">http://www.se-radio.net/?p=1771</guid><description>Joshua Suereth and Matthew Farwell discuss SBT (Simple Build Tool) and their new book SBT in Action. They first look at the factors creating a need for build systems and why they think SBT—a new addition to this area—is a valuable contribution in spite of the vast number of existing build tools. Host Tobias Kaatz, [&amp;#8230;]&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/FN6qoorPuHw" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2015/07/se-radio-episode-231-joshua-suereth-and-matthew-farwell-on-sbt-and-software-builds/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><itunes:subtitle>Joshua Suereth and Matthew Farwell discuss SBT (Simple Build Tool) and their new book SBT in Action. They first look at the factors creating a need for build systems and why they think SBT—a new addition to this area—is a valuable contribution in spite...</itunes:subtitle><itunes:summary>Joshua Suereth and Matthew Farwell discuss SBT (Simple Build Tool) and their new book SBT in Action. They first look at the factors creating a need for build systems and why they think SBT—a new addition to this area—is a valuable contribution in spite of the vast number of existing build tools. Host Tobias Kaatz, Joshua, and Matthew then discuss how parallel execution of highly customizable tasks can both solve complex build problems and cause issues for programmers who aren’t used to working in such an environment. The remainder of the show covers dependency management, and especially the influence of Apache Ivy. The host and guests compare SBT to other build systems (Ant, Maven and Gradle) and examine how SBT deals with external libraries and why a new approach using Aether might be the best way to go.

Venue: Internet
Related Links
Joshua Suereth on Twitter http://twitter.com/jsuereth

Matthew Farwell on Twitter http://twitter.com/matthewfarwell

SBT (Simple Build Tool) http://www.scala-sbt.org

SBT in Action (Manning Publications) http://www.manning.com/suereth2

Updated SBT documentation http://www.scala-sbt.org/documentation.html

Aether http://projects.eclipse.org/projects/technology.aether

Apache Ant http://ant.apache.org

Apache Ivy http://ant.apache.org/ivy

Apache Maven http://maven.apache.org

Nexthink http://www.nexthink.com

Scala http://www.scala-lang.org

Typesafe http://www.typesafe.com

 </itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>57:23</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/ZG7fY9Xe7aM/Episode-231-Joshua-Suereth-and-Matthew-Farwell-on-SBT-and-Software-Builds.mp3" fileSize="137759901" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2015/07/se-radio-episode-231-joshua-suereth-and-matthew-farwell-on-sbt-and-software-builds/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/ZG7fY9Xe7aM/Episode-231-Joshua-Suereth-and-Matthew-Farwell-on-SBT-and-Software-Builds.mp3" length="137759901" type="audio/mpeg" /><feedburner:origEnclosureLink>http://traffic.libsyn.com/seradio/Episode-231-Joshua-Suereth-and-Matthew-Farwell-on-SBT-and-Software-Builds.mp3</feedburner:origEnclosureLink></item><item><title>Episode 230: Shubhra Kar on NodeJS</title><link>http://feedproxy.google.com/~r/se-radio/~3/UwWEnF5lSN8/</link><category>Episodes</category><category>Angular.js</category><category>api</category><category>Browserify</category><category>Chrome</category><category>client</category><category>client-server model</category><category>Express.js</category><category>Firefox</category><category>JavaScript</category><category>JSON</category><category>MongoDB</category><category>Node.js</category><category>server</category><category>thread models</category><category>V8</category><category>Web development</category><category>WebKit</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Fri, 26 Jun 2015 12:39:45 PDT</pubDate><guid isPermaLink="false">http://www.se-radio.net/?p=1763</guid><description>Shubhra Kar of StrongLoop talks to Jeff Meyerson about Node.js. Node allows for server-side JavaScript. Shubra and Jeff explore why Node is so important from three standpoints: isomorphic JavaScript, the single-threaded-concurrency model, and the &amp;#8220;API economy.&amp;#8221; Isomorphic JavaScript apps have their own control and viewing logic, but they share the state and specification of the [&amp;#8230;]&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/UwWEnF5lSN8" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2015/06/episode-230-shubhra-khar-on-nodejs/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">4</slash:comments><itunes:subtitle>Shubhra Kar of StrongLoop talks to Jeff Meyerson about Node.js. Node allows for server-side JavaScript. Shubra and Jeff explore why Node is so important from three standpoints: isomorphic JavaScript, the single-threaded-concurrency model,</itunes:subtitle><itunes:summary>Shubhra Kar of StrongLoop talks to Jeff Meyerson about Node.js. Node allows for server-side JavaScript. Shubra and Jeff explore why Node is so important from three standpoints: isomorphic JavaScript, the single-threaded-concurrency model, and the "API economy." Isomorphic JavaScript apps have their own control and viewing logic, but they share the state and specification of the models between client and server. Node's single-threaded event loop concurrency model is ideal for Web programming, where time is traditionally wasted while waiting on I/O. The API economy is dominated by JSON (JavaScript Object Notation), which Node treats as the first-class data model. Shubhra also discusses the changing landscape of the client-server model in a conversation about Browserify, which creates a directory structure in the browser, allowing for conflict management between client and server. Other topics discussed include MongoDB, model-driven development, and V8.

Venue: Internet
Related links
Shubhra Kar on Twitter http://twitter.com/shubhrakar

Node.js Home https://nodejs.org

Node creator Ryan Dahl https://www.youtube.com/watch?v=jo_B4LTHi3I

Browserify http://browserify.org

Express.js http://expressjs.com

V8 developer page https://developers.google.com/v8</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><media:content url="http://feedproxy.google.com/~r/se-radio/~5/o-VD_vNzyJA/Episode-230-Shubhra-Khar-on-NodeJS.mp3" fileSize="5242880" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2015/06/episode-230-shubhra-khar-on-nodejs/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/o-VD_vNzyJA/Episode-230-Shubhra-Khar-on-NodeJS.mp3" length="5242880" type="audio/mpeg" /><feedburner:origEnclosureLink>http://traffic.libsyn.com/seradio/Episode-230-Shubhra-Khar-on-NodeJS.mp3</feedburner:origEnclosureLink></item><item><title>Episode 229: Flavio Junqueira on Distributed Coordination with Apache ZooKeeper</title><link>http://feedproxy.google.com/~r/se-radio/~3/MU9kpN7RH4Y/</link><category>Episodes</category><category>apache</category><category>CAP</category><category>distributed system</category><category>hadoop</category><category>network</category><category>open source</category><category>zookeeper</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Wed, 17 Jun 2015 09:25:15 PDT</pubDate><guid isPermaLink="false">http://www.se-radio.net/?p=1750</guid><description>Flavio Junqueira is the author of Zookeeper: Distributed Process Coordination. Flavio and Jeff Meyerson begin by defining ZooKeeper and talking about what ZooKeeper is and isn’t. ZooKeeper can be thought of as a patch against certain fallacies of distributed computing: that the network is secure, has zero latency, has infinite bandwidth, and so on. With [&amp;#8230;]&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/MU9kpN7RH4Y" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2015/06/episode-229-flavio-junqueira-on-distributed-coordination-with-apache-zookeeper/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">1</slash:comments><itunes:subtitle>Flavio Junqueira is the author of Zookeeper: Distributed Process Coordination. Flavio and Jeff Meyerson begin by defining ZooKeeper and talking about what ZooKeeper is and isn’t. ZooKeeper can be thought of as a patch against certain fallacies of distr...</itunes:subtitle><itunes:summary>Flavio Junqueira is the author of Zookeeper: Distributed Process Coordination. Flavio and Jeff Meyerson begin by defining ZooKeeper and talking about what ZooKeeper is and isn’t. ZooKeeper can be thought of as a patch against certain fallacies of distributed computing: that the network is secure, has zero latency, has infinite bandwidth, and so on. With ZooKeeper, a programmer can be insulated from these problems or at least have a tool to better manage them. More concisely, ZooKeeper is a coordination kernel. It’s a set of primitives that abstracts away coordination, leader election, and other troublesome aspects of maintaining a distributed system. Flavio also discusses scaling ZooKeeper, the CAP theorem, and contrasting distributed tools such as Chubby.

Venue: Internet

Tags: distributed system, zookeeper, apache, hadoop, open source, network, CAP
Related Links
Flavio Junqueira on Twitter http://twitter.com/fpjunqueira

ZooKeeper O'Reilly book http://shop.oreilly.com/product/0636920028901.do

ZooKeeper homepage http://zookeeper.apache.org/

ZooKeeper on Wikipedia http://en.wikipedia.org/wiki/Apache_ZooKeeper

Airbnb ZooKeeper Tech Talk https://www.youtube.com/watch?v=mMG-wagNBwY

Software Engineering Radio Episode 227: The CAP Theorem http://www.se-radio.net/?p=1722</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>49:35</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/4vz7JGz_Z84/SE-Radio-Episode-229-Flavio-Junqueira-on-Distributed-Coordination-with-Apache-ZooKeeper.mp3" fileSize="41698611" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2015/06/episode-229-flavio-junqueira-on-distributed-coordination-with-apache-zookeeper/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/4vz7JGz_Z84/SE-Radio-Episode-229-Flavio-Junqueira-on-Distributed-Coordination-with-Apache-ZooKeeper.mp3" length="41698611" type="audio/mpeg" /><feedburner:origEnclosureLink>http://traffic.libsyn.com/seradio/SE-Radio-Episode-229-Flavio-Junqueira-on-Distributed-Coordination-with-Apache-ZooKeeper.mp3</feedburner:origEnclosureLink></item><item><title>Episode 228: Software Architecture Sketches with Simon Brown</title><link>http://feedproxy.google.com/~r/se-radio/~3/x0AtFcZBHWY/</link><category>Episodes</category><category>agile</category><category>architecture</category><category>communication</category><category>design</category><category>documentation</category><category>modeling</category><category>models</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Wed, 10 Jun 2015 16:01:31 PDT</pubDate><guid isPermaLink="false">http://www.se-radio.net/?p=1736</guid><description>Simon Brown, author of Software Architecture for Developers, talks with Sven Johann about using simple sketches to visualize, communicate and document software architecture. The show starts with a consideration of why sketches are more useful than UML and then continues with the explanation of the C4 model (context, containers, components and classes) and how it fits [&amp;#8230;]&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/x0AtFcZBHWY" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2015/06/episode-228-software-architecture-sketches-with-simon-brown/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">2</slash:comments><itunes:subtitle>Simon Brown, author of Software Architecture for Developers, talks with Sven Johann about using simple sketches to visualize, communicate and document software architecture. The show starts with a consideration of why sketches are more useful than UML ...</itunes:subtitle><itunes:summary>Simon Brown, author of Software Architecture for Developers, talks with Sven Johann about using simple sketches to visualize, communicate and document software architecture. The show starts with a consideration of why sketches are more useful than UML and then continues with the explanation of the C4 model (context, containers, components and classes) and how it fits Shneiderman’s mantra. Next Brown discusses why the code never matches the diagrams, how frameworks are guilty of this, and what you can do to let the code scream the architecture at you. Finally, it’s all about how to create a useful documentation which can also easily maintained and browsed.

Venue: Amsterdam
Related Links

	Simon Brown on Twitter: @simonbrown
	Simon's book: software architecture for developers https://leanpub.com/software-architecture-for-developers
	Simon Brown on the web http://www.codingthearchitecture.com
	Structurizr project https://github.com/structurizr/java
	Mark Needham: packaging by vertical slices http://www.markhneedham.com/blog/2012/02/20/coding-packaging-by-vertical-slice/
	Screaming architecture by Robert Martin http://blog.8thlight.com/uncle-bob/2011/09/30/Screaming-Architecture.html
	Just enough software architecture http://rhinoresearch.com/book
	arc42 http://www.arc42.org
	Shneiderman’s mantra http://www.ifp.illinois.edu/nabhcs/abstracts/shneiderman.html</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>56:35</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/9WkJDX9FFck/Software-Architecture-Sketches-with-Simon-Brown.mp3" fileSize="135857996" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2015/06/episode-228-software-architecture-sketches-with-simon-brown/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/9WkJDX9FFck/Software-Architecture-Sketches-with-Simon-Brown.mp3" length="135857996" type="audio/mpeg" /><feedburner:origEnclosureLink>http://traffic.libsyn.com/seradio/Software-Architecture-Sketches-with-Simon-Brown.mp3</feedburner:origEnclosureLink></item><item><title>Episode 227: Eric Brewer: The CAP Theorem, Then and Now</title><link>http://feedproxy.google.com/~r/se-radio/~3/PezuYvZ-T3s/</link><category>Episodes</category><category>CAP theorem</category><category>databases</category><category>distributed systems</category><category>infrastructure</category><category>recovery</category><category>robustness</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Wed, 27 May 2015 14:29:29 PDT</pubDate><guid isPermaLink="false">http://www.se-radio.net/?p=1722</guid><description>Robert Blumen talks with Eric Brewer, who discovered the CAP (consistency, availability, partition tolerance) theorem. The first part of the show focuses on Brewer&amp;#8217;s original thesis presented at the 2000 ACM Symposium on Principles of Distributed Computing (PODC): What set of problems motivated the formulation of CAP? How was it understood at the time? What are [&amp;#8230;]&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/PezuYvZ-T3s" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2015/05/the-cap-theorem-then-and-now/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">3</slash:comments><itunes:subtitle>Robert Blumen talks with Eric Brewer, who discovered the CAP (consistency, availability, partition tolerance) theorem. The first part of the show focuses on Brewer's original thesis presented at the 2000 ACM Symposium on Principles of Distributed Compu...</itunes:subtitle><itunes:summary>Robert Blumen talks with Eric Brewer, who discovered the CAP (consistency, availability, partition tolerance) theorem. The first part of the show focuses on Brewer's original thesis presented at the 2000 ACM Symposium on Principles of Distributed Computing (PODC): What set of problems motivated the formulation of CAP? How was it understood at the time? What are the three types of systems that can exist (or are there only two types)? Is latency the same as a partition? The second half of the show covers Brewer's more recent retrospective article on how things have changed since then: What major insights about CAP have emerged? How has CAP impacted the architecture of real applications? How can architects use the full space of the CAP theorem to arrive at the best designs? Are some types of systems more CAP-friendly? How do CAP systems recover when partitions are healed? The show wraps up with some speculation about the next 16 years.

Venue: Internet
Related Links

	Eric Brewer on Twitter: @eric_brewer
	Eric Brewer's home page at the University of California, Berkeley http://www.cs.berkeley.edu/~brewer/
	Eric Brewer: selected publications http://www.eecs.berkeley.edu/Faculty/Homepages/brewer.html
	Wired magazine profile of Eric Brewer http://www.wired.com/2012/09/meet-the-man-whos-rewiring-google-from-the-inside-out/all/
	“Towards Robust Distributed Systems” http://www.cs.berkeley.edu/~brewer/cs262b-2004/PODC-keynote.pdf PODC keynote presentation slides, by Eric Brewer
	Wikipedia article on the CAP theorem http://en.wikipedia.org/wiki/CAP_theorem
	“CAP Twelve Years Later: How the ‘Rules’ Have Changed,” http://www.infoq.com/articles/cap-twelve-years-later-how-the-rules-have-changed by Eric Brewer
	“Perspectives on the CAP Theorem,” http://groups.csail.mit.edu/tds/papers/Gilbert/Brewer2.pdf by Seth Gilbert and Nancy Lynch
	“Dynamo: Amazon's Highly Available Key-value Store,” http://www.allthingsdistributed.com/files/amazon-dynamo-sosp2007.pdf by Giueseppe DeCandia et al.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>45:52</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/NyeMB2YD5n0/The-CAP-Theorem-Then-and-Now.mp3" fileSize="66114286" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2015/05/the-cap-theorem-then-and-now/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/NyeMB2YD5n0/The-CAP-Theorem-Then-and-Now.mp3" length="66114286" type="audio/mpeg" /><feedburner:origEnclosureLink>http://traffic.libsyn.com/seradio/The-CAP-Theorem-Then-and-Now.mp3</feedburner:origEnclosureLink></item><item><title>Episode 226: Eric Evans on Domain-Driven Design at 10 Years</title><link>http://feedproxy.google.com/~r/se-radio/~3/VHSdy65fBvk/</link><category>Episodes</category><category>Command Query Responsibility Segregation</category><category>CQRS</category><category>domain-driven design</category><category>event sourcing</category><category>software architecture</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Wed, 13 May 2015 11:19:28 PDT</pubDate><guid isPermaLink="false">http://www.se-radio.net/?p=1701</guid><description>Eberhard Wolff talks with Eric Evans, the founder of domain-driven design (DDD), about its impact after 10 years. DDD consists of domain-modelling patterns; it has established itself as a sound approach for designing systems with complex requirements. The show covers an introduction to DDD, how the community&amp;#8217;s understanding of DDD has changed in the last [&amp;#8230;]&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/VHSdy65fBvk" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2015/05/se-radio-episode-226-eric-evans-on-domain-driven-design-at-10-years/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">3</slash:comments><itunes:subtitle>Eberhard Wolff talks with Eric Evans, the founder of domain-driven design (DDD), about its impact after 10 years. DDD consists of domain-modelling patterns; it has established itself as a sound approach for designing systems with complex requirements.</itunes:subtitle><itunes:summary>Eberhard Wolff talks with Eric Evans, the founder of domain-driven design (DDD), about its impact after 10 years. DDD consists of domain-modelling patterns; it has established itself as a sound approach for designing systems with complex requirements. The show covers an introduction to DDD, how the community's understanding of DDD has changed in the last 10 years, the often overlooked component—strategic design, how to use DDD to design microservices, and the connection between microservices and the DDD bounded context. DDD originated during the era of object orientation and relational databases; the show concludes with a look at the recent impact of functional programming and NoSQL on DDD.

Venue: Internet/Skype
Related Materials

	Twitter @ericevans0
	Eric's company: http://domainlanguage.com/
	InfoQ: Eric Evans: Challenging the Fundamental Assumptions of DDD: http://www.infoq.com/news/2014/06/dddx-evans-challenging
	Domain-Driven Design: Tackling Complexity in the Heart of Software: http://www.amazon.com/gp/product/0321125215
	InfoQ: Eric Evans on How Technology Influences DDD: http://www.infoq.com/interviews/Technology-Influences-DDD
	SE Radio Episode 218: Udi Dahan on CQRS (Command Query Responsibility Segregation): http://www.se-radio.net/2015/01/episode-218-udi-dahan-on-cqrs-command-query-responsibility-segregation/
	InfoQ: Greg Young Discusses State Transitions in Domain-Driven Design and DDD Best Practices: http://www.infoq.com/interviews/greg-young-ddd
	InfoQ: Vaughn Vernon on the Actor Model and Domain-Driven Design: http://www.infoq.com/news/2013/06/actor-model-ddd
	Transcript of the show: http://www.infoq.com/minibooks/emag-microservice-architecture

 </itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>54:25</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/uw6Xp6Q5Sts/SE-Radio-Episode-226-Eric-Evans-on-Domain-Driven-Design-at-10-Years.mp3" fileSize="78425051" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2015/05/se-radio-episode-226-eric-evans-on-domain-driven-design-at-10-years/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/uw6Xp6Q5Sts/SE-Radio-Episode-226-Eric-Evans-on-Domain-Driven-Design-at-10-Years.mp3" length="78425051" type="audio/mpeg" /><feedburner:origEnclosureLink>http://traffic.libsyn.com/seradio/SE-Radio-Episode-226-Eric-Evans-on-Domain-Driven-Design-at-10-Years.mp3</feedburner:origEnclosureLink></item><item><title>Episode 225: Brendan Gregg on Systems Performance</title><link>http://feedproxy.google.com/~r/se-radio/~3/2bknCFtzZl0/</link><category>Episodes</category><category>benchmarks</category><category>dtrace</category><category>linux</category><category>performance</category><category>runtime</category><category>solaris</category><category>systems</category><category>troubleshooting</category><category>tuning</category><category>virtualization</category><category>visualization</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Mon, 27 Apr 2015 15:49:04 PDT</pubDate><guid isPermaLink="false">http://www.se-radio.net/?p=1675</guid><description>Senior performance architect and author of *Systems Performance* Brendan Gregg talks with Robert Blumen about systems performance: how the hardware and OS layers affect application behavior. The discussion covers the scope of systems performance, systems performance in the software life cycle, the role of performance analysis in architecture, methodologies for solving performance problems, dynamic tracing [&amp;#8230;]&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/2bknCFtzZl0" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2015/04/se-radio-episode-225-brendan-gregg-on-systems-performance/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">1</slash:comments><itunes:subtitle>Senior performance architect and author of *Systems Performance* Brendan Gregg talks with Robert Blumen about systems performance: how the hardware and OS layers affect application behavior. The discussion covers the scope of systems performance,</itunes:subtitle><itunes:summary>Senior performance architect and author of *Systems Performance* Brendan Gregg talks with Robert Blumen about systems performance: how the hardware and OS layers affect application behavior. The discussion covers the scope of systems performance, systems performance in the software life cycle, the role of performance analysis in architecture, methodologies for solving performance problems, dynamic tracing and tracing tools such as DTrace, the disk and file subsystems, the CPU and memory subsystems, and the challenges virtualization poses for performance analysts.

Venue: Skype
Related Links

	Systems Performance: Enterprise and the Cloud by Brendan Gregg: http://www.brendangregg.com/sysperfbook.html
	DTrace: Dynamic Tracing in Oracle Solaris, Mac OS X, and FreeBSD (Oracle Solaris Series): http://www.amazon.com/DTrace-Dynamic-Tracing-Solaris-FreeBSD/dp/0132091518
	Brendan Gregg's home page: http://www.brendangregg.com/
	Brendan Gregg's blog: http://www.brendangregg.com/blog/index.html
	Brendan Gregg on Twitter: https://twitter.com/brendangregg
	Brendan Gregg videos: http://brendangregg.com/index.html#Videos
	Brendan Gregg on SlideShare: http://www.slideshare.net/brendangregg/
	Shouting in the Data Center: https://www.youtube.com/watch?v=tDacjrSCeq4&amp;list=PL53645214EDFD773F
	The DTrace Project: http://dtrace.org/blogs/
	FlameGraph on GitHub: https://github.com/brendangregg/FlameGraph</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>1:00:34</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/OHAiEKTmAto/SE-Radio-Episode-225-Brendan-Gregg-on-Systems-Performance.mp3" fileSize="116303200" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2015/04/se-radio-episode-225-brendan-gregg-on-systems-performance/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/OHAiEKTmAto/SE-Radio-Episode-225-Brendan-Gregg-on-Systems-Performance.mp3" length="116303200" type="audio/mpeg" /><feedburner:origEnclosureLink>http://traffic.libsyn.com/seradio/SE-Radio-Episode-225-Brendan-Gregg-on-Systems-Performance.mp3</feedburner:origEnclosureLink></item><item><title>Episode 224: Sven Johann and Eberhard Wolff on Technical Debt</title><link>http://feedproxy.google.com/~r/se-radio/~3/BYwVzcTjdjY/</link><category>Episodes</category><category>quality</category><category>quality investments</category><category>strategic design</category><category>technical debt</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Wed, 01 Apr 2015 09:59:09 PDT</pubDate><guid isPermaLink="false">http://www.se-radio.net/?p=1668</guid><description>In this episode, Sven Johann and Eberhard Wolff talk about technical debt and how to handle it. They begin by defining external and internal quality and then talk about technical debt as a metaphor for discussing quality with management. They then consider whether technical debt is bad and how to handle it by using Eric [&amp;#8230;]&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/BYwVzcTjdjY" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2015/04/episode-224-sven-johann-and-eberhard-wolff-on-technical-debt/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">6</slash:comments><itunes:subtitle>In this episode, Sven Johann and Eberhard Wolff talk about technical debt and how to handle it. They begin by defining external and internal quality and then talk about technical debt as a metaphor for discussing quality with management.</itunes:subtitle><itunes:summary>In this episode, Sven Johann and Eberhard Wolff talk about technical debt and how to handle it. They begin by defining external and internal quality and then talk about technical debt as a metaphor for discussing quality with management. They then consider whether technical debt is bad and how to handle it by using Eric Evan's strategic design. The show explores the reasons for technical debt; Martin Fowler's quadrant model is good for categorizing the root causes. Approaches to handling technical debt include the radical question of whether technical debt should be repaid at all. After all, debt-free systems actually might not exist, which leads to the question of whether technical debt is a good metaphor. Quality investments based on the SQALE (Software Quality Assessment based on Lifecycle Expectations) provide a different metaphor and another way to handle technical debt.

Venue: Skype
Related Links

	InfoQ article on managing technical debt by Sven Johann and Eberhard Wolff: http://www.infoq.com/articles/managing-technical-debt
	InfoQ article on quality investments by Felix Müller and Eberhard Wolff: http://www.infoq.com/articles/no-more-technical-debt
	SQALE Quality Model: http://www.sqale.org/
	Presentation on Strategic Design by Eric Evans: http://www.infoq.com/presentations/strategic-design-evans
	Martin Fowler's quadrant model for technical debt: http://martinfowler.com/bliki/TechnicalDebtQuadrant.html
	Eric Ries talks about code as waste unless it serves a business case: http://www.entrepreneuronfire.com/podcast/eric-ries-interview-of-the-lean-start-up-with-john-lee-dumas-of-entrepreneur-on-fire/</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>56:58</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/TWU3M8MFcVA/SE-Radio-Episode-224-Sven-Johann-Eberhard-Wolff-on-Technical-Debt.mp3" fileSize="136757526" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2015/04/episode-224-sven-johann-and-eberhard-wolff-on-technical-debt/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/TWU3M8MFcVA/SE-Radio-Episode-224-Sven-Johann-Eberhard-Wolff-on-Technical-Debt.mp3" length="136757526" type="audio/mpeg" /><feedburner:origEnclosureLink>http://traffic.libsyn.com/seradio/SE-Radio-Episode-224-Sven-Johann-Eberhard-Wolff-on-Technical-Debt.mp3</feedburner:origEnclosureLink></item><item><title>Episode 223: Joram Barrez on the Activiti Business Process Management Platform</title><link>http://feedproxy.google.com/~r/se-radio/~3/IRu0c1cXcjc/</link><category>Episodes</category><category>activiti</category><category>alfresco</category><category>bpmn2</category><category>open source</category><category>workflow</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Wed, 18 Mar 2015 13:49:02 PDT</pubDate><guid isPermaLink="false">http://www.se-radio.net/?p=1653</guid><description>Josh Long talks to Activiti cofounder Joram Barrez about the wide world of (open source) workflow engines, the Activiti BPMN2 engine, and what workflow implies when you’re building process-driven applications and services. Joram was originally a contributor to the jBPM project with jBPM founder Tom Baeyens at Red Hat. He cofounded Activiti in 2010 at [&amp;#8230;]&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/IRu0c1cXcjc" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2015/03/episode-223-joram-barrez-on-the-activiti-business-process-management-platform/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">1</slash:comments><itunes:subtitle>Josh Long talks to Activiti cofounder Joram Barrez about the wide world of (open source) workflow engines, the Activiti BPMN2 engine, and what workflow implies when you’re building process-driven applications and services.</itunes:subtitle><itunes:summary>Josh Long talks to Activiti cofounder Joram Barrez about the wide world of (open source) workflow engines, the Activiti BPMN2 engine, and what workflow implies when you’re building process-driven applications and services. Joram was originally a contributor to the jBPM project with jBPM founder Tom Baeyens at Red Hat. He cofounded Activiti in 2010 at Alfresco. In this interview, Joram talks about the state of workflow systems and the disruption of open source. He looks at use cases that are well served by Activiti. Moving to a process-centric approach has its challenges, and Joram talks about application integration strategies for workflow.

Venue: Internet
Related Links

	The Activiti open source BPMN2 workflow engine: http://activiti.org
	Joram on Twitter: http://twitter.com/jbarrez
	Episode 198: Wil van der Aalst on Workflow Management Systems: www.se-radio.net/2013/10/episode-198-wil-van-der-aalst
	jBPM: www.jbpm.org
	Activiti on GitHub: http://github.com/Activiti
	The Alfresco Activiti product: www.alfresco.com/products/activiti</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>1:02:16</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/7mDTyGykhJk/SE-Radio-Episode-223-Joram-Barrez-Activiti-Business-Management-Platform.mp3" fileSize="89728097" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2015/03/episode-223-joram-barrez-on-the-activiti-business-process-management-platform/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/7mDTyGykhJk/SE-Radio-Episode-223-Joram-Barrez-Activiti-Business-Management-Platform.mp3" length="89728097" type="audio/mpeg" /><feedburner:origEnclosureLink>http://traffic.libsyn.com/seradio/SE-Radio-Episode-223-Joram-Barrez-Activiti-Business-Management-Platform.mp3</feedburner:origEnclosureLink></item><item><title>Episode 222: Nathan Marz on Real-Time Processing with Apache Storm</title><link>http://feedproxy.google.com/~r/se-radio/~3/rK5--66FM8M/</link><category>Episodes</category><category>apache</category><category>Apache Storm</category><category>consumers</category><category>distributed systems</category><category>fault tolerance</category><category>hadoop</category><category>hash functions</category><category>Lambda architecture</category><category>MapReduce</category><category>message broker</category><category>Nathan Marz</category><category>producers</category><category>real-time processing</category><category>scalability</category><category>Storm</category><category>streaming</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Fri, 06 Mar 2015 09:32:44 PST</pubDate><guid isPermaLink="false">http://www.se-radio.net/?p=1644</guid><description>Nathan Marz is the creator of Apache Storm, a real-time streaming application. Storm does for stream processing what Hadoop does for batch processing. The project began when Nathan was working on aggregating Twitter data using a queue-and-worker system he had designed. Many companies use Storm, including Spotify, Yelp, WebMD, and many others. Jeff and Nathan [&amp;#8230;]&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/rK5--66FM8M" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2015/03/episode-222-nathan-marz-on-real-time-processing-with-apache-storm/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><itunes:subtitle>Nathan Marz is the creator of Apache Storm, a real-time streaming application. Storm does for stream processing what Hadoop does for batch processing. The project began when Nathan was working on aggregating Twitter data using a queue-and-worker system...</itunes:subtitle><itunes:summary>Nathan Marz is the creator of Apache Storm, a real-time streaming application. Storm does for stream processing what Hadoop does for batch processing. The project began when Nathan was working on aggregating Twitter data using a queue-and-worker system he had designed. Many companies use Storm, including Spotify, Yelp, WebMD, and many others. Jeff and Nathan talk about the basic abstractions of Storm: spouts (computation sources), bolts (process input streams and produce new output streams), and topologies (networks of spouts and bolts). These simplifying core concepts are analogous to map and reduce in Hadoop. Nathan attributes Storm’s success to the simplicity of these components. After exploring the basics of Storm, Jeff and Nathan talk about the fundamentals of Lambda architecture. You can use Storm with a batch tool such as Hadoop to form a Lambda architecture. The conversation continues with discussions of examples, common failure cases, and guarantees of Storm.

Venue: Internet
Related Links

	Apache Storm project: https://storm.apache.org
	Storm on Twitter: https://twitter.com/stormprocessor
	Nathan Marz's homepage: http://nathanmarz.com
	Nathan Marz's Twitter: https://twitter.com/nathanmarz
	Manning book on Storm: http://manning.com/marz
	Nathan Marz presents Storm on YouTube: https://www.youtube.com/watch?v=bdps8tE0gYo

 </itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>57:22</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/s0lh95OSbMQ/SE-Radio-Episode-222-Nathan-Marz-on-Real-Time-Processing-with-Apache-Storm.mp3" fileSize="55118537" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2015/03/episode-222-nathan-marz-on-real-time-processing-with-apache-storm/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/s0lh95OSbMQ/SE-Radio-Episode-222-Nathan-Marz-on-Real-Time-Processing-with-Apache-Storm.mp3" length="55118537" type="audio/mpeg" /><feedburner:origEnclosureLink>http://traffic.libsyn.com/seradio/SE-Radio-Episode-222-Nathan-Marz-on-Real-Time-Processing-with-Apache-Storm.mp3</feedburner:origEnclosureLink></item><item><title>Episode 221: Jez Humble on Continuous Delivery</title><link>http://feedproxy.google.com/~r/se-radio/~3/rcj1PVv-Bbc/</link><category>Episodes</category><category>continuous delivery</category><category>devops</category><category>operations</category><category>version control</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Tue, 24 Feb 2015 11:50:44 PST</pubDate><guid isPermaLink="false">http://www.se-radio.net/?p=1631</guid><description>Johannes Thönes interviews Jez Humble, senior vice president at Chef, about continuous delivery (CD). They discuss continuous delivery and how it was done at Go, CD, and HP firmware; the benefits of continuous delivery for developers; Conway&amp;#8217;s law and cross-functional teams; scary releases and nonscary releases; fix-forward, blue-green deployments, and A/B testing; origins of continuous [&amp;#8230;]&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/rcj1PVv-Bbc" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2015/02/episode-221-jez-humble-on-continuous-delivery/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">9</slash:comments><itunes:subtitle>Johannes Thönes interviews Jez Humble, senior vice president at Chef, about continuous delivery (CD). They discuss continuous delivery and how it was done at Go, CD, and HP firmware; the benefits of continuous delivery for developers; Conway's law and ...</itunes:subtitle><itunes:summary>Johannes Thönes interviews Jez Humble, senior vice president at Chef, about continuous delivery (CD). They discuss continuous delivery and how it was done at Go, CD, and HP firmware; the benefits of continuous delivery for developers; Conway's law and cross-functional teams; scary releases and nonscary releases; fix-forward, blue-green deployments, and A/B testing; origins of continuous delivery in lean; cycle time from check-in to live; the deployment pipeline; separate release and deployment; link to DevOps; continuous delivery in regulated environments; "everybody is responsible for the delivery process"; changing the culture to DevOps; stopping the production line; everything in version control; trunk-based development; configuration management; and container visualization. They end the interview by talking about how to quantify culture from the 2014 DevOps report.

Venue: XConf Hamburg 2014, Lindner Hotel, Hamburg
Related Links

	Book: Jez Humble and David Farley, Continuous Delivery: Reliable Software Releases through Build, Test, and Deployment Automation: http://amzn.com/0321601912
	Book: Jez Humble at al., Lean Enterprise: How High Performance Organizations Innovate at Scale: http://amzn.com/1449368425
	IMVU’s approach to integrating quality assurance with continuous deployment: http://engineering.imvu.com/2010/04/09/imvus-approach-to-integrating-quality-assurance-with-continuous-deployment/
	Book: Gary Groover et al., A Practical Approach to Large-Scale Agile Development: How HP Transformed LaserJet FutureSmart Firmware: http://amzn.com/0321821726
	Stevey Yegge's Google Platforms Rant: http://steverant.pen.io/
	Martin Fowler: Strangler Application: http://martinfowler.com/bliki/StranglerApplication.html
	Book: Mary Poppendieck and Tom Poppendieck, Lean Software Development: An Agile Toolkit: http://amzn.com/0321150783
	Book: John Allspaw and Jesse Robbin, Web Operations: Keeping the Data on Time: http://amzn.com/1449377440
	2014 State of DevOps Report: http://puppetlabs.com/2014-devops-report
	This American Life - Episode 403: NUMMI: http://www.thisamericanlife.org/radio-archives/episode/403/NUMMI
	Episode 207: Mitchell Hashimoto on the Vagrant Project: http://www.se-radio.net/2014/07/episode-207-mitchell-hashimoto-on-the-vagrant-project/
	Episode 211: Continuous Delivery on Windows with Rachel Laycock and Max Lincoln: http://www.se-radio.net/2014/09/episode-211-continuous-delivery-on-windows-with-rachel-laycock-and-max-lincoln/
	Episode 217: James Turnbull on Docker: http://www.se-radio.net/2015/01/episode-217-james-turnbull-on-docker/
	@jezhumble on Twitter: https://twitter.com/jezhumble
	Jez Humble homepage: http://continuousdelivery.com/ (see upcoming talks section for appearances)</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>1:05:46</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/XXX76J2eyoI/SE-Radio-Episode-221-Jez-Humble-on-Continuous-Delivery.mp3" fileSize="55293697" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2015/02/episode-221-jez-humble-on-continuous-delivery/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/XXX76J2eyoI/SE-Radio-Episode-221-Jez-Humble-on-Continuous-Delivery.mp3" length="55293697" type="audio/mpeg" /><feedburner:origEnclosureLink>http://traffic.libsyn.com/seradio/SE-Radio-Episode-221-Jez-Humble-on-Continuous-Delivery.mp3</feedburner:origEnclosureLink></item><item><title>Episode 220: Jon Gifford on Logging and Logging Infrastructure</title><link>http://feedproxy.google.com/~r/se-radio/~3/7hRxnV5ueM4/</link><category>Episodes</category><category>analytics</category><category>database</category><category>devops</category><category>distributed systems</category><category>logging</category><category>performance</category><category>runtime</category><category>search</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Wed, 18 Feb 2015 10:43:59 PST</pubDate><guid isPermaLink="false">http://www.se-radio.net/?p=1622</guid><description>Robert Blumen talks to Jon Gifford of Loggly about logging and logging infrastructure. Topics include logging defined, purposes of logging, uses of logging in understanding the run-time behavior of programs, who produces logs, who consumes logs and for what reasons, software as the consumer of logs, log formats (structured versus free form), log meta-data, logging [&amp;#8230;]&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/7hRxnV5ueM4" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2015/02/episode-220-jon-gifford-on-logging-and-logging-infrastructure/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">2</slash:comments><itunes:subtitle>Robert Blumen talks to Jon Gifford of Loggly about logging and logging infrastructure. Topics include logging defined, purposes of logging, uses of logging in understanding the run-time behavior of programs, who produces logs,</itunes:subtitle><itunes:summary>Robert Blumen talks to Jon Gifford of Loggly about logging and logging infrastructure. Topics include logging defined, purposes of logging, uses of logging in understanding the run-time behavior of programs, who produces logs, who consumes logs and for what reasons, software as the consumer of logs, log formats (structured versus free form), log meta-data, logging APIs, logging as coding, logging and frameworks, the massive hairball of log file management, modern logging infrastructure in which log records are stored and indexed in a search engine, how searchable logs have transformed the uses of log data, log data and analytics, leveraging the log database for statistical insights, performance and resource issues of logging, are logs really different than other data that systems record in databases, and how log visualization gives users insights into their system. The show wraps up with a discussion of open source logging platforms versus commercial SAAS providers.

Venue: Loggly office, San Francisco, California
Related Links

	Loggly homepage: https://www.loggly.com/
	Loggly on Twitter: https://twitter.com/loggly
	Graylog open source project: http://graylog2.org/
	The Authoritative Guide to Understanding the Concepts Surrounding Logging and Log Management: http://www.amazon.com/Logging-Log-Management-Authoritative-Understanding/dp/1597496359
	Apache log4j project: http://logging.apache.org/log4j/2.x/
	Logback open source project: http://logback.qos.ch/
	Logstash open source log management tool: http://logstash.net/
	Jon Gifford on Twitter: https://twitter.com/jongifford</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>54:13</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/-In4c7ehGIM/SE-Radio-Episode-220-Jon-Gifford-Logging-Infrastructure.mp3" fileSize="45593864" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2015/02/episode-220-jon-gifford-on-logging-and-logging-infrastructure/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/-In4c7ehGIM/SE-Radio-Episode-220-Jon-Gifford-Logging-Infrastructure.mp3" length="45593864" type="audio/mpeg" /><feedburner:origEnclosureLink>http://traffic.libsyn.com/seradio/SE-Radio-Episode-220-Jon-Gifford-Logging-Infrastructure.mp3</feedburner:origEnclosureLink></item><item><title>Episode 219: Apache Kafka with Jun Rao</title><link>http://feedproxy.google.com/~r/se-radio/~3/mgE8EKizWU4/</link><category>Episodes</category><category>apache</category><category>Apache Kafka</category><category>big data</category><category>data warehouse</category><category>distributed systems</category><category>durability</category><category>frameworks</category><category>messaging</category><category>open source</category><category>pubsub</category><category>queues</category><category>reliability</category><category>streaming</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Mon, 09 Feb 2015 14:41:28 PST</pubDate><guid isPermaLink="false">http://www.se-radio.net/?p=1614</guid><description>Jeff Meyerson talks to Jun Rao, a software engineer and researcher (formerly of LinkedIn). Jun has spent much of his time researching MapReduce, scalable databases, query processing, and other facets of the data warehouse. For the past three years, he has been a committer to the Apache Kafka project. Jeff and Jun first compare streaming [&amp;#8230;]&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/mgE8EKizWU4" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2015/02/episode-219-apache-kafka-with-jun-rao/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">6</slash:comments><itunes:subtitle>Jeff Meyerson talks to Jun Rao, a software engineer and researcher (formerly of LinkedIn). Jun has spent much of his time researching MapReduce, scalable databases, query processing, and other facets of the data warehouse. For the past three years,</itunes:subtitle><itunes:summary>Jeff Meyerson talks to Jun Rao, a software engineer and researcher (formerly of LinkedIn). Jun has spent much of his time researching MapReduce, scalable databases, query processing, and other facets of the data warehouse. For the past three years, he has been a committer to the Apache Kafka project. Jeff and Jun first compare streaming to messaging, and the frameworks that support each. Kafka is a big data messaging or pub/sub system. Traditionally, these are two different types of systems, but the lines have become blurred recently. Kafka can also be looked at as a distributed commit log. Next, they discuss the vocabulary of Kafka, including producers and consumers. They wrap up by exploring Kafka from the perspective of durability and reliability and discuss some failure cases.

Venue: Internet
Related Links

	Apache Kafka: http://kafka.apache.org
	Original Kafka paper: http://research.microsoft.com/en-us/um/people/srikanth/netdb11/netdb11papers/netdb11-final12.pdf
	Kafka Basic Training: http://www.slideshare.net/miguno/apache-kafka-08-basic-training-verisign
	Building LinkedIn's Real-time Activity Data Pipeline: http://sites.computer.org/debull/A12june/pipeline.pdf
	Kafka: A Little Introduction: https://speakerdeck.com/pingles/kafka-a-little-introduction
	Apache Storm: https://storm.apache.org
	Apache Samza: http://samza.incubator.apache.org
	Apache Zookeeper: http://zookeeper.apache.org</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>1:03:00</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/qCnBjuv5xw0/SE-Radio219-JunRao-ApacheKafka.mp3" fileSize="60533198" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2015/02/episode-219-apache-kafka-with-jun-rao/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/qCnBjuv5xw0/SE-Radio219-JunRao-ApacheKafka.mp3" length="60533198" type="audio/mpeg" /><feedburner:origEnclosureLink>http://traffic.libsyn.com/seradio/SE-Radio219-JunRao-ApacheKafka.mp3</feedburner:origEnclosureLink></item><item><title>Episode 218: Udi Dahan on CQRS (Command Query Responsibility Segregation)</title><link>http://feedproxy.google.com/~r/se-radio/~3/E19AzeJHGZ4/</link><category>Episodes</category><category>CQRS</category><category>design patterns</category><category>distributed systems</category><category>domain-driven design</category><category>enterprise integration patterns</category><category>event sourcing</category><category>polyglot persistence</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Fri, 30 Jan 2015 13:26:42 PST</pubDate><guid isPermaLink="false">http://www.se-radio.net/?p=1608</guid><description>Guest Udi Dahan talks with host Robert Blumen about the CQRS (command query responsibility segregation) architectural pattern. The discussion begins with a review of the command pattern. Then a high-level overview of CQRS, which consists of a separation of a command processing subsystem that updates a write model from one or more distinct and separate, [&amp;#8230;]&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/E19AzeJHGZ4" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2015/01/episode-218-udi-dahan-on-cqrs-command-query-responsibility-segregation/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">3</slash:comments><itunes:subtitle>Guest Udi Dahan talks with host Robert Blumen about the CQRS (command query responsibility segregation) architectural pattern. The discussion begins with a review of the command pattern. Then a high-level overview of CQRS,</itunes:subtitle><itunes:summary>Guest Udi Dahan talks with host Robert Blumen about the CQRS (command query responsibility segregation) architectural pattern. The discussion begins with a review of the command pattern. Then a high-level overview of CQRS, which consists of a separation of a command processing subsystem that updates a write model from one or more distinct and separate, eventually consistent read models. Udi gives some insights into the relationship between CQRS and DDD (domain driven design) and the importance of involving a domain expert in the breakdown of a system into user-driven tasks, which become the basis for the commands. They then explore possibility of multiple read models, residing in different data stores, each one designed around the needs of different application views. They move into an exploration of the middleware technologies required to support the movement of updates between the write model and read models, including issues of concurrency, sequencing, and how much work can be done by the framework. Event sourcing, another pattern closely associated with CQRS is introduced, followed by a discussion about connections between event sourcing and CQRS. The host gets slightly confused on the boundaries between the two patterns, and Udi clarifies the distinction. They wrap up with some thoughts about why CQRS has received more attention in the Microsoft enterprise community than the Linux world, and Udi gives a detailed breakdown of where to learn about CQRS on the Web.

Venue: Internet
Related Links

	Udi Dahan's blog: http://udidahan.com/
	Greg Young's CQRS blog: http://goodenoughsoftware.net/2012/03/02/cqrs/
	CQRS case study on MSDN: http://msdn.microsoft.com/en-us/library/jj554200.aspx
	Domain Driven Design, the book, by Eric Evans: http://www.amazon.com/Domain-Driven-Design-Tackling-Complexity-Software/dp/0321125215
	Implementing Domain Driven Design by Vaughan Vernon: http://www.amazon.com/Implementing-Domain-Driven-Design-Vaughn-Vernon/dp/0321834577/
	The EventStore open-source database: http://geteventstore.com/
	The Particular Service Platform for .NET: http://particular.net/
	CQRS mailing list: https://groups.google.com/forum/#!forum/dddcqrs
	Software Engineering Radio Episode 8: Eric Evans on Domain-Driven Design: http://www.se-radio.net/2006/03/episode-8-interview-eric-evans/
	Software Engineering Radio Episode 189: Eric Lubow on Polyglot Persistence: http://www.se-radio.net/2012/11/episode-189-eric-lubow-on-polyglot-persistence/</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>1:02:27</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/Kj5rKgRdyQU/SE-Radio218-UdiDahan-CQRS.mp3" fileSize="52516661" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2015/01/episode-218-udi-dahan-on-cqrs-command-query-responsibility-segregation/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/Kj5rKgRdyQU/SE-Radio218-UdiDahan-CQRS.mp3" length="52516661" type="audio/mpeg" /><feedburner:origEnclosureLink>http://traffic.libsyn.com/seradio/SE-Radio218-UdiDahan-CQRS.mp3</feedburner:origEnclosureLink></item><item><title>Episode 217: James Turnbull on Docker</title><link>http://feedproxy.google.com/~r/se-radio/~3/9Iwa3BvabCY/</link><category>Episodes</category><category>devops</category><category>distributed systems</category><category>infrastructure</category><category>operations</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Wed, 07 Jan 2015 09:15:54 PST</pubDate><guid isPermaLink="false">http://www.se-radio.net/?p=1600</guid><description>James Turnbull joins Charles Anderson to discuss Docker, an open source platform for distributed applications for developers and system administrators. Topics include Linux containers and the functions they provide, container images and how they are built, use cases for containers, and the future of containers versus virtual machines. Venue: Internet Related Links James’s home page: [&amp;#8230;]&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/9Iwa3BvabCY" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2015/01/episode-217-james-turnbull-on-docker/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">6</slash:comments><itunes:subtitle>James Turnbull joins Charles Anderson to discuss Docker, an open source platform for distributed applications for developers and system administrators. Topics include Linux containers and the functions they provide,</itunes:subtitle><itunes:summary>James Turnbull joins Charles Anderson to discuss Docker, an open source platform for distributed applications for developers and system administrators. Topics include Linux containers and the functions they provide, container images and how they are built, use cases for containers, and the future of containers versus virtual machines.

Venue: Internet
Related Links

	James’s home page: http://www.jamesturnbull.net
	James on Twitter: @kartar
	Docker Project Site: http://docker.com
	Docker Documentation: https://docs.docker.com
	The Docker Book: http://www.dockerbook.com
	The Logstash Book: http://www.logstashbook.com
	Pro Puppet: http://www.apress.com/9781430260400
	Pro Linux System Administration: http://www.apress.com/9781430219125
	Hardening Linux: http://www.apress.com/9781590594445
	CoreOS: https://coreos.com
	Fig Project: http://www.fig.sh

 </itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><media:content url="http://feedproxy.google.com/~r/se-radio/~5/YRfZB8wWxBs/SE-Radio217-JamesTurnbull-Docker.mp3" fileSize="5242880" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2015/01/episode-217-james-turnbull-on-docker/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/YRfZB8wWxBs/SE-Radio217-JamesTurnbull-Docker.mp3" length="5242880" type="audio/mpeg" /><feedburner:origEnclosureLink>http://traffic.libsyn.com/seradio/SE-Radio217-JamesTurnbull-Docker.mp3</feedburner:origEnclosureLink></item><item><title>Episode 216: Adrian Cockcroft on the Modern Cloud-based Platform</title><link>http://feedproxy.google.com/~r/se-radio/~3/ee9X3c4dRBM/</link><category>Episodes</category><category>cloud</category><category>continuous delivery</category><category>devops</category><category>infrastructure</category><category>paas</category><category>windows</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Tue, 09 Dec 2014 14:04:17 PST</pubDate><guid isPermaLink="false">http://www.se-radio.net/?p=1591</guid><description>Adrian Cockcroft discusses the challenges in creating a dynamic, flexible, cloud-based platform with SE Radio host Stefan Tilkov. After briefly discussing the definition of “cloud computing,” Adrian explains the history behind Netflix’s move to the cloud (which he led). After highlighting some of the differences that have developers and architects must face, Adrian talks about [&amp;#8230;]&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/ee9X3c4dRBM" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2014/12/episode-216-adrian-cockcroft-on-the-modern-cloud-based-platform/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">12</slash:comments><itunes:subtitle>Adrian Cockcroft discusses the challenges in creating a dynamic, flexible, cloud-based platform with SE Radio host Stefan Tilkov. After briefly discussing the definition of “cloud computing,” Adrian explains the history behind Netflix’s move to the clo...</itunes:subtitle><itunes:summary>Adrian Cockcroft discusses the challenges in creating a dynamic, flexible, cloud-based platform with SE Radio host Stefan Tilkov. After briefly discussing the definition of “cloud computing,” Adrian explains the history behind Netflix’s move to the cloud (which he led). After highlighting some of the differences that have developers and architects must face, Adrian talks about lessons for other kinds of companies and industries. Microservices and microservices architecture are a hot topic and Netflix is one of the more well-known references. The discussion covers this and the implications of such an approach as well as the technical means used to implement such an approach — the various open-source libraries provided by Netflix as well as the underlying Amazon platform. Next, Adrian explains the reasoning behind open-sourcing so many internal products in the first place, and how others might benefit from it (providing some examples of companies that already do so). Stefan and Adrian also talk about vendor lock-in, finding the right cloud strategy depending on your requirements, future directions and expectations, and Adrian’s new role at VC company Battery Ventures, and finally Adrian provides some hints as to how listeners might go about familiarizing themselves with this new type of architecture.

Adrian Cockcroft is a Technology Fellow at Battery Ventures, and served as a Chief Architect and Director of Web Engineering at Netflix, Inc. At Netflix, Adrian was responsible for research and development of scalable personalized web architectures, and led Netflix’s efforts to move to a fully cloud-based architecture. Prior to Netflix, Adrian worked for eBay, where he was a founding member of eBay Research Labs. Prior to eBay, he spent 16 years at Sun Microsystems, became a Distinguished Engineer in 1999, and served as Chief Architect and Product Boss for Sun's High Performance Technical Computing business Unit. He is best known as the author of four books including Sun Performance and Tuning, and is a well-known speaker at international conferences.

Venue: Internet

Related Links

	Adrian’s Book on Sun Performance Tuning: http://www.amazon.com/Sun-Performance-Tuning-Java-Internet/dp/0130952494/
	The chaos monkey and the simian army: http://techblog.netflix.com/2011/07/netflix-simian-army.html
	Microservices: http://martinfowler.com/articles/microservices.html
	Amazon ELB: http://aws.amazon.com/elasticloadbalancing/
	Eureka: https://github.com/Netflix/eureka
	Ribbon: https://github.com/Netflix/ribbon
	Karyon: https://github.com/Netflix/karyon
	Route 53: http://aws.amazon.com/route53/
	The CAP Theorem: http://www.infoq.com/articles/cap-twelve-years-later-how-the-rules-have-changed
	Michael Nygard’s “Release It!” http://www.amazon.com/Release-It-Production-Ready-Pragmatic-Programmers/dp/0978739213
	Hystrix: https://github.com/Netflix/Hystrix
	Pets vs. Cattle, originally by Bill Baker, as per http://www.slideshare.net/randybias/architectures-for-open-and-scalable-clouds (slide 20)
	Bounded Context concept from Domain Driven Design (DDD): http://martinfowler.com/bliki/BoundedContext.html
	Netflix Open Source Home: http://netflix.github.io
	Netflix Scumblr: https://github.com/Netflix/Scumblr
	Docker: https://www.docker.com
	BlueJeans http://bluejeans.com
	Security Monkey: https://github.com/Netflix/security_monkey</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>1:09:24</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/Ak5KsOhqO7Q/SE-Radio216-AdrianCockcroft-ModernCloudBasedPlatform.mp3" fileSize="50025305" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2014/12/episode-216-adrian-cockcroft-on-the-modern-cloud-based-platform/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/Ak5KsOhqO7Q/SE-Radio216-AdrianCockcroft-ModernCloudBasedPlatform.mp3" length="50025305" type="audio/mpeg" /><feedburner:origEnclosureLink>http://traffic.libsyn.com/seradio/SE-Radio216-AdrianCockcroft-ModernCloudBasedPlatform.mp3</feedburner:origEnclosureLink></item><item><title>Episode 215: Gang of Four – 20 Years Later</title><link>http://feedproxy.google.com/~r/se-radio/~3/n0fPS77uv1c/</link><category>Episodes</category><category>gang of four</category><category>patterns</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Thu, 20 Nov 2014 10:54:54 PST</pubDate><guid isPermaLink="false">http://www.se-radio.net/?p=1579</guid><description>Johannes Thönes talks with Erich Gamma, Ralph Johnson and Richard Helm from the Gang of Four about the 20th anniversary of their book Design Patterns. They discuss the following topics: the definition of a design pattern and each guest’s favorite design pattern; the origins of the book in architecture workshops; the writing of the book [&amp;#8230;]&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/n0fPS77uv1c" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2014/11/episode-215-gang-of-four-20-years-later/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">11</slash:comments><itunes:subtitle>Johannes Thönes talks with Erich Gamma, Ralph Johnson and Richard Helm from the Gang of Four about the 20th anniversary of their book Design Patterns. They discuss the following topics: the definition of a design pattern and each guest’s favorite desig...</itunes:subtitle><itunes:summary>Johannes Thönes talks with Erich Gamma, Ralph Johnson and Richard Helm from the Gang of Four about the 20th anniversary of their book Design Patterns. They discuss the following topics: the definition of a design pattern and each guest’s favorite design pattern; the origins of the book in architecture workshops; the writing of the book together with the community; the rock-star feeling at the release of the book at OOPSLA conference; the influence of the book on the industry; the evolution of the Observer pattern; and new patterns since the book was released. The interview closes with each guest talking about their current projects.

Venue: Internet
Related Links

	Design Patterns: Elements of Reusable Object-Oriented Software by Erich Gamma, Richard Helm, Ralph Johnson and John Vlissides: http://www.amazon.com/Design-Patterns-Object-Oriented-Professional-Computing/dp/0201634988
	Erich Gamma: http://en.wikipedia.org/wiki/Erich_Gamma
	Richard Helm: http://en.wikipedia.org/wiki/Richard_Helm
	Ralph Johnson: http://en.wikipedia.org/wiki/Ralph_Johnson_(computer_scientist)
	John Vlissides: http://en.wikipedia.org/wiki/John_Vlissides
	Episode 81: Interview Erich Gamma: http://www.se-radio.net/2007/12/episode-81-interview-erich-gamma/
	A Pattern Language: Towns, Buildings, Construction by Christopher Alexander A Pattern Language: Towns, Buildings, Construction by Christopher Alexander: http://www.amazon.com/Pattern-Language-Buildings-Construction-Environmental/dp/0195019199
	Kent Beck: http://en.wikipedia.org/wiki/Kent_Beck
	Grady Booch: http://en.wikipedia.org/wiki/Grady_Booch
	Episode 76: Special Episode on the Patterns Journal: http://www.se-radio.net/2007/11/episode-76-special-episode-on-the-patterns-journal/
	Episode 1: Patterns: http://www.se-radio.net/2006/01/episode-1-patterns/
	Chinese Gang of Four: http://en.wikipedia.org/wiki/Gang_of_Four
	Gang of Four, the post-punk group: http://en.wikipedia.org/wiki/Gang_of_Four_(band)
	Team Blog: Visual Studio Online “Monaco”

Erich Gamma

	Twitter: @ErichGamma
	Team Blog: Visual Studio Online "Monaco"

Richard Helm

	Richard Helm at BCG Website: http://www.bcg.com/expertise_impact/BCG_fellows/technology/richard_helm.aspx
	BCG Value Pattern: https://www.bcgperspectives.com/content/articles/value_creation_strategy_corporate_strategy_portfolio_management_value_patterns/

Ralph Johnson

	Metaficient: http://metaficient.com/
	Twitter: @RalphJohnson</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>1:12:38</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/AsEiWH00c7A/SE-Radio215-JohannesThones-GangOfFour-v2.mp3" fileSize="69772532" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2014/11/episode-215-gang-of-four-20-years-later/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/AsEiWH00c7A/SE-Radio215-JohannesThones-GangOfFour-v2.mp3" length="69772532" type="audio/mpeg" /><feedburner:origEnclosureLink>http://traffic.libsyn.com/seradio/SE-Radio215-JohannesThones-GangOfFour-v2.mp3</feedburner:origEnclosureLink></item><item><title>Episode 214: Grant Ingersoll on his book, Taming Text</title><link>http://feedproxy.google.com/~r/se-radio/~3/GYVuL7jlE6A/</link><category>Episodes</category><category>Entity Recognition</category><category>Fuzzy String Matching</category><category>Google Now</category><category>IBM Watson</category><category>Lucene</category><category>mahout</category><category>OpenNLP</category><category>search</category><category>Siri</category><category>Solr</category><category>Taming Text</category><category>Turing Test</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Tue, 11 Nov 2014 13:49:53 PST</pubDate><guid isPermaLink="false">http://www.se-radio.net/?p=1572</guid><description>Grant Ingersoll, founder and CTO of LucidWorks, talks with Tobias Kaatz about his book Taming Text: How to Find, Organize, and Manipulate It. They begin by discussing popular existing systems for the automated understanding of contextual information. One such system, IBM Watson, drew attention for its victory in the &amp;#8220;Jeopardy&amp;#8221; game show. They proceed to [&amp;#8230;]&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/GYVuL7jlE6A" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2014/11/episode-214-grant-ingersoll-on-his-book-taming-text/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><itunes:subtitle>Grant Ingersoll, founder and CTO of LucidWorks, talks with Tobias Kaatz about his book Taming Text: How to Find, Organize, and Manipulate It. They begin by discussing popular existing systems for the automated understanding of contextual information.</itunes:subtitle><itunes:summary>Grant Ingersoll, founder and CTO of LucidWorks, talks with Tobias Kaatz about his book Taming Text: How to Find, Organize, and Manipulate It. They begin by discussing popular existing systems for the automated understanding of contextual information. One such system, IBM Watson, drew attention for its victory in the "Jeopardy" game show. They proceed to discuss Google Now and Siri, which take on the challenge of multiple languages and demonstrate the capabilities and limitations of this type of technology.

The second part of the interview focuses on related methodologies from the latter part of the book, including "fuzzy string matching" and "entity recognition," and their application to real world problems. The discussion wraps up as of the episode as Ingersoll and Kaatz look at challenges the search community is facing right now such as building Q&amp;A systems and understanding natural language across language barriers.

Venue: Internet
Related Links

	IBM Watson: http://www.ibm.com/smarterplanet/us/en/ibmwatson/
	LucidWorks: http://lucidworks.com
	“Eugene Goostman” passing turing test: http://mashable.com/2014/06/12/eugene-goostman-turing-test/
	Siri: https://www.apple.com/ios/siri/
	Google Now: https://www.google.com/landing/now/
	Lucene: https://lucene.apache.org/
	Mahout: https://mahout.apache.org/
	Apache Solr: https://lucene.apache.org/solr/
	Apache OpenNLP: https://opennlp.apache.org/
	IBMs neurosynaptic chips: http://www.research.ibm.com/cognitive-computing/neurosynaptic-chips.shtml
	Andrew Ng et. al : “Map-Reduce for Machine Learning on Multicore”: http://www.cs.stanford.edu/people/ang//papers/nips06-mapreducemulticore.pdf
	Apache Spark™: https://spark.apache.org/
	Lucene/Solr Revolution Conference: http://lucenerevolution.org/
	Taming Text (book): http://www.manning.com/ingersoll/
	SE Radio episode 187 on Apache Solr Search Engine: http://www.se-radio.net/2012/07/episode-187-grant-ingersoll-on-the-solr-search-engine/
	SE Radio episode 193 on Apache Mahout: http://www.se-radio.net/2013/04/episode-193-apache-mahout/</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>1:04:21</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/742nvoWIL00/SE-Radio214-GrantIngersoll-TamingText.mp3" fileSize="92671746" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2014/11/episode-214-grant-ingersoll-on-his-book-taming-text/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/742nvoWIL00/SE-Radio214-GrantIngersoll-TamingText.mp3" length="92671746" type="audio/mpeg" /><feedburner:origEnclosureLink>http://traffic.libsyn.com/seradio/SE-Radio214-GrantIngersoll-TamingText.mp3</feedburner:origEnclosureLink></item><item><title>Episode 213: James Lewis on Microservices</title><link>http://feedproxy.google.com/~r/se-radio/~3/cye0nKDqArI/</link><category>Episodes</category><category>architecture</category><category>enterprise service bus</category><category>http</category><category>microservice</category><category>service oriented architecture</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Wed, 29 Oct 2014 14:18:21 PDT</pubDate><guid isPermaLink="false">http://www.se-radio.net/?p=1550</guid><description>Johannes Thönes talks to James Lewis, principal consultant at ThoughtWorks, about microservices. They discuss microservices’ recent popularity, architectural styles, deployment, size, technical decisions, and consumer-driven contracts. They also compare microservices to service-oriented architecture and wrap up the episode by talking about key figures in the microservice community and standing on the shoulders of giants. Recording [&amp;#8230;]&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/cye0nKDqArI" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2014/10/episode-213-james-lewis-on-microservices/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">15</slash:comments><itunes:subtitle>Johannes Thönes talks to James Lewis, principal consultant at ThoughtWorks, about microservices. They discuss microservices’ recent popularity, architectural styles, deployment, size, technical decisions, and consumer-driven contracts.</itunes:subtitle><itunes:summary>Johannes Thönes talks to James Lewis, principal consultant at ThoughtWorks, about microservices. They discuss microservices’ recent popularity, architectural styles, deployment, size, technical decisions, and consumer-driven contracts. They also compare microservices to service-oriented architecture and wrap up the episode by talking about key figures in the microservice community and standing on the shoulders of giants.

Recording venue: ThoughtWorks North Europe Away Day, Sherwood Forest, Newark, Nottinghamshire, UK
Related Links

	Adrian Cockcroft (Groupon), Migrating to Microservices, QCon London 2014: http://www.infoq.com/presentations/migration-cloud-native
	Martin Fowler and Jim Webber (ThoughtWorks), Does My Bus Look Big in This?, QCon London 2008: http://www.infoq.com/presentations/soa-without-esb
	Continuous Delivery: Reliable Software Releases through Build, Test, and Deployment Automation by Jez Humble and David Farley
	Release It: Design and Deploy Production-Ready Software by Michael Nygard
	Hysterix (Circuit Breaker in Java): https://github.com/Netflix/Hystrix
	Conways Law--Paper: "How Do Committees Invent?"
	Inverse Conway Maneuver
	Pact: https://github.com/realestate-com-au/pact
	Pacto: http://thoughtworks.github.io/pacto/
	Microservices by James Lewis and Martin Fowler
	James Lewis Blog
	Building Microservices by Sam Newman
	The Netflix Tech Blog
	James Lewis on twitter: @boicy
	jalewis &lt;at&gt; thoughtworks &lt;dot&gt; com
	GOTO Berlin 2014 Conference</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>1:02:53</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/7YcEEK7kCHc/SE-Radio213-JamesLewis-on-Microservices.mp3" fileSize="90609035" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2014/10/episode-213-james-lewis-on-microservices/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/7YcEEK7kCHc/SE-Radio213-JamesLewis-on-Microservices.mp3" length="90609035" type="audio/mpeg" /><feedburner:origEnclosureLink>http://traffic.libsyn.com/seradio/SE-Radio213-JamesLewis-on-Microservices.mp3</feedburner:origEnclosureLink></item><item><title>Episode 212: Randy Shoup on Company Culture</title><link>http://feedproxy.google.com/~r/se-radio/~3/iH3bvy862N8/</link><category>Episodes</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Wed, 22 Oct 2014 10:51:52 PDT</pubDate><guid isPermaLink="false">http://www.se-radio.net/?p=1546</guid><description>Tobias Kaatz talks to former Kixeye CTO Randy Shoup about company culture in the software industry in this sequel to the show on hiring in the software industry (Episode 208). Prior to Kixeye, Randy worked as director of engineering at Google for the Google App Engine and as chief engineer and distinguished architect at eBay. [&amp;#8230;]&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/iH3bvy862N8" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2014/10/episode-212-randy-shoup-on-company-culture/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">4</slash:comments><itunes:subtitle>Tobias Kaatz talks to former Kixeye CTO Randy Shoup about company culture in the software industry in this sequel to the show on hiring in the software industry (Episode 208). Prior to Kixeye, Randy worked as director of engineering at Google for the G...</itunes:subtitle><itunes:summary>Tobias Kaatz talks to former Kixeye CTO Randy Shoup about company culture in the software industry in this sequel to the show on hiring in the software industry (Episode 208). Prior to Kixeye, Randy worked as director of engineering at Google for the Google App Engine and as chief engineer and distinguished architect at eBay. He has spoken on various occasions about how to build great teams and establish a company culture that supports teams in what they need to deliver.

In this interview, Randy talks about what a healthy company culture should look like and who is responsible for its development. He also shares his opinion on how teams should work and what they should look like. He then discusses key performance indicators (KPIs) that can measure success and show when managers and employees are on track.

Based on his experience working at various small and large companies, Randy presents examples of healthy and toxic company cultures and their effect on teams and products. He and Tobias also discuss whether multinational companies can still get their teams to be productive even when they’re located around the world.

Recording venue: Internet
Related Links

	Randy Shoup on Hiring in the Software Industry: http://www.se-radio.net/2014/08/episode-208-randy-shoup-on-hiring-in-the-software-industry/
	Randy Shoup on "The Virtuous Cycle of Velocity": http://youtu.be/EwLBoRyXTOI
	Randy Shoup on "Scalability at KIXEYE" (also on how to scale teams): http://www.infoq.com/presentations/kixeye-scalability
	KIXEYE "Chassis" on Github: https://github.com/Kixeye/chassis
	Netflix on Github: https://github.com/Netflix
	Randy on Twitter: https://twitter.com/randyshoup
	QCon San Francisco: http://qconsf.com/</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>1:00:39</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/nUHqW_uoJV4/SE-Radio212-RandyShoup-CompanyCulture.mp3" fileSize="29172899" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2014/10/episode-212-randy-shoup-on-company-culture/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/nUHqW_uoJV4/SE-Radio212-RandyShoup-CompanyCulture.mp3" length="29172899" type="audio/mpeg" /><feedburner:origEnclosureLink>http://traffic.libsyn.com/seradio/SE-Radio212-RandyShoup-CompanyCulture.mp3</feedburner:origEnclosureLink></item><item><title>Episode 211: Continuous Delivery on Windows with Rachel Laycock and Max Lincoln</title><link>http://feedproxy.google.com/~r/se-radio/~3/Criqy7ZP8oc/</link><category>Episodes</category><category>.net</category><category>agile</category><category>continuous delivery</category><category>devops</category><category>infrastructure</category><category>windows</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Tue, 30 Sep 2014 09:11:12 PDT</pubDate><guid isPermaLink="false">http://www.se-radio.net/?p=1538</guid><description>Johannes talks with Rachel Laycock and Max Lincoln from ThoughtWorks about continuous delivery on Windows. The outline includes: introduction to continuous delivery; continuous integration; DevOps and ChatOps; decisions to be taken when implementing continuous delivery on windows; build tools on windows; packaging and deploy on windows; infrastructure automation and infrastructure as code with chef, puppet [&amp;#8230;]&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/Criqy7ZP8oc" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2014/09/episode-211-continuous-delivery-on-windows-with-rachel-laycock-and-max-lincoln/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">3</slash:comments><itunes:subtitle>Johannes talks with Rachel Laycock and Max Lincoln from ThoughtWorks about continuous delivery on Windows. The outline includes: introduction to continuous delivery; continuous integration; DevOps and ChatOps; decisions to be taken when implementing co...</itunes:subtitle><itunes:summary>Johannes talks with Rachel Laycock and Max Lincoln from ThoughtWorks about continuous delivery on Windows. The outline includes: introduction to continuous delivery; continuous integration; DevOps and ChatOps; decisions to be taken when implementing continuous delivery on windows; build tools on windows; packaging and deploy on windows; infrastructure automation and infrastructure as code with chef, puppet or ansible; snowflake server versus phoenix server; Windows PowerShell; the relation between open source and Microsoft tools; why not to use Linux; current development in the windows DevOps space; licensing and proprietary software in continuous delivery.

Recording Venue: ThoughtWorks North American Away Day, The Westin Peachtree, Atlanta, Georgia
Related Links

	P2 Magazine: http://thoughtworks.github.io/p2
	Technical Radar: http://www.thoughtworks.com/radar/
	Travis CI: https://travis-ci.org
	Vagrant Rackspace Cloud Provider: https://github.com/mitchellh/vagrant-rackspace

Build and Tests

	MSBuild: http://msdn2.microsoft.com/en-us/library/0k6kkbsd.aspx
	psake: https://github.com/psake/psake

Continuous Integration Tools

	TeamCity: http://www.jetbrains.com/teamcity
	Jenkins: http://jenkins-ci.org
	go continous delivery: http://www.thoughtworks.com/products/go-continuous-delivery
	Windows PowerShell: http://www.microsoft.com/powershell
	Pester: https://github.com/pester/Pester

Desired State API

	Team Foundation Server (TFS): http://www.visualstudio.com/products/tfs-overview-vs

Packaging and Deploy

	msdeploy: http://technet.microsoft.com/en-gb/library/dd569106(v=ws.10).aspx

Windows Management Instance

	NuGet: http://www.nuget.org
	OneGet: https://github.com/OneGet/oneget
	chocolaty: https://chocolatey.org/
	windows remote management (WinRM): http://msdn.microsoft.com/en-us/library/aa384426(v=vs.85).aspx

Infrastructure as Code

	Puppet: http://puppetlabs.com/puppet/what-is-puppet
	Chef: http://www.getchef.com/chef/
	Ansible: http://www.ansible.com
	Test Kitchen: http://kitchen.ci
	serverspec: http://serverspec.org
	Chaos Monkey: https://github.com/Netflix/SimianArmy/wiki/Chaos-Monkey
	Packer: http://www.packer.io
	Docker: http://www.docker.com
	SE Radio Vagrant Show: Episode 207: Mitchell Hashimoto on the Vagrant Project
	

Articles about continuous delivery on windows in the P2 Magazine

	Part I: Blame your tools
	Part II: Deployment
	Part III: Infrastructure Automation
	Continuous Delivery: Tales from Windowsland by Rachel Laycock, Talk from GOTO Aarhus 2013
	Cloud-Based DevOps: Possible on Windows? by Rachel Laycock
	“What Microsoft is up to”: Windows Management Framework V5 Preview"
	OneGet: https://github.com/OneGet/oneget

PowerShellGet

	PowerShell Desired State Configuration
	Windows Management Framework V5 Preview - Windows Server Blog
	Windows Management Framework 5.0 Preview May 2014 is now available - Windows PowerShell Blog

Rachel Laycock

	Twitter: @rachellaycock
	Speaking at GOTO Amsterdam, June 18th to 20th 2014: http://gotocon.com/amsterdam-2014
	Speaking at Agile 2014, July 28th to August 1st 2014: http://agile2014.agilealliance.org

Max Lincoln

	GitHub: https://github.com/maxlinc</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>1:03:50</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/KBQLmUC7eoA/SE-Radio211-Laycock-Lincoln-ContinuousDeliveryOnWindows.mp3" fileSize="23241202" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2014/09/episode-211-continuous-delivery-on-windows-with-rachel-laycock-and-max-lincoln/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/KBQLmUC7eoA/SE-Radio211-Laycock-Lincoln-ContinuousDeliveryOnWindows.mp3" length="23241202" type="audio/mpeg" /><feedburner:origEnclosureLink>http://traffic.libsyn.com/seradio/SE-Radio211-Laycock-Lincoln-ContinuousDeliveryOnWindows.mp3</feedburner:origEnclosureLink></item><item><title>Episode 210: Stefan Tilkov on Architecture and Micro Services</title><link>http://feedproxy.google.com/~r/se-radio/~3/eT-iNwaMMHY/</link><category>Episodes</category><category>Micro services</category><category>software architecture</category><category>stefan tilkov</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Wed, 17 Sep 2014 15:54:56 PDT</pubDate><guid isPermaLink="false">http://www.se-radio.net/?p=1534</guid><description>Micro services is an emerging trend in software architecture that focuses on small, lightweight applications as a means to avoid large, unmaintainable, monolithic systems. This approach allows for individual technology stacks for each component and more resilient systems. Micro services uses well-known communication schemes such as REST but also require new technologies for the implementation. [&amp;#8230;]&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/eT-iNwaMMHY" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2014/09/episode-210-stefan-tilkov-on-architecture-and-micro-services/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">4</slash:comments><itunes:subtitle>Micro services is an emerging trend in software architecture that focuses on small, lightweight applications as a means to avoid large, unmaintainable, monolithic systems. This approach allows for individual technology stacks for each component and mor...</itunes:subtitle><itunes:summary>Micro services is an emerging trend in software architecture that focuses on small, lightweight applications as a means to avoid large, unmaintainable, monolithic systems. This approach allows for individual technology stacks for each component and more resilient systems. Micro services uses well-known communication schemes such as REST but also require new technologies for the implementation. Methodologies like the Twelve-Factor App provide a set of rules for the deployment and operation of such systems. Teams take care of several of those services and deal with separate business domains to make the best use of Conway’s Law. These business domains provide a more coarse-grained software architecture.

In this episode, Stefan Tilkov discusses these new approaches as well as their benefits and drawbacks with Eberhard Wolff. Stefan is CEO and Principal Consultant at innoQ in Germany. He works as a software architect and is a well-known speaker at international conferences. More recently, he has joined Software Engineering Radio as a host.

Recording Venue: JAX conference, Mainz, Germany
Related Links

	Stefan's timeline at the innoQ Blog: https://www.innoq.com/people/st
	The Twelve Factor App: http://12factor.net/
	Slides from one of Stefan's talks: https://www.innoq.com/en/talks/2014/02/architektur-201x/
	Java EE architecture diagrams: http://docs.oracle.com/javaee/7/tutorial/doc/overview003.htm
	Martin Fowler on Micro Services http://martinfowler.com/articles/microservices.html
	Stefan on Pragmatic SOA: http://www.infoq.com/presentations/Pragmatic-SOA
	Martin Fowler on Micro Services and the First Law of Distributed Objects: http://martinfowler.com/articles/distributed-objects-microservices.html
	One of the projects using the suggested approach: http://qconlondon.com/london-2014/presentation/From%20Parts%20to%20a%20Whole:%20Modular%20Development%20of%20a%20Large-Scale%20e-Commerce%20Site
	Talk about the architecture at Groupon: http://qconlondon.com/london-2014/presentation/I-Tier:%20Breaking%20Up%20the%20Monolith
	Chaos Monkey and Simian Arm: https://github.com/Netflix/SimianArmy/wiki/Chaos-Monkey
	Dropwizard: http://dropwizard.github.io/dropwizard/
	Michael T. Nygard's book Release It!: https://pragprog.com/book/mnee/release-it
	Hystrix: https://github.com/Netflix/Hystrix
	Stefan Tilkov on Twitter: @stilkov
	Stefan’s personal timeline: https://www.innoq.com/people/st</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>54:46</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/lG8fJdyPFvM/SE-Radio210-StefanTilkov-MicroServices.mp3" fileSize="79126693" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2014/09/episode-210-stefan-tilkov-on-architecture-and-micro-services/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/lG8fJdyPFvM/SE-Radio210-StefanTilkov-MicroServices.mp3" length="79126693" type="audio/mpeg" /><feedburner:origEnclosureLink>http://traffic.libsyn.com/seradio/SE-Radio210-StefanTilkov-MicroServices.mp3</feedburner:origEnclosureLink></item><item><title>Episode 209: Josiah Carlson on Redis</title><link>http://feedproxy.google.com/~r/se-radio/~3/2DAK9GxKoCg/</link><category>Episodes</category><category>caching</category><category>database</category><category>distributed systems</category><category>programming languages</category><category>redis</category><category>scalability</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Fri, 05 Sep 2014 10:58:17 PDT</pubDate><guid isPermaLink="false">http://www.se-radio.net/?p=1528</guid><description>Josiah Carlson discusses Redis, an in-memory single-threaded data structure server. A Redis mailing list contributor and author, Josiah talks with Robert about the differences between Redis and a key-value store, client-side versus server-side data structures, consistency models, embedding Lua scripts within the server, what you can do with Redis from an application standpoint, native locking [&amp;#8230;]&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/2DAK9GxKoCg" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2014/09/episode-209-josiah-carlson-on-redis/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><itunes:subtitle>Josiah Carlson discusses Redis, an in-memory single-threaded data structure server. A Redis mailing list contributor and author, Josiah talks with Robert about the differences between Redis and a key-value store,</itunes:subtitle><itunes:summary>Josiah Carlson discusses Redis, an in-memory single-threaded data structure server. A Redis mailing list contributor and author, Josiah talks with Robert about the differences between Redis and a key-value store, client-side versus server-side data structures, consistency models, embedding Lua scripts within the server, what you can do with Redis from an application standpoint, native locking versus application-level locking, how to scale out Redis, persistence options and some operational considerations in running a Redis server.

Recording Venue: Internet
Related Links

	Redis project site: http://redis.io
	Redis community mailing list: https://groups.google.com/forum/#!forum/redis-db
	Redis news on Twitter: https://twitter.com/redisfeed
	The book Redis in Action by Josiah Carlson: http://www.manning.com/carlson
Free chapters from book in PDF (requires signup):
http://www.manning.com/free/excerpt_carlson.html;
http://www.manning.com/free/excerpt_carlson_b.html
	Josiah Carlson’s source code from the book on github https://github.com/josiahcarlson/redis-in-action
	Josiah Carlson’s python-redis object mapper: https://pypi.python.org/pypi/rom
	Josiah Carlson’s blog: http://www.dr-josiah.com
	Salvatore Sanfilippo’s home page: http://invece.org
	Lua home page: http://www.lua.org</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>1:07:47</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/-9P-r0jtEZg/SE-Radio209-JosiahCarlson-Redis.mp3" fileSize="97866537" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2014/09/episode-209-josiah-carlson-on-redis/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/-9P-r0jtEZg/SE-Radio209-JosiahCarlson-Redis.mp3" length="97866537" type="audio/mpeg" /><feedburner:origEnclosureLink>http://traffic.libsyn.com/seradio/SE-Radio209-JosiahCarlson-Redis.mp3</feedburner:origEnclosureLink></item><item><title>Episode 208: Randy Shoup on Hiring in the Software Industry</title><link>http://feedproxy.google.com/~r/se-radio/~3/IR2WJqaJJtM/</link><category>Episodes</category><category>Google</category><category>hiring</category><category>job interviews</category><category>Kixeye</category><category>Randy Shoup</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Tue, 26 Aug 2014 10:59:40 PDT</pubDate><guid isPermaLink="false">http://www.se-radio.net/?p=1520</guid><description>With this episode, Software Engineering Radio begins a series of interviews on social/nontechnical aspects of working as a software engineer as Tobias Kaatz talks to Randy Shoup, former CTO at KIXEYE, about hiring in the software industry. Prior to KIXEYE, Randy worked as director of engineering at Google for the Google App Engine and as [&amp;#8230;]&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/IR2WJqaJJtM" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2014/08/episode-208-randy-shoup-on-hiring-in-the-software-industry/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">5</slash:comments><itunes:subtitle>With this episode, Software Engineering Radio begins a series of interviews on social/nontechnical aspects of working as a software engineer as Tobias Kaatz talks to Randy Shoup, former CTO at KIXEYE, about hiring in the software industry.</itunes:subtitle><itunes:summary>With this episode, Software Engineering Radio begins a series of interviews on social/nontechnical aspects of working as a software engineer as Tobias Kaatz talks to Randy Shoup, former CTO at KIXEYE, about hiring in the software industry. Prior to KIXEYE, Randy worked as director of engineering at Google for the Google App Engine and as chief engineer and distinguished architect at eBay. Randy has spoken on various occasions about how to hire great people for highly productive teams and his own experiences in doing so. In this interview, Randy talks about how companies can find the right candidates, how candidates can get the attention of the companies they really want to work for, and how interviews and social media can assist in the process. He and Tobias also discuss the notion of always hiring "A-players" and its influence on the teams and on the people who live in an area where only "A-players" get hired. In addition, they talk about the "Google way of hiring" and how to get candidates to come to a second interview even if they failed the first time.

Recording Venue: Skype
Related Links

	KIXEYE Homepage : https://www.kixeye.com
	Randy Shoup on "The Virtuous Cycle of Velocity": http://youtu.be/EwLBoRyXTOI
	Randy Shoup on "Scalability at KIXEYE" (also on how to scale teams): http://www.infoq.com/presentations/kixeye-scalability
	Randy on Twitter: https://twitter.com/randyshoup</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>1:05:40</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/9dsIp1kQ7b8/SE-Radio208-RandyShoup-HiringSoftwareIndustry.mp3" fileSize="94810012" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2014/08/episode-208-randy-shoup-on-hiring-in-the-software-industry/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/9dsIp1kQ7b8/SE-Radio208-RandyShoup-HiringSoftwareIndustry.mp3" length="94810012" type="audio/mpeg" /><feedburner:origEnclosureLink>http://traffic.libsyn.com/seradio/SE-Radio208-RandyShoup-HiringSoftwareIndustry.mp3</feedburner:origEnclosureLink></item><item><title>Episode 207: Mitchell Hashimoto on the Vagrant Project</title><link>http://feedproxy.google.com/~r/se-radio/~3/t8AzoE_Gyrg/</link><category>Episodes</category><category>business</category><category>cloud</category><category>devops</category><category>provisioning</category><category>ruby</category><category>virtual machine</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Mon, 28 Jul 2014 10:26:07 PDT</pubDate><guid isPermaLink="false">http://www.se-radio.net/?p=1509</guid><description>Charles Anderson talks to Mitchell Hashimoto about the Vagrant open source project, which can be used to create and configure lightweight, reproducible, and portable development environments. Vagrant aims to make new developers on a project productive within minutes of joining the project instead of spending hours or days setting up the developer&amp;#8217;s workstation. The outline [&amp;#8230;]&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/t8AzoE_Gyrg" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2014/07/episode-207-mitchell-hashimoto-on-the-vagrant-project/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">5</slash:comments><itunes:subtitle>Charles Anderson talks to Mitchell Hashimoto about the Vagrant open source project, which can be used to create and configure lightweight, reproducible, and portable development environments. Vagrant aims to make new developers on a project productive ...</itunes:subtitle><itunes:summary>Charles Anderson talks to Mitchell Hashimoto about the Vagrant open source project, which can be used to create and configure lightweight, reproducible, and portable development environments. Vagrant aims to make new developers on a project productive within minutes of joining the project instead of spending hours or days setting up the developer's workstation. The outline includes an overview of Vagrant, how to use Vagrant, and technical details about how Vagrant provides its functions. They conclude with a discussion of the open source project and HashiCorp, which Mitchell established to support and develop Vagrant and other devops tools.

Recording Venue: Skype
Related Links

	Vagrant project site: http://vagrantup.com/
	Vagrant documentation: http://docs.vagrantup.com/
	"Vagrant: Up and Running":http://shop.oreilly.com/product/0636920026358.do
	HashiCorp: http://www.hashicorp.com/
	Docker project site: http://www.docker.com/
	Mitchell on Twitter: https://twitter.com/mitchellh</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>47:54</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/jUr50xcC0i0/SE-Radio207-MitchellHashimoto-Vagrant.mp3" fileSize="69234526" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2014/07/episode-207-mitchell-hashimoto-on-the-vagrant-project/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/jUr50xcC0i0/SE-Radio207-MitchellHashimoto-Vagrant.mp3" length="69234526" type="audio/mpeg" /><feedburner:origEnclosureLink>http://traffic.libsyn.com/seradio/SE-Radio207-MitchellHashimoto-Vagrant.mp3</feedburner:origEnclosureLink></item><item><title>Episode 206: Ken Collier on Agile Analytics</title><link>http://feedproxy.google.com/~r/se-radio/~3/e29zeG5O_JE/</link><category>Episodes</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Fri, 18 Jul 2014 10:43:02 PDT</pubDate><guid isPermaLink="false">http://www.se-radio.net/?p=1499</guid><description>Johannes Thönes talks to Dr. Ken Collier, Director of Agile Analytics at ThoughtWorks about Agile Analytics. The outline includes: descriptive analytics, predictive analytic and prescriptive analytics; artificial intelligence, machine learning, data mining and statistics; collaborative filtering; data science and data scientists; data warehousing and business intelligence; online analytical processing (OLAP), extract transform load (ETL), feature [&amp;#8230;]&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/e29zeG5O_JE" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2014/07/episode-206-ken-collier-on-agile-analytics/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><itunes:subtitle>Johannes Thönes talks to Dr. Ken Collier, Director of Agile Analytics at ThoughtWorks about Agile Analytics. The outline includes: descriptive analytics, predictive analytic and prescriptive analytics; artificial intelligence, machine learning,</itunes:subtitle><itunes:summary>Johannes Thönes talks to Dr. Ken Collier, Director of Agile Analytics at ThoughtWorks about Agile Analytics. The outline includes: descriptive analytics, predictive analytic and prescriptive analytics; artificial intelligence, machine learning, data mining and statistics; collaborative filtering; data science and data scientists; data warehousing and business intelligence; online analytical processing (OLAP), extract transform load (ETL), feature engineering, agile processing pipeline (kenfrastructure), big data, what is agile and what does it mean in analytics. They wrap up with talking about the future of data science and the ethics of big data analytics. The example used in this episode is Amazon’s anticipatory shipping and a credit fraud detection.

Venue: ThoughtWorks North American Away Day, The Westin Peachtree, Atlanta, Geogia
Related Links

	Tools for Data Scientists

	The R Language: http://www.r-project.org
	Python: https://www.python.org
	Mathlab: http://www.mathworks.com/products/matlab
	SAS: http://www.sas.com


	Big Data Platforms

	Hadoop: http://hadoop.apache.org
	Cassandra: http://cassandra.apache.org


	Agile Processing Pipeline
	Apache Kafka (big data messaging): http://kafka.apache.org
	Big Data Paper: 3D Data Management: Controlling Data Volume, Velocity and Variety by Dough Laney, Gartner
	Martin Fowler Episodes

	Episode 182: Domain-Specific Languages with Martin Fowler and Rebecca Parsons
	Episode 186: Martin Fowler and Pramod Sadalage on Agile Database Development


	Episodes about Agile Practices

	Episode 37: eXtreme Programming Pt.1
	Episode 43: eXtreme Programming Pt.2
	Episode 60: Roman Pichler on Scrum
	Episode 166: Living Architectures with John Wiegand
	Episode 167: The History of JUnit and the Future of Testing with Kent Beck
	Episode 190: Lean (Software) Development


	Agile Data Science: Building Data Analytics Applications with Hadoop by Russell Jurney
	Agile Analytics: A Value-Driven Approach to Business Intelligence and Data Warehousing by Ken Collier
	Ken Collier

	Website - http://theagilist.com/
	Twitter - @theagilist
	E-Mail - kencollier &lt;at&gt; theagilist &lt;dot&gt; com
	Speaking at IM 2014, Copenhagen, September 3rd 2014: http://im2014.net/
	Speaking at TDWI BI Symposion, London, September 8th to 10th 2015: http://events.tdwi.org/events/london-bi-symposium-2014/home.aspx</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>1:02:36</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/1FWp03wsMU0/SE-Radio206-KenCollier-AgileAnalytics.mp3" fileSize="90404117" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2014/07/episode-206-ken-collier-on-agile-analytics/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/1FWp03wsMU0/SE-Radio206-KenCollier-AgileAnalytics.mp3" length="90404117" type="audio/mpeg" /><feedburner:origEnclosureLink>http://traffic.libsyn.com/seradio/SE-Radio206-KenCollier-AgileAnalytics.mp3</feedburner:origEnclosureLink></item><item><title>Episode 205: Martin Lippert on Eclipse Flux</title><link>http://feedproxy.google.com/~r/se-radio/~3/_kU1J3ylE0o/</link><category>Episodes</category><category>architecture</category><category>cloud</category><category>Cloud IDEs</category><category>eclipse</category><category>Eclipse Flux</category><category>IDEs</category><category>Micro services</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Fri, 27 Jun 2014 12:38:07 PDT</pubDate><guid isPermaLink="false">http://www.se-radio.net/?p=1474</guid><description>Eberhard Wolff talks with Martin Lippert of Pivotal about the Eclipse Flux project. This projects is in its early stages — and has a very interesting goal: It aims to put software development tools into the cloud. It is a lot more than just an IDE (integrated development environment) in a browser. Instead the IDE [&amp;#8230;]&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/_kU1J3ylE0o" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2014/06/episode-205-martin-lippert-on-eclipse-flux/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">3</slash:comments><itunes:subtitle>Eberhard Wolff talks with Martin Lippert of Pivotal about the Eclipse Flux project. This projects is in its early stages — and has a very interesting goal: It aims to put software development tools into the cloud.</itunes:subtitle><itunes:summary>Eberhard Wolff talks with Martin Lippert of Pivotal about the Eclipse Flux project. This projects is in its early stages — and has a very interesting goal: It aims to put software development tools into the cloud. It is a lot more than just an IDE (integrated development environment) in a browser. Instead the IDE itself is decomposed into several services that might run on your local computer or on a server somewhere on the net. Service might be complex and e.g. provide a continuous integration environment or just a feature like code reconciliation. To create such a system an asynchronous Micro Service architecture is used instead of the the Eclipse Plugin model. The result is an open platform that redefines how IDEs are implemented and architected — and as it is not tied to Eclipse it might change the whole IDE landscape. We discuss what this approach means for users as well as how it is implemented. Flux is also an interesting case study that shows how even highly interactive applications that need low latency can be implemented as a widely distributed system with asynchronous communication and loose coupling.
Resources

	Flux project: http://www.eclipse.org/flux
	Flux code repo: https://github.com/eclipse/flux
	Flux demo video: https://www.youtube.com/watch?v=kkoplIMJfHw (was called Project Flight at that time, not be surprised)
	Eclipse Orion: https://www.eclipse.org/orion/
	Xtext with Flux: http://holgerschill.blogspot.de/2014/04/itegration-of-xtext-with-flux.html
	Martin on Twitter: https://twitter.com/martinlippert
	Micro Services: http://martinfowler.com/articles/microservices.html</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>53:58</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/ag7qudO3XWU/SE-Radio205-MartinLippert-EclipseFlux.mp3" fileSize="77965963" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2014/06/episode-205-martin-lippert-on-eclipse-flux/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/ag7qudO3XWU/SE-Radio205-MartinLippert-EclipseFlux.mp3" length="77965963" type="audio/mpeg" /><feedburner:origEnclosureLink>http://traffic.libsyn.com/seradio/SE-Radio205-MartinLippert-EclipseFlux.mp3</feedburner:origEnclosureLink></item><item><title>Episode 204: Anil Madhavapeddy on the Mirage Cloud Operating System and the OCaml Language</title><link>http://feedproxy.google.com/~r/se-radio/~3/vE2WsJNB30U/</link><category>Episodes</category><category>cloud</category><category>compilers</category><category>distributed systems</category><category>functional programming</category><category>linux</category><category>operating systems</category><category>programming languages</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Fri, 30 May 2014 09:36:32 PDT</pubDate><guid isPermaLink="false">http://www.se-radio.net/?p=1462</guid><description>Robert talks to Dr. Anil Madhavapeddy of the Cambridge University (UK) Systems research group about the OCaml language and the Mirage cloud operating system, a microkernel written entirely in OCaml. The outline includes: history of the evolution from dedicated servers running a monolithic operating system to virutalized servers based on the Xen hypervisor to micro-kernels; [&amp;#8230;]&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/vE2WsJNB30U" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2014/05/episode-204-anil-madhavapeddy-on-the-mirage-cloud-operating-system-and-the-ocaml-language/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">4</slash:comments><itunes:subtitle>Robert talks to Dr. Anil Madhavapeddy of the Cambridge University (UK) Systems research group about the OCaml language and the Mirage cloud operating system, a microkernel written entirely in OCaml. The outline includes: history of the evolution from d...</itunes:subtitle><itunes:summary>Robert talks to Dr. Anil Madhavapeddy of the Cambridge University (UK) Systems research group about the OCaml language and the Mirage cloud operating system, a microkernel written entirely in OCaml. The outline includes: history of the evolution from dedicated servers running a monolithic operating system to virutalized servers based on the Xen hypervisor to micro-kernels; the differences between monolithic kernels, exokernels and micro-kernels; recent innovations that have allowed micro-kernels to overcome performance problems; performance of micro-kernels compared to a Linux server running a daemon for simple services like DNS and HTTP; security of micro-kernels; the history of the OCaml language;  how the functional programming and the  OCaml type system supports the design goals of the Mirage micro-kernel; how the Mirage team decided on OCaml as the implementation language for their project; the reconception of the toolchain that has Mirage kernels and compiled and managed via github; the possibility of using other popular web programming languages within Mirage;  high-bandwidth networking abstractions in OCaml over Xen memory rings; and micro-kernels in the browser and peripheral devices.  They wrap up with a discussion of Anil's recent book on OCaml.
Related Links

	Unikernels: Library Operating Systems for the Cloud by Anil Madhavapeddy, Richard Mortier, Charalampos Rotsos, David Scott, Balraj Singh, Thomas Gazagnaire, Steven Smith, Steven Hand and Jon Crowcroft
	Xen hypervisor
	The Mirage project: http://openmirage.org/
	Anil Madhavapeddy’s talk at QCon San Francisco 2013 My Other Internet is a Mirage: www.infoq.com/presentations/mirage-os
	Real World OCaml: Functional programming for the masses by Yaron Minsky, Anil Madhavapeddy, Jason Hickey
	Anil Madhavapeddy’s talk at FOSDEM Mirage: compiling functional library operating systems
	Anil Madhavapeddy on Twitter: https://twitter.com/avsm
	Anil Madhavapeddy’s home page: http://anil.recoil.org/
	Anil Madhavapeddy’s blog: http://anil.recoil.org/blog/
	Anil Madhavapeddy’s publications: http://anil.recoil.org/papers/
	The OPAM package manager for OCaml: http://opam.ocaml.org/
	The Codio web IDE for OCaml: https://codio.com/s/docs/specifics/ocaml/
	Irmin distributed database written in OCaml: https://github.com/mirage/irmin</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>1:05:29</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/bOBj9mdw8Aw/SE-Radio204-AnilMadhavapeddy.mp3" fileSize="94551299" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2014/05/episode-204-anil-madhavapeddy-on-the-mirage-cloud-operating-system-and-the-ocaml-language/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/bOBj9mdw8Aw/SE-Radio204-AnilMadhavapeddy.mp3" length="94551299" type="audio/mpeg" /><feedburner:origEnclosureLink>http://traffic.libsyn.com/seradio/SE-Radio204-AnilMadhavapeddy.mp3</feedburner:origEnclosureLink></item><item><title>Episode 203: Leslie Lamport on Distributed Systems</title><link>http://feedproxy.google.com/~r/se-radio/~3/b95YZy3KS4g/</link><category>Episodes</category><category>concurrency</category><category>consensus</category><category>distributed systems</category><category>fault tolerance</category><category>interprocess communication</category><category>Lamport clocks</category><category>Microsoft Research</category><category>Paxos</category><category>specification</category><category>TLA+</category><category>Turing Award</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Tue, 29 Apr 2014 08:48:52 PDT</pubDate><guid isPermaLink="false">http://www.se-radio.net/?p=1456</guid><description>Leslie Lamport won a Turing Award in 2013 for his work in distributed and concurrent systems. He also designed the document preparation tool LaTex. Leslie is employed by Microsoft Research, and has recently been working with TLA+, a language that is useful for specifying concurrent systems from a high level. The interview begins with a [&amp;#8230;]&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/b95YZy3KS4g" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2014/04/episode-203-leslie-lamport-on-distributed-systems/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">2</slash:comments><itunes:subtitle>Leslie Lamport won a Turing Award in 2013 for his work in distributed and concurrent systems. He also designed the document preparation tool LaTex. Leslie is employed by Microsoft Research, and has recently been working with TLA+,</itunes:subtitle><itunes:summary>Leslie Lamport won a Turing Award in 2013 for his work in distributed and concurrent systems. He also designed the document preparation tool LaTex. Leslie is employed by Microsoft Research, and has recently been working with TLA+, a language that is useful for specifying concurrent systems from a high level. The interview begins with a definition: a distributed system is a multiprocessor system in which the time required for interprocess communication is large compared to the time for events within a single processor--in other words, it takes longer for interprocess communication than it does for a process to look at its own memory. Alternatively, a distributed system is one in which processors communicate by sending messages. Leslie goes on to talk about how he became interested in distributed systems, and describes the story behind his paper about the Paxos algorithm. The goal of Paxos is to maintain consensus in an environment with unexpected faults (otherwise known as Byzantine faults). After the discussion of Paxos, Jeff asks Leslie about his recent talk "Thinking for Programmers," which emphasizes the benefit of having a specification prior to writing actual code. "Specification" can mean a variety of things, but predicates and next-state relationships provide a mathematical rigor that is well-suited to distributed and concurrent systems. The conversation concludes with Jeff asking Leslie about how a programmer can build the mental resolve to work through a difficult problem.
Related Links

	Leslie Lamport's home page
	2013 Turing Award: http://amturing.acm.org/award_winners/lamport_1205376.cfm
	Time, Clocks, and the Order of Events in a Distributed System: http://www.stanford.edu/class/cs240/readings/lamport.pdf
	The Part-Time Parliament: http://research.microsoft.com/en-us/um/people/lamport/pubs/lamport-paxos.pdf
	Paxos: http://en.wikipedia.org/wiki/Paxos_algorithm
	Thinking for Programmers: http://channel9.msdn.com/Events/Build/2014/3-642
	TLA+, a specification language: http://research.microsoft.com/en-us/um/people/lamport/tla/tla.html</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>48:49</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/CzRXuBFRuhQ/SE-Radio203-LeslieLamport.mp3" fileSize="70567440" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2014/04/episode-203-leslie-lamport-on-distributed-systems/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/CzRXuBFRuhQ/SE-Radio203-LeslieLamport.mp3" length="70567440" type="audio/mpeg" /><feedburner:origEnclosureLink>http://traffic.libsyn.com/seradio/SE-Radio203-LeslieLamport.mp3</feedburner:origEnclosureLink></item><item><title>Episode 202: Andrew Gerrand on Go</title><link>http://feedproxy.google.com/~r/se-radio/~3/WQHU_FsT0xk/</link><category>Episodes</category><category>Andrew Gerrand</category><category>arrays</category><category>build times</category><category>C</category><category>compilers</category><category>garbage collection</category><category>Go</category><category>golang</category><category>Google</category><category>imports</category><category>interfaces</category><category>open source</category><category>readability</category><category>scalability</category><category>slices</category><category>standard library</category><category>syntax</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Fri, 14 Mar 2014 09:19:53 PDT</pubDate><guid isPermaLink="false">http://www.se-radio.net/?p=1445</guid><description>Andrew Gerrand works on the Go programming language at Google. His conversation with Jeff begins with a history of the language, including the details behind how Go was conceived and how the open source community contributes to it. Andrew explains how Go intends to simplify problems which have been motifs as Google has scaled. The [&amp;#8230;]&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/WQHU_FsT0xk" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2014/03/episode-202-andrew-gerrand/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">1</slash:comments><itunes:subtitle>Andrew Gerrand works on the Go programming language at Google. His conversation with Jeff begins with a history of the language, including the details behind how Go was conceived and how the open source community contributes to it.</itunes:subtitle><itunes:summary>Andrew Gerrand works on the Go programming language at Google. His conversation with Jeff begins with a history of the language, including the details behind how Go was conceived and how the open source community contributes to it. Andrew explains how Go intends to simplify problems which have been motifs as Google has scaled. The development of Go is an opportunity to fix issues that weren't being considered when C was being designed. For example, dependencies are managed more efficiently, shortening build times. The conversation proceeds to a discussion of the unique interface model of Go, which encourages Go objects to have fewer responsibilities, allowing systems to be built with small pieces with small hierarchies. Next, the "slice" data structure is explored. A slice is a view of an array. Following this is a discussion of the concurrency model of Go, the import system, the garbage collector, and the compiler design. Andrew also explains some philosophies about syntax, development, and the standard library. Much of Go's development is about deciding what can be left out of the language, so that it remains simplified. The conversation concludes with a discussion of the Go community and some suggested learning materials for getting started with the language.
Related Links

	http://golang.org/
	https://plus.google.com/+AndrewGerrand/about
	http://www.gophercon.com/
	http://tour.golang.org/#1
	http://golang.org/doc/effective_go.html</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>41:29</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/jL0eLhy83I0/SE-RadioEpisode202AndrewGerrand.mp3" fileSize="60000325" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2014/03/episode-202-andrew-gerrand/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/jL0eLhy83I0/SE-RadioEpisode202AndrewGerrand.mp3" length="60000325" type="audio/mpeg" /><feedburner:origEnclosureLink>http://traffic.libsyn.com/seradio/SE-RadioEpisode202AndrewGerrand.mp3</feedburner:origEnclosureLink></item><item><title>Episode 201: Martin Thompson on Mechanical Sympathy</title><link>http://feedproxy.google.com/~r/se-radio/~3/NqdugzbNhYQ/</link><category>Episodes</category><category>amdahls law</category><category>architecture</category><category>computer</category><category>frameworks</category><category>garbage collection</category><category>java</category><category>libraries</category><category>littles law</category><category>lmax disruptor</category><category>lock-free algorithms</category><category>mechanical sympathy</category><category>open source</category><category>performance</category><category>program</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Wed, 19 Feb 2014 10:59:34 PST</pubDate><guid isPermaLink="false">http://www.se-radio.net/?p=1437</guid><description>Martin Thompson, proprietor of the blog Mechanical Sympathy, founder of the LMAX disruptor open source project, and a consultant and frequent speaker on high performance computing talks with Robert about computer program performance. Martin explains the meaning of the term “mechanical sympathy,” derived from auto racing, and its relevance to program performance: the importance of [&amp;#8230;]&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/NqdugzbNhYQ" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2014/02/episode-201-martin-thompson-on-mechanical-sympathy/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">5</slash:comments><itunes:subtitle>Martin Thompson, proprietor of the blog Mechanical Sympathy, founder of the LMAX disruptor open source project, and a consultant and frequent speaker on high performance computing talks with Robert about computer program performance.</itunes:subtitle><itunes:summary>Martin Thompson, proprietor of the blog Mechanical Sympathy, founder of the LMAX disruptor open source project, and a consultant and frequent speaker on high performance computing talks with Robert about computer program performance. Martin explains the meaning of the term “mechanical sympathy,” derived from auto racing, and its relevance to program performance: the importance of code that takes into account the computer architecture. The discussion proceeds to cover the basics of hardware architecture, and then Martin continues with a discussion of the costs of different program characteristics in a multi-core processor.  Two key quantitative constraints, Amdahl’s Law and Little’s Law, are covered next. The discussion evolves into issues facing application programmers, such as poorly implemented libraries and frameworks, lock-free algorithms, and the impact of java garbage collection. The conversation wraps up with some thoughts on the proper methodology for approaching program performance.
Related Links

	Martin Thompson’s blog Mechanical Sympathy
	Real Logic consultancy 
	Reactive Manifesto
	The LMAX architecture by Martin Fowler
	Martin Thompson’s and Michael Barker’s QCon presentation about LMAX 
	LMAX disruptor open source project 
	Martin Thompson’s talk, Java at the Cutting Edge, at QCon SF 2013
	Martin Thompson’s talk, Top 10 Performance Folklore, at QCon SF 2013
	Martin Thompson interviewed by InfoQ on Reactive System Design 

Recording Venue: WebEx
Guest: Martin Thompson</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>53:04</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/JRdpPYPs7u4/SE-RadioEpisode201-MartinThompson.mp3" fileSize="76672495" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2014/02/episode-201-martin-thompson-on-mechanical-sympathy/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/JRdpPYPs7u4/SE-RadioEpisode201-MartinThompson.mp3" length="76672495" type="audio/mpeg" /><feedburner:origEnclosureLink>http://traffic.libsyn.com/seradio/SE-RadioEpisode201-MartinThompson.mp3</feedburner:origEnclosureLink></item><item><title>Episode 200: Markus Völter on Language Design and Domain Specific Languages</title><link>http://feedproxy.google.com/~r/se-radio/~3/NQu62ase48c/</link><category>Episodes</category><category>Domain Specific Languages</category><category>language design</category><category>Language Workbenches</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Mon, 13 Jan 2014 10:00:21 PST</pubDate><guid isPermaLink="false">http://www.se-radio.net/?p=1420</guid><description>For Episode 200 of Software Engineering Radio, Diomidis Spinellis interviews Markus Völter, the podcast’s founder. Markus works as an independent researcher, consultant, and coach for itemis AG in Stuttgart, Germany. His focus is on software architecture, model-driven software development and domain specific languages as well as on product line engineering. Markus also regularly publishes articles, [&amp;#8230;]&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/NQu62ase48c" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2014/01/episode-200-markus-volter-on-language-design-and-domain-specific-languages/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">8</slash:comments><itunes:subtitle>For Episode 200 of Software Engineering Radio, Diomidis Spinellis interviews Markus Völter, the podcast’s founder. Markus works as an independent researcher, consultant, and coach for itemis AG in Stuttgart, Germany.</itunes:subtitle><itunes:summary>For Episode 200 of Software Engineering Radio, Diomidis Spinellis interviews Markus Völter, the podcast’s founder. Markus works as an independent researcher, consultant, and coach for itemis AG in Stuttgart, Germany. His focus is on software architecture, model-driven software development and domain specific languages as well as on product line engineering. Markus also regularly publishes articles, papers, books, and patterns, and speaks at national and international conferences. In this interview Markus discusses language design and domain specific languages (DSLs). DSLs eliminate a lot of boilerplate code, but, more importantly, they allow us to check diverse properties of the code that are relevant to the specific domain, for instance that all members of a product line support some key functions. However, DSLs appear to need considerable effort to develop. This can be addressed by language workbenches: frameworks that help us efficiently develop languages and families of inter-operating languages. Apart from parsing, language definition involves type systems, transformation to other languages, IDE support, data flow analysis, version control integration, debugging, and refactoring. Many of these elements can be handled by the language workbench. In that area, projectional editors — where the program is entered in a constrained manner — allow the same program to be presented in different ways (for example, as a table or a diagram), where the code is always a correct model of some internal representation. The interview ends with a discussion on language design, where Markus discusses the difference between language readability and writability.
Related Links

	Markus Völter: http://voelter.de
	DSL Engineering Book: http://dslbook.org
	mbeddr: http://mbeddr.com
	JetBrains MPS: http://jetbrains.com/mps

Recording Venue: Skype / Audacity
Guest: Markus Völter</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>57:15</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/5B5TF8NfB-c/SE-RadioEpisode200-MarkusVoelter-LanguageDesign.mp3" fileSize="82692490" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2014/01/episode-200-markus-volter-on-language-design-and-domain-specific-languages/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/5B5TF8NfB-c/SE-RadioEpisode200-MarkusVoelter-LanguageDesign.mp3" length="82692490" type="audio/mpeg" /><feedburner:origEnclosureLink>http://traffic.libsyn.com/seradio/SE-RadioEpisode200-MarkusVoelter-LanguageDesign.mp3</feedburner:origEnclosureLink></item><item><title>Episode 199: Michael Stonebraker on Current Developments in Databases</title><link>http://feedproxy.google.com/~r/se-radio/~3/V3TiRKVqXEQ/</link><category>Episodes</category><category>ACID guarantees</category><category>architecture</category><category>Clustrix</category><category>data warehouses</category><category>database</category><category>event stream processing</category><category>hadoop</category><category>multiple node cluster</category><category>NewOLTP</category><category>NewSQL</category><category>NuoDB</category><category>Stonebraker</category><category>VoltDB</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Thu, 05 Dec 2013 08:59:05 PST</pubDate><guid isPermaLink="false">http://www.se-radio.net/?p=1389</guid><description>Recording Venue: Skype Guest: Michael Stonebraker Dr. Michael Stonebraker, one of the leading researchers and technology entrepreneurs in the database space, joins Robert for a discussion of database architecture and the emerging NewSQL family of databases. Dr. Stonebraker opens with his take on how the database market is segmented around a small number of use [&amp;#8230;]&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/V3TiRKVqXEQ" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2013/12/episode-199-michael-stonebraker/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">13</slash:comments><itunes:subtitle>Recording Venue: Skype - Guest: Michael Stonebraker - Dr. Michael Stonebraker, one of the leading researchers and technology entrepreneurs in the database space, joins Robert for a discussion of database architecture and the emerging NewSQL family of...</itunes:subtitle><itunes:summary>Recording Venue: Skype

Guest: Michael Stonebraker

Dr. Michael Stonebraker, one of the leading researchers and technology entrepreneurs in the database space, joins Robert for a discussion of database architecture and the emerging NewSQL family of databases. Dr. Stonebraker opens with his take on how the database market is segmented around a small number of use cases: OLTP, data warehouses, and event stream processing. He discusses the origins of the standard architecture for OLTP, which is row-based, and says it’s no longer optimal for any of the use cases that it is applied to. He proceeds to describe some research he has done, showing that row-based databases spend about 90 percent of their time acquiring and releasing locks, buffer management, and other activities that could be characterized as overhead in comparison to main task of reading and writing data. These results, which in Stonebraker’s view are intrinsic to the row-based architecture, require a new architecture to overcome. The discussion proceeds to a new database architecture, known as “NewSQL” or “NewOLTP,” which is single-threaded, lock-free, doesn’t require disk I/O in the critical path, and can scale out to a large multiple node cluster. Stonebraker criticizes the eventual consistency model that some NoSQL distributed systems employ and he defends the ACID guarantees as a superior model. The interview closes with a discussion about database education in university curricula and Stonebraker’s thoughts on the place of Hadoop in the data storage space.

	Michael Stonebraker page at MIT 
	VoltDB site 
	VoltDB on Meetup
	NewSQL topic page on Wikipedia 
	Other NewSQL projects: NuoDB 
	SE-Radio #165 on NoSQL</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>1:07:41</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/mqwgeoTD1sc/SE-RadioEpisode199-MichaelStonebraker.mp3" fileSize="97725795" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2013/12/episode-199-michael-stonebraker/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/mqwgeoTD1sc/SE-RadioEpisode199-MichaelStonebraker.mp3" length="97725795" type="audio/mpeg" /><feedburner:origEnclosureLink>http://traffic.libsyn.com/seradio/SE-RadioEpisode199-MichaelStonebraker.mp3</feedburner:origEnclosureLink></item><item><title>Episode 198: Wil van der Aalst on Workflow Management Systems</title><link>http://feedproxy.google.com/~r/se-radio/~3/GnYg4Fn5qlA/</link><category>Episodes</category><category>business process</category><category>design patterns</category><category>domain-specific language</category><category>workflow management</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Mon, 30 Sep 2013 15:10:56 PDT</pubDate><guid isPermaLink="false">http://www.se-radio.net/?p=1378</guid><description>Recording Venue: WebEx Guest: Wil van der Aalst Robert Blumen interviews Professor Wil van der Aalst of the Technical University of Eindhoven, one of the world’s leading researchers in business process management and workflow systems. Professor van der Aalst leads off with an overview of the main concepts in the field business processes, business process [&amp;#8230;]&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/GnYg4Fn5qlA" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2013/10/episode-198-wil-van-der-aalst/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">4</slash:comments><itunes:subtitle>Recording Venue: WebEx - Guest: Wil van der Aalst Robert Blumen interviews Professor Wil van der Aalst of the Technical University of Eindhoven, one of the world’s leading researchers in business process management and workflow systems.</itunes:subtitle><itunes:summary>Recording Venue: WebEx

Guest: Wil van der Aalst
Robert Blumen interviews Professor Wil van der Aalst of the Technical University of Eindhoven, one of the world’s leading researchers in business process management and workflow systems. Professor van der Aalst leads off with an overview of the main concepts in the field business processes, business process management, and workflow management systems. The guest and host then compare implied processes to explicit representations, in which the process is a first-class citizen. The advantages of explicit representations include a number of analytical possibilities. The conversation turns to the techniques and technologies for expressing process definitions. This is done graphically or with a domain-specific language. The guest provides insights into the pros and cons of various representational models. The host and guest cover the history of workflow patterns, which serve a similar role to that played by design patterns in conventional programming. Van der Aalst explains how the patterns movement has influenced commercial and open source workflow software, and describes patterns to support parallel execution of tasks within a process. The discussion then turns toward the run-time engine, which is something like an interpreter or a virtual machine for the execution of workflows. The discussion of run-time includes integration APIs between the workflow and business services, transactionality, and alternatives to transactions such as undo and compensating actions. The guest explains the importance of process mining for the discovery and correct definition of processes. Moreover, Van der Aalst emphases the importance of relating event data and process model for performance improvement and conformance checking. The interview wraps up with a discussion of the YAWL open source project and other web sites published by the guest.


	Professor  Wil van der Aalst’s home page at the Technical University of Eindhoven: www.vdaalst.com or http://wwwis.win.tue.nl/~wvdaalst/
	Workflow Management:  Model, Methods, and Systems by Wil van der Aalst and Kees van Hee, http://mitpress.mit.edu/books/workflow-management published by MIT Press
	Modeling Business Processes: A Petri Net-Oriented Approach by Wil van der Aalst and Christian Stahl, http://mitpress.mit.edu/books/modeling-business-processes published by MIT Press
	Process Mining: Discovery, Conformance and Enhancement of Business Processes by Wil van der Aalst, http://springer.com/978-3-642-19344-6 published by Springer
	Modern Business Process Automation - YAWL and its Support Environment by Arthur ter Hofstede, Wil van der Aalst and others, http://www.springer.com/computer/database+management+%26+information+retrieval/book/978-3-642-03120-5 published by Springer
	YAWL, an open source workflow engine.  http://www.yawlfoundation.org/
	Business Process Management: A Comprehensive Survey http://dx.doi.org/10.1155/2013/507984
	Workflow patterns site http://www.workflowpatterns.com/
	A free university-level course on Workflow management: http://wwwis.win.tue.nl/~wvdaalst/workflowcourse/
	Process Mining: Research Tools and applications: http://www.processmining.org/
	First paper on the "Vicious Circle" mentioned in the interview: http://www.workflowpatterns.com/documentation/documents/EPK02.pdf
	Production Workflow: Concepts and Techniques by Frank Leymann and Dieter Roller, http://www.amazon.com/Production-Workflow-Techniques-Frank-Leymann/dp/0130217530
	The workflow management coalition, an industry standards body: http://www.wfmc.org/
	The workflow reference model: http://www.wfmc.org/reference-model.html
	Open source workflow engines in java: http://java-source.net/open-source/workflow-engines
	Some relevant archived episodes from SE Radio:

	DSLs: episodes 52 and 1823
	Design Patterns:  63, 76, 81, and 191</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>1:05:39</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/rcNWFPGdwrk/SE-RadioEpisode198-WilVanDerAalst.mp3" fileSize="94785706" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2013/10/episode-198-wil-van-der-aalst/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/rcNWFPGdwrk/SE-RadioEpisode198-WilVanDerAalst.mp3" length="94785706" type="audio/mpeg" /><feedburner:origEnclosureLink>http://traffic.libsyn.com/seradio/SE-RadioEpisode198-WilVanDerAalst.mp3</feedburner:origEnclosureLink></item><item><title>Episode 197: Lars Vogel on Android</title><link>http://feedproxy.google.com/~r/se-radio/~3/Pj-Y0NuKJPg/</link><category>Episodes</category><category>android</category><category>dalvik</category><category>eclipcse</category><category>fragmentation</category><category>google glass</category><category>java</category><category>Lars Vogel</category><category>onPause</category><category>onStart</category><category>OnStop</category><category>resource management</category><category>virtual machine</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Fri, 06 Sep 2013 12:06:56 PDT</pubDate><guid isPermaLink="false">http://www.se-radio.net/?p=1373</guid><description>Recording Venue: WebEx Guest: Lars Vogel Lars Vogel, consultant, Eclipse committer, and owner of vogella.com, gives an overview of the Android operating system. His conversation with Jeff begins with a definition of Android and a brief history. Android is an operating system programmed in Java. It can be found on different types of devices such [&amp;#8230;]&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/Pj-Y0NuKJPg" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2013/09/episode-197-lars-vogel/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">4</slash:comments><itunes:subtitle>Recording Venue: WebEx - Guest: Lars Vogel - Lars Vogel, consultant, Eclipse committer, and owner of vogella.com, gives an overview of the Android operating system. His conversation with Jeff begins with a definition of Android and a brief history.</itunes:subtitle><itunes:summary>Recording Venue: WebEx

Guest: Lars Vogel

Lars Vogel, consultant, Eclipse committer, and owner of vogella.com, gives an overview of the Android operating system. His conversation with Jeff begins with a definition of Android and a brief history. Android is an operating system programmed in Java. It can be found on different types of devices such as tablets, phones, and Google Glass. Lars explains why Android is more than just a mobile operating system then describes some basics of Android development such as resource management, the Dalvik virtual machine, and how to deal with device fragmentation. Device fragmentation occurs when the user base for an application is running a variety of versions of the operating system. Fragmentation is a concern for some Android developers, but it is an inevitability which Android provides effective support for. Lars outlines Android's memory management and methods such as onStart, onPause, and onStop, which allow the user to define how the application responds to changes in the operating system around the application. The conversation concludes with Lars describing his thoughts on the future of Android, namely as a desktop and laptop operating system.

	Android homepage at Google: https://developers.google.com/android
	Android developer side: http://developer.android.com/index.html
	Android developer training side from Google: http://developer.android.com/training/index.html
	Android introduction tutorial: http://www.vogella.com/articles/Android/article.html
	Android service tutorial: http://www.vogella.com/articles/AndroidServices/article.html</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>42:20</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/-yirHZOJSoM/SE-RadioEpisode197-LarsVogel.mp3" fileSize="40894270" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2013/09/episode-197-lars-vogel/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/-yirHZOJSoM/SE-RadioEpisode197-LarsVogel.mp3" length="40894270" type="audio/mpeg" /><feedburner:origEnclosureLink>http://traffic.libsyn.com/seradio/SE-RadioEpisode197-LarsVogel.mp3</feedburner:origEnclosureLink></item><item><title>Episode 196: Personal Kanban with Jim Benson</title><link>http://feedproxy.google.com/~r/se-radio/~3/qngsHweiLS0/</link><category>Episodes</category><category>jim benson</category><category>lean</category><category>lean kanban</category><category>modus cooperandi</category><category>personal kanban</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Wed, 31 Jul 2013 13:55:04 PDT</pubDate><guid isPermaLink="false">http://www.se-radio.net/?p=1368</guid><description>Recording Venue: WebEx Guest: Jim Benson Jim Benson is CEO of Modus Cooperandi, a collaborative management consultancy in Seattle, Washington. After being steeped in Agile for many years, Jim started working with Kanban and Lean thinking in 2005. In 2008, he started taking this idea further with Personal Kanban, which brings flow based work to the [&amp;#8230;]&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/qngsHweiLS0" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2013/07/episode-196-personal-kanban-with-jim-benson/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">3</slash:comments><itunes:subtitle>Recording Venue: WebEx - Guest: Jim Benson - Jim Benson is CEO of Modus Cooperandi, a collaborative management consultancy in Seattle, Washington. After being steeped in Agile for many years, Jim started working with Kanban and Lean thinking in 2005.</itunes:subtitle><itunes:summary>Recording Venue: WebEx

Guest: Jim Benson

Jim Benson is CEO of Modus Cooperandi, a collaborative management consultancy in Seattle, Washington. After being steeped in Agile for many years, Jim started working with Kanban and Lean thinking in 2005. In 2008, he started taking this idea further with Personal Kanban, which brings flow based work to the individual and team. Since then he has been integrating Agile and Lean into his work with his own software company, as well as clients like the United Nations, British Telecom, NBC Universal, and the World Bank. In this episode our guest host Marcel van Hove talks with Jim about Personal Kanban, about which Jim has recently co-authored a book together with Tonianne DeMaria Barry

	Jim Benson on Twitter: @ourfounder
	Personal Kanban Homepage: http://personalkanban.com
	Kidzban: http://www.personalkanban.com/pk/kidzban/#sthash.z8kG6i9V.dpbs
	Modus Cooperandi: http://moduscooperandi.com/
	Lean Kanban Conference Europe: http://www.leankanban.eu/
	Personal Kanban Training: http://www.lkce13.com/tutorials/lean-for-knowledge-work/</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>41:29</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/Ai5Ztc7nYDY/SE-RadioEpisode196-JimBension-PersonalKanban.mp3" fileSize="40078077" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2013/07/episode-196-personal-kanban-with-jim-benson/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/Ai5Ztc7nYDY/SE-RadioEpisode196-JimBension-PersonalKanban.mp3" length="40078077" type="audio/mpeg" /><feedburner:origEnclosureLink>http://traffic.libsyn.com/seradio/SE-RadioEpisode196-JimBension-PersonalKanban.mp3</feedburner:origEnclosureLink></item><item><title>Episode 195: Ellen Gottensdiener and Mary Gorman</title><link>http://feedproxy.google.com/~r/se-radio/~3/71pMEtLj1bM/</link><category>Episodes</category><category>agile</category><category>Agile Product Planning and Analysis</category><category>analysts</category><category>computer science</category><category>consulting</category><category>Discover to Deliver</category><category>EBG</category><category>Ellen Gottensdiener</category><category>Mary Gorman</category><category>Neil Maiden</category><category>practices</category><category>product partnerships</category><category>project practices</category><category>requirements</category><category>software</category><category>software engineering</category><category>structured conversation</category><category>technology</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Wed, 19 Jun 2013 13:06:09 PDT</pubDate><guid isPermaLink="false">http://www.se-radio.net/?p=1358</guid><description>Recording Venue: WebEx Guest: Ellen Gottensdiener and Mary Gorman Ellen Gottensdiener and Mary Gorman of EBG Consulting talk with Neil Maiden about agile projects, requirements practices and their new book entitled Discover to Deliver: Agile Product Planning and Analysis. The conversation begins with an exploration of how agile has changed requirements and project practices over the [&amp;#8230;]&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/71pMEtLj1bM" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2013/06/episode-195-ellen-gottensdiener-and-mary-gorman/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><itunes:subtitle>Recording Venue: WebEx - Guest: Ellen Gottensdiener and Mary Gorman Ellen Gottensdiener and Mary Gorman of EBG Consulting talk with Neil Maiden about agile projects, requirements practices and their new book entitled Discover to Deliver: Agile Produc...</itunes:subtitle><itunes:summary>Recording Venue: WebEx

Guest: Ellen Gottensdiener and Mary Gorman
Ellen Gottensdiener and Mary Gorman of EBG Consulting talk with Neil Maiden about agile projects, requirements practices and their new book entitled Discover to Deliver: Agile Product Planning and Analysis. The conversation begins with an exploration of how agile has changed requirements and project practices over the last decade. Ellen and Mary then talk about some of the big concepts in agile requirements — creating a product by identifying and building product options that provide value, and recognizing the importance of product partnerships. Particular importance is placed on the structured conversation, a technique for ongoing, systematic and collaborative delivery of product options. The conversation ends with Ellen and Mary recommending changes that analysts might adapt in their current requirements practices.


	Discover to Deliver book website 
	"A Quick Dip into Discover to Deliver"
	"Strengthen Your Discovery Muscle"
	Short readings related to Discover to Deliver
	Author Book Club Webinar about Discover to Deliver
	Download Visual Elements from the book (including the 7 Product Dimensions and the Options Board Kit)
	Learn and apply with EBG Consulting</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>59:09</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/qo4jNM4DFJA/EP195-MaryGormanEllenGottesdiener.mp3" fileSize="56796584" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2013/06/episode-195-ellen-gottensdiener-and-mary-gorman/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/qo4jNM4DFJA/EP195-MaryGormanEllenGottesdiener.mp3" length="56796584" type="audio/mpeg" /><feedburner:origEnclosureLink>http://traffic.libsyn.com/seradio/EP195-MaryGormanEllenGottesdiener.mp3</feedburner:origEnclosureLink></item><item><title>Episode 194: Michael Hunger on Graph Databases</title><link>http://feedproxy.google.com/~r/se-radio/~3/OWknxfWATkA/</link><category>Episodes</category><category>database</category><category>databases</category><category>graph database</category><category>modeling</category><category>Neo Technology</category><category>Neo4J</category><category>nosql</category><category>SQL</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Wed, 22 May 2013 10:23:04 PDT</pubDate><guid isPermaLink="false">http://www.se-radio.net/?p=1348</guid><description>Recording Venue: Skype Guest: Michael Hunger Michael Hunger of Neo Technology, and a developer on the Neo4J database, joins Robert to discuss graph databases. Graph databases fall within the larger category of NoSQL databases but they are not primarily a solution to problems of scale. They differentiate themselves from RDBMS in offering a data model built [&amp;#8230;]&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/OWknxfWATkA" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2013/05/episode-194-michael-hunger/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">4</slash:comments><itunes:subtitle>Recording Venue: Skype - Guest: Michael Hunger - Michael Hunger of Neo Technology, and a developer on the Neo4J database, joins Robert to discuss graph databases. Graph databases fall within the larger category of NoSQL databases but they are not pri...</itunes:subtitle><itunes:summary>Recording Venue: Skype

Guest: Michael Hunger

Michael Hunger of Neo Technology, and a developer on the Neo4J database, joins Robert to discuss graph databases. Graph databases fall within the larger category of NoSQL databases but they are not primarily a solution to problems of scale. They differentiate themselves from RDBMS in offering a data model built with graphs rather than tables. Michael provides insight into many conceptual questions including: What is a graph? Is the world a graph? When are graphs a better representation of a problem than tables? When does a graph database outperform a relational database? How do graph databases scale? Michael also provides some insights into how thinking in terms of graphs changes the way that engineers view their domain. Graph databases are able to natively support queries that would be nearly impossible to express in SQL. The discussion also covers the consistency models of graph databases and an overview of the development environment for graph databases. Finally, the guest gives an overview of the emerging graph database space and where we are on the adoption curve.

	Graph Database on Wikipedia
	neo4j 
	GraphConnect 2012/2013 
	Graph-database.org 
	Graph Databases Book 
	Michael Hunger interviewed about graph databases and other persistence technologies.
	Graph Databases, NoSQL and Neo4j 
	Twitter’s FlockDB 
	Michael Hunger's blog
	Michael Hunger on Twitter 
	Neo Technology
	Neo4j on Twitter
	Neo4j on GitHub</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>1:02:37</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/CZon8RsmdGA/EP194-MichaelHunger.mp3" fileSize="60135679" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2013/05/episode-194-michael-hunger/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/CZon8RsmdGA/EP194-MichaelHunger.mp3" length="60135679" type="audio/mpeg" /><feedburner:origEnclosureLink>http://traffic.libsyn.com/seradio/EP194-MichaelHunger.mp3</feedburner:origEnclosureLink></item><item><title>Episode 193: Apache Mahout</title><link>http://feedproxy.google.com/~r/se-radio/~3/Pk6DvWFWCWY/</link><category>Episodes</category><category>apache</category><category>big data</category><category>classification</category><category>clustering</category><category>hadoop</category><category>large data sets</category><category>mahout</category><category>partitioning</category><category>recommendations</category><category>similarity metrics</category><category>supervised learning</category><category>unsupervised learning</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Mon, 22 Apr 2013 12:35:50 PDT</pubDate><guid isPermaLink="false">http://www.se-radio.net/?p=1339</guid><description>Recording Venue: Skype Guest: Grant Ingersoll Grant Ingersoll, founder of the Mahout project, talks with Robert about machine learning.   The conversation begins with an introduction to machine learning and the forces driving the adoption of this technique. Grant explains the three main use cases, similarity metrics, supervised versus unsupervised learning, and the use of large data [&amp;#8230;]&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/Pk6DvWFWCWY" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2013/04/episode-193-apache-mahout/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">2</slash:comments><itunes:subtitle>Recording Venue: Skype - Guest: Grant Ingersoll - Grant Ingersoll, founder of the Mahout project, talks with Robert about machine learning.   The conversation begins with an introduction to machine learning and the forces driving the adoption of this...</itunes:subtitle><itunes:summary>Recording Venue: Skype

Guest: Grant Ingersoll

Grant Ingersoll, founder of the Mahout project, talks with Robert about machine learning.   The conversation begins with an introduction to machine learning and the forces driving the adoption of this technique. Grant explains the three main use cases, similarity metrics, supervised versus unsupervised learning, and the use of large data sets. He also provides a brief history of the Mahout project and the connection between Mahout and Hadoop.  The remainder of the episode dives into the three main uses cases: recommendations, clustering, and classification. Grant and Robert discuss each use case, illustrating with examples and a typical algorithm. Recommendation is a technique for identifying items that a user would like to buy, use, or otherwise consume based on the preferences of similar users. Clustering is the partitioning of the data set into a small number of sets of similar items.  Classification is the assignment of new items to a small number of existing sets.

	The Mahout Project
	Mahout in Action (book)
	Grant Ingersoll’s blog
	Data Science Central hub
	Free class on Machine Learning from Stanford University
	Programming Collective Intelligence 
	Grant Ingersoll is a co-author of the book, Taming Text 
	LucidWorks</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>1:08:10</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/rpXOFwe-lu8/EP193-GrantIngersoll-ApacheMahout.mp3" fileSize="65455658" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2013/04/episode-193-apache-mahout/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/rpXOFwe-lu8/EP193-GrantIngersoll-ApacheMahout.mp3" length="65455658" type="audio/mpeg" /><feedburner:origEnclosureLink>http://traffic.libsyn.com/seradio/EP193-GrantIngersoll-ApacheMahout.mp3</feedburner:origEnclosureLink></item><item><title>Episode 192: Open Source Development: Perspectives From Management Science</title><link>http://feedproxy.google.com/~r/se-radio/~3/5ByNevV4TCU/</link><category>Episodes</category><category>innovation</category><category>management science</category><category>open source development</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Wed, 13 Feb 2013 12:08:21 PST</pubDate><guid isPermaLink="false">http://www.se-radio.net/?p=1325</guid><description>Recording Venue: Swiss Federal Institute of Technology, Zürich Guest: Georg von Krogh Open source development has had a major impact on both private and public development and use of software. This is an interview with one of the key researchers on open source development, Professor Georg von Krogh of the Swiss Federal Institute of Technology in [&amp;#8230;]&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/5ByNevV4TCU" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2013/02/episode-192-open-source-development-perspectives-from-management-science/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><itunes:subtitle>Recording Venue: Swiss Federal Institute of Technology, Zürich - Guest: Georg von Krogh - Open source development has had a major impact on both private and public development and use of software. This is an interview with one of the key researchers ...</itunes:subtitle><itunes:summary>Recording Venue: Swiss Federal Institute of Technology, Zürich

Guest: Georg von Krogh

Open source development has had a major impact on both private and public development and use of software. This is an interview with one of the key researchers on open source development, Professor Georg von Krogh of the Swiss Federal Institute of Technology in Zürich. The interview focuses on the current state of open source development, characteristics of successful open source projects, what management science can learn from the open source community, what motivates open source developers, and research questions related to open source development.

	Management Science: Special Issue on Open Source Software
	IEEE Software special issue: Developing with Open Source Software
	Please take an SE Radio survey and let us know what you think!</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>18:09</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/z4WQLIVhTi4/GeorgVonKrogh-Open_Source.mp3" fileSize="17446217" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2013/02/episode-192-open-source-development-perspectives-from-management-science/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/z4WQLIVhTi4/GeorgVonKrogh-Open_Source.mp3" length="17446217" type="audio/mpeg" /><feedburner:origEnclosureLink>http://traffic.libsyn.com/seradio/GeorgVonKrogh-Open_Source.mp3</feedburner:origEnclosureLink></item><item><title>Episode 191: Massively Open Online Courses</title><link>http://feedproxy.google.com/~r/se-radio/~3/b2jOTTJUir0/</link><category>Episodes</category><category>concurrent and networked software</category><category>digital learning</category><category>frameworks</category><category>massive open online course</category><category>patterns</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Mon, 07 Jan 2013 09:27:43 PST</pubDate><guid isPermaLink="false">http://www.se-radio.net/?p=1310</guid><description>Recording Venue: Skype Guest: Douglas C. Schmidt In this episode we talk with Douglas C. Schmidt, who is a professor of computer science at Vanderbilt University and a well-respected authority in the fields of patterns and frameworks for concurrent and networked software. In this interview we talk about these topics in the context of massive [&amp;#8230;]&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/b2jOTTJUir0" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2013/01/episode-191-massively-open-online-courses/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">12</slash:comments><itunes:subtitle>Recording Venue: Skype - Guest: Douglas C. Schmidt - In this episode we talk with Douglas C. Schmidt, who is a professor of computer science at Vanderbilt University and a well-respected authority in the fields of patterns and frameworks for concurre...</itunes:subtitle><itunes:summary>Recording Venue: Skype

Guest: Douglas C. Schmidt

In this episode we talk with Douglas C. Schmidt, who is a professor of computer science at Vanderbilt University and a well-respected authority in the fields of patterns and frameworks for concurrent and networked software. In this interview we talk about these topics in the context of massive open online courses, which are a disruptive technology trend that is profoundly affecting how education is delivered around the world.

	Doug's Coursera course on Pattern-Oriented Software Architecture: Patterns for Concurrent and Networked Software
	Pedagogical Philosophy of Coursera
	Daphne Koller (co-founder of Coursera) talk on The Online Revolution: Education for Everyone
	Online material from other software courses that Doug has taught
	Video of a presentation on patterns and frameworks for concurrent and networked software
	Doug's web page's</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>45:21</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/UC515wp8yhg/MOOC-DougSchmidt.mp3" fileSize="43552649" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2013/01/episode-191-massively-open-online-courses/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/UC515wp8yhg/MOOC-DougSchmidt.mp3" length="43552649" type="audio/mpeg" /><feedburner:origEnclosureLink>http://traffic.libsyn.com/seradio/MOOC-DougSchmidt.mp3</feedburner:origEnclosureLink></item><item><title>Episode 190: Lean (Software) Development</title><link>http://feedproxy.google.com/~r/se-radio/~3/dQYKlLkizm8/</link><category>Episodes</category><category>agile</category><category>lean</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Tue, 18 Dec 2012 15:05:10 PST</pubDate><guid isPermaLink="false">http://www.se-radio.net/?p=1295</guid><description>Recording Venue: WebEx Guest: Christof Ebert Christof Ebert, managing director of Vector Consulting Services talks with Frances Paulisch on his insights to how lean applies to product development. The interview centers around five key principles of lean development, namely end-to-end focus on creating value for the customer, eliminating waste, optimizing value streams, empowering people, and [&amp;#8230;]&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/dQYKlLkizm8" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2012/12/episode-190-lean-software-development/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">2</slash:comments><itunes:subtitle>Recording Venue: WebEx - Guest: Christof Ebert - Christof Ebert, managing director of Vector Consulting Services talks with Frances Paulisch on his insights to how lean applies to product development. The interview centers around five key principles ...</itunes:subtitle><itunes:summary>Recording Venue: WebEx

Guest: Christof Ebert

Christof Ebert, managing director of Vector Consulting Services talks with Frances Paulisch on his insights to how lean applies to product development. The interview centers around five key principles of lean development, namely end-to-end focus on creating value for the customer, eliminating waste, optimizing value streams, empowering people, and continuously improving. This IEEE podcast addresses lean software development as opposed to management or manufacturing theories. In that context, we sought to address some key questions: What design principles deliver value, and how are they introduced to best manage change? Many practical examples illustrate how to introduce lean without strangulating development.

	IEEE Software special issue on lean development
	Guest editors' introduction
	Vector Consulting Services on efficiency improvement
	Lean development presentation of Christof Ebert</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>1:03:23</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/uVB9QOA6jxQ/ChristofEbert.mp3" fileSize="60846143" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2012/12/episode-190-lean-software-development/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/uVB9QOA6jxQ/ChristofEbert.mp3" length="60846143" type="audio/mpeg" /><feedburner:origEnclosureLink>http://traffic.libsyn.com/seradio/ChristofEbert.mp3</feedburner:origEnclosureLink></item><item><title>Episode 189: Eric Lubow on Polyglot Persistence</title><link>http://feedproxy.google.com/~r/se-radio/~3/ZE7ZEe61tPE/</link><category>Episodes</category><category>architecture</category><category>database</category><category>polyglottism</category><category>polygot persistence</category><category>programming languages. driver libraries</category><category>servers</category><category>software engineering</category><category>storage solutions</category><category>systems</category><category>testing</category><category>usage patterns</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Fri, 16 Nov 2012 12:35:40 PST</pubDate><guid isPermaLink="false">http://www.se-radio.net/?p=1270</guid><description>Recording Venue: Skype Guest: Eric Lubow Eric Lubow and Robert discuss polyglot persistence, a term used to describe systems that incorporate multiple specialized persistent stores rather than a single general-purpose database.  Eric provides insights into the forces driving this trend:  including diverse data usage patterns, low latency, and increasing volumes of data.  The emergence of [&amp;#8230;]&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/ZE7ZEe61tPE" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2012/11/episode-189-eric-lubow-on-polyglot-persistence/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">4</slash:comments><itunes:subtitle>Recording Venue: Skype - Guest: Eric Lubow - Eric Lubow and Robert discuss polyglot persistence, a term used to describe systems that incorporate multiple specialized persistent stores rather than a single general-purpose database.</itunes:subtitle><itunes:summary>Recording Venue: Skype

Guest: Eric Lubow

Eric Lubow and Robert discuss polyglot persistence, a term used to describe systems that incorporate multiple specialized persistent stores rather than a single general-purpose database.  Eric provides insights into the forces driving this trend:  including diverse data usage patterns, low latency, and increasing volumes of data.  The emergence of many free storage servers that perform well much better than most general-purpose databases for specific usage patterns has made polyglot persistence cost-effective.   Eric shares some of his experiences deploying storage solutions, programming languages, and the driver libraries.  Eric and Robert wrap up with a discussion of the impact of polyglottism on architecture and testing.  Along the way, they explore the cultural shifts that need to take place as organizations move from the one-size-fits-all model.

	Eric Lubow’s blog
	@elubow on Twitter
	Eric Lubow’s presentation at the Cassandra Summit 2012
	Slides from Eric’s presentation
	Martin Fowler’s book NoSQL Distilled: A Brief Guide to the Emerging World of Polyglot Persistence
	SimpleReach web site</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>51:44</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/FCnNYlhRLUY/EricLubow.mp3" fileSize="49672739" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2012/11/episode-189-eric-lubow-on-polyglot-persistence/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/FCnNYlhRLUY/EricLubow.mp3" length="49672739" type="audio/mpeg" /><feedburner:origEnclosureLink>http://traffic.libsyn.com/seradio/EricLubow.mp3</feedburner:origEnclosureLink></item><item><title>Episode 188: Requirements in Agile Projects</title><link>http://feedproxy.google.com/~r/se-radio/~3/UMt5Rpgeg6g/</link><category>Episodes</category><category>agile</category><category>agile practices</category><category>agile requirements</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Wed, 12 Sep 2012 14:25:34 PDT</pubDate><guid isPermaLink="false">http://www.se-radio.net/?p=1256</guid><description>Recording Venue: Paddington, London Guests: Suzanne Robertson and James Robertson, Atlantic Systems Guild Neil Maiden, Editor of the Requirements column in IEEE Software, talks with Suzanne and James Robertson of the Atlantic Systems Guild about the emergence and impact of agile practices on requirements work. The interview begins with an exploration of how agile practices have [&amp;#8230;]&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/UMt5Rpgeg6g" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2012/09/episode-188-requirements-in-agile-projects/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">19</slash:comments><itunes:subtitle>Recording Venue: Paddington, London - Guests: Suzanne Robertson and James Robertson, Atlantic Systems Guild - Neil Maiden, Editor of the Requirements column in IEEE Software, talks with Suzanne and James Robertson of the Atlantic Systems Guild about ...</itunes:subtitle><itunes:summary>Recording Venue: Paddington, London

Guests: Suzanne Robertson and James Robertson, Atlantic Systems Guild

Neil Maiden, Editor of the Requirements column in IEEE Software, talks with Suzanne and James Robertson of the Atlantic Systems Guild about the emergence and impact of agile practices on requirements work. The interview begins with an exploration of how agile practices have changed requirements work. Suzanne and James introduce an important distinction between "Agile" and "agile", then use it to drill down on how agile can address emerging important topics such as innovation. They close with thoughts about the future of requirements work in an agile world.

	Atlantic Systems Guild
	Suzanne Robertson
	James Robertson
	Neil Maiden</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>1:00:00</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/0Eml3abrOzU/Robertson.mp3" fileSize="57600652" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2012/09/episode-188-requirements-in-agile-projects/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/0Eml3abrOzU/Robertson.mp3" length="57600652" type="audio/mpeg" /><feedburner:origEnclosureLink>http://traffic.libsyn.com/seradio/Robertson.mp3</feedburner:origEnclosureLink></item><item><title>Episode 187: Grant Ingersoll on the Solr Search Engine</title><link>http://feedproxy.google.com/~r/se-radio/~3/0jrAgbQi6UE/</link><category>Episodes</category><category>database</category><category>indexing</category><category>Lucene</category><category>search</category><category>Solr</category><category>text processing</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Wed, 18 Jul 2012 15:08:11 PDT</pubDate><guid isPermaLink="false">http://www.se-radio.net/?p=1239</guid><description>Recording Venue: Lucene Revolution 2012 (Boston) Guest: Grant Ingersoll Grant Ingersoll, a committer on the Apache Solr and Lucene, talks with Robert about the  problems of full-text search and why applications are taking control of their own search, and then continues with a dive into the architecture of the Solr search engine. The architecture portion of the [&amp;#8230;]&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/0jrAgbQi6UE" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2012/07/episode-187-grant-ingersoll-on-the-solr-search-engine/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">5</slash:comments><itunes:subtitle>Recording Venue: Lucene Revolution 2012 (Boston) - Guest: Grant Ingersoll - Grant Ingersoll, a committer on the Apache Solr and Lucene, talks with Robert about the  problems of full-text search and why applications are taking control of their own sea...</itunes:subtitle><itunes:summary>Recording Venue: Lucene Revolution 2012 (Boston)

Guest: Grant Ingersoll

Grant Ingersoll, a committer on the Apache Solr and Lucene, talks with Robert about the  problems of full-text search and why applications are taking control of their own search, and then continues with a dive into the architecture of the Solr search engine. The architecture portion of the interview covers the Lucene full-text index, including the text ingestion process, how indexes are built, and how the search engine ranks search results.  Grant also explains some of the key differences between a search engine and a relational database, and why both have a place within modern application architectures.  They close with a discussion of how Solr can scale up to serve very large indexes.

	Apache Solr project
	Apache Lucene project
	Grant Ingersoll's blog
	Lucid Imagination
	Taming Text</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>51:58</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/0yM8dl0R_S8/ingersoll.mp3" fileSize="74843105" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2012/07/episode-187-grant-ingersoll-on-the-solr-search-engine/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/0yM8dl0R_S8/ingersoll.mp3" length="74843105" type="audio/mpeg" /><feedburner:origEnclosureLink>http://traffic.libsyn.com/seradio/ingersoll.mp3</feedburner:origEnclosureLink></item><item><title>Episode 186: Martin Fowler and Pramod Sadalage on Agile Database Development</title><link>http://feedproxy.google.com/~r/se-radio/~3/w-8mzFCLd2I/</link><category>Episodes</category><category>agile</category><category>database</category><category>database migration</category><category>incremental changes</category><category>SQL</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Fri, 01 Jun 2012 14:24:00 PDT</pubDate><guid isPermaLink="false">http://www.se-radio.net/?p=1226</guid><description>Recording Venue: Skype Guest: Martin Fowler and Pramod Sadalage In this episode, we talk with Pramod Sadalage and Martin Fowler about database evolution and agile database development. We discuss the basic challenges for working with a database in an agile development culture and how to include database design and most of all, database evolution, in [&amp;#8230;]&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/w-8mzFCLd2I" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2012/06/episode-186-martin-fowler-and-pramod-sadalage-on-agile-database-development/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">13</slash:comments><itunes:subtitle>Recording Venue: Skype - Guest: Martin Fowler and Pramod Sadalage - In this episode, we talk with Pramod Sadalage and Martin Fowler about database evolution and agile database development. We discuss the basic challenges for working with a database i...</itunes:subtitle><itunes:summary>Recording Venue: Skype

Guest: Martin Fowler and Pramod Sadalage

In this episode, we talk with Pramod Sadalage and Martin Fowler about database evolution and agile database development. We discuss the basic challenges for working with a database in an agile development culture and how to include database design and most of all, database evolution, in the usually short development cycles of modern software development methods. We talk about continuous integration for database-related code changes using scripted database schema changes, the usage of multiple database schemas to overcome centralized deployments for development teams, how to migrate data in incremental steps, and what tools can help in this agile environment. We discuss how to break down database refactorings in small and incremental steps, one of the most important parts of integrating database changes into an agile development flow.

	Database Refactorings
	Evolutionary Database Design
	Martin Fowler
	Refactoring Databases - Evolutionary Database Design
	Recipes for Continuous Database Integration</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>48:12</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/HoNgGDtYEEY/SERadio186.mp3" fileSize="46281375" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2012/06/episode-186-martin-fowler-and-pramod-sadalage-on-agile-database-development/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/HoNgGDtYEEY/SERadio186.mp3" length="46281375" type="audio/mpeg" /><feedburner:origEnclosureLink>http://traffic.libsyn.com/seradio/SERadio186.mp3</feedburner:origEnclosureLink></item><item><title>Episode 185: Dwight Merriman on Replication</title><link>http://feedproxy.google.com/~r/se-radio/~3/AnZxCfO9yHo/</link><category>Episodes</category><category>database</category><category>high availability</category><category>MongoDB</category><category>replication</category><category>scalability</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Tue, 10 Apr 2012 15:42:28 PDT</pubDate><guid isPermaLink="false">http://www.se-radio.net/?p=1203</guid><description>Recording Venue: MongoSF, San Francisco Guest: Dwight Merriman As application data size and throughput have outgrown the processing and storage needs of commodity servers, replication has become an increasingly important strategy. In this episode, Robert talks with Dwight Merriman about database replication. Topics covered include replication basics, master-slave versus master-master, failure and recovery, replication versus [&amp;#8230;]&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/AnZxCfO9yHo" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2012/04/episode-185-dwight-merriman-on-replication/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">3</slash:comments><itunes:subtitle>Recording Venue: MongoSF, San Francisco - Guest: Dwight Merriman - As application data size and throughput have outgrown the processing and storage needs of commodity servers, replication has become an increasingly important strategy.</itunes:subtitle><itunes:summary>Recording Venue: MongoSF, San Francisco

Guest: Dwight Merriman



As application data size and throughput have outgrown the processing and storage needs of commodity servers, replication has become an increasingly important strategy. In this episode, Robert talks with Dwight Merriman about database replication. Topics covered include replication basics, master-slave versus master-master, failure and recovery, replication versus backup, whether replication primarily for scaling or for availability, and the internals of MongoDB replica sets.

	Jared Rosoff of 10 gen presentation about MongoDB replication
	Books about MongoDB
	MongoDB blog
	Jeremy Zawodny presentation about MySQL replication
	James Hamilton blog post about inter-data center replication</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>50:02</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/VtM9J_CHk4o/SE185-merriman.fin.mp3" fileSize="72053782" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2012/04/episode-185-dwight-merriman-on-replication/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/VtM9J_CHk4o/SE185-merriman.fin.mp3" length="72053782" type="audio/mpeg" /><feedburner:origEnclosureLink>http://traffic.libsyn.com/seradio/SE185-merriman.fin.mp3</feedburner:origEnclosureLink></item><item><title>Episode 184: The Mainframe with Jeff Frey</title><link>http://feedproxy.google.com/~r/se-radio/~3/7y40HgD5fng/</link><category>Episodes</category><category>cluster</category><category>database</category><category>java</category><category>mainframe</category><category>scaling</category><category>system</category><category>virtualization</category><category>vsam</category><category>z</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Wed, 14 Mar 2012 16:07:45 PDT</pubDate><guid isPermaLink="false">http://www.se-radio.net/?p=1172</guid><description>Recording Venue: Phone Guest: Jeff Frey System z, or the Mainframe, holds most of us in awe — the ultimate computing platform, referenced in Hollywood as well as by those who thought they were dealing with &amp;#8220;legacy&amp;#8221; systems — but what does Mainframe really mean? What does its stack look like? This leading virtualized infrastructure [&amp;#8230;]&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/7y40HgD5fng" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2012/03/episode-184-the-mainframe-with-jeff-frey/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">18</slash:comments><itunes:subtitle>Recording Venue: Phone - Guest: Jeff Frey - System z, or the Mainframe, holds most of us in awe — the ultimate computing platform, referenced in Hollywood as well as by those who thought they were dealing with "legacy" systems — but what does Mai...</itunes:subtitle><itunes:summary>Recording Venue: Phone

Guest: Jeff Frey



System z, or the Mainframe, holds most of us in awe — the ultimate computing platform, referenced in Hollywood as well as by those who thought they were dealing with "legacy" systems — but what does Mainframe really mean? What does its stack look like?

This leading virtualized infrastructure is not just hardware, but advanced sets of operating system, programming, and transaction-processing platforms that are relied-upon worldwide for massive-scale computational and data needs, and that are becoming increasingly applicable to the cloud world. Jeff Frey, IBM fellow and CTO for System z platform speaks with SE-Radio's Scott Jensen about the history, features, and architecture of one of the world's largest retail computers.

	System z
	Cluster via Sysplex
	VSAM (virtual storage access method)
	Technical Overview</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>1:24:34</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/GxhKY4ozx1E/frey-jensen-final.mp3" fileSize="121790716" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2012/03/episode-184-the-mainframe-with-jeff-frey/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/GxhKY4ozx1E/frey-jensen-final.mp3" length="121790716" type="audio/mpeg" /><feedburner:origEnclosureLink>http://traffic.libsyn.com/seradio/frey-jensen-final.mp3</feedburner:origEnclosureLink></item><item><title>Episode 183: SE Radio becomes part of IEEE Software</title><link>http://feedproxy.google.com/~r/se-radio/~3/vwPNfzXv4UU/</link><category>Episodes</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Tue, 07 Feb 2012 09:38:49 PST</pubDate><guid isPermaLink="false">http://www.se-radio.net/?p=1147</guid><description>SE Radio will continue producing podcasts under the wings of IEEE Software, a respected magazine published by the IEEE Computer Society.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/vwPNfzXv4UU" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2012/02/se-radio-becomes-part-of-ieee-software/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">10</slash:comments><itunes:subtitle>SE Radio will continue producing podcasts under the wings of IEEE Software, a respected magazine published by the IEEE Computer Society.</itunes:subtitle><itunes:summary>SE Radio will continue producing podcasts under the wings of IEEE Software, a respected magazine published by the IEEE Computer Society.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>21:55</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/pKp_lQZbj3Y/ieeeTransition.mp3" fileSize="21039361" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2012/02/se-radio-becomes-part-of-ieee-software/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/pKp_lQZbj3Y/ieeeTransition.mp3" length="21039361" type="audio/mpeg" /><feedburner:origEnclosureLink>http://traffic.libsyn.com/seradio/ieeeTransition.mp3</feedburner:origEnclosureLink></item><item><title>Episode 182: Domain-Specific Languages with Martin Fowler and Rebecca Parsons</title><link>http://feedproxy.google.com/~r/se-radio/~3/2VCOnKZ97MU/</link><category>Episodes</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Tue, 24 Jan 2012 19:43:44 PST</pubDate><guid isPermaLink="false">http://www.se-radio.net/?p=1142</guid><description>In this episode, Markus talk with Martin Fowler and Rebecca Parsons about domain-specific languages.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/2VCOnKZ97MU" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2012/01/episode-182-domain-specific-languages-with-martin-fowler-and-rebecca-parsons/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">16</slash:comments><itunes:subtitle>In this episode, Markus talk with Martin Fowler and Rebecca Parsons about domain-specific languages.</itunes:subtitle><itunes:summary>In this episode, Markus talk with Martin Fowler and Rebecca Parsons about domain-specific languages.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><media:content url="http://feedproxy.google.com/~r/se-radio/~5/kTJLxOzOqy8/episode-182-fowlerAndParsonsDsl.mp3" fileSize="5242880" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2012/01/episode-182-domain-specific-languages-with-martin-fowler-and-rebecca-parsons/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/kTJLxOzOqy8/episode-182-fowlerAndParsonsDsl.mp3" length="5242880" type="audio/mpeg" /><feedburner:origEnclosureLink>http://traffic.libsyn.com/seradio/episode-182-fowlerAndParsonsDsl.mp3</feedburner:origEnclosureLink></item><item><title>Episode 181: Distributed Scrum with Rini van Solingen</title><link>http://feedproxy.google.com/~r/se-radio/~3/lK3unv3Dr6E/</link><category>Episodes</category><category>agile teams</category><category>distributed agile</category><category>management</category><category>scrum</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Tue, 06 Dec 2011 19:59:45 PST</pubDate><guid isPermaLink="false">http://www.se-radio.net/?p=1125</guid><description>In this episode we talk with Rini van Solingen about scrum and agile software development in distributed settings.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/lK3unv3Dr6E" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2011/12/episode-181-distributed-scrum-with-rini-van-solingen/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">6</slash:comments><itunes:subtitle>In this episode we talk with Rini van Solingen about scrum and agile software development in distributed settings.</itunes:subtitle><itunes:summary>In this episode we talk with Rini van Solingen about scrum and agile software development in distributed settings.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>55:51</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/XSIGTEeo9mk/episode-181-distributedScrum.mp3" fileSize="53615096" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2011/12/episode-181-distributed-scrum-with-rini-van-solingen/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/XSIGTEeo9mk/episode-181-distributedScrum.mp3" length="53615096" type="audio/mpeg" /><feedburner:origEnclosureLink>http://traffic.libsyn.com/seradio/episode-181-distributedScrum.mp3</feedburner:origEnclosureLink></item><item><title>Episode 180: Leading Agile Developers with Jurgen Appelo</title><link>http://feedproxy.google.com/~r/se-radio/~3/JRYB9TtFRqA/</link><category>Episodes</category><category>agile</category><category>management</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Mon, 24 Oct 2011 21:12:16 PDT</pubDate><guid isPermaLink="false">http://www.se-radio.net/?p=1120</guid><description>In this episode Michael interviews Jurgen Appelo on the topic of leading agile developers.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/JRYB9TtFRqA" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2011/10/episode-180-leading-agile-developers-with-jurgen-appelo/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">4</slash:comments><itunes:subtitle>In this episode Michael interviews Jurgen Appelo on the topic of leading agile developers.</itunes:subtitle><itunes:summary>In this episode Michael interviews Jurgen Appelo on the topic of leading agile developers.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>36:06</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/_gjD-noobMc/seradio-episode180-leadingAgileDevelopers.mp3" fileSize="34663091" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2011/10/episode-180-leading-agile-developers-with-jurgen-appelo/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/_gjD-noobMc/seradio-episode180-leadingAgileDevelopers.mp3" length="34663091" type="audio/mpeg" /><feedburner:origEnclosureLink>http://traffic.libsyn.com/seradio/seradio-episode180-leadingAgileDevelopers.mp3</feedburner:origEnclosureLink></item><item><title>Episode 179: Cassandra with Jonathan Ellis</title><link>http://feedproxy.google.com/~r/se-radio/~3/lEDCMZzzV4Q/</link><category>Episodes</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Fri, 07 Oct 2011 21:54:33 PDT</pubDate><guid isPermaLink="false">http://www.se-radio.net/?p=1102</guid><description>Cassandra is a distributed, scalable non-relational data store influenced by the Google BigTable project and many of the distributed systems techniques pioneered by the Amazon Dynamo paper.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/lEDCMZzzV4Q" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2011/10/episode-179-cassandra-with-jonathan-ellis/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">10</slash:comments><itunes:subtitle>Cassandra is a distributed, scalable non-relational data store influenced by the Google BigTable project and many of the distributed systems techniques pioneered by the Amazon Dynamo paper.</itunes:subtitle><itunes:summary>Cassandra is a distributed, scalable non-relational data store influenced by the Google BigTable project and many of the distributed systems techniques pioneered by the Amazon Dynamo paper.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>59:30</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/Z2SiSR3BfEY/seradio-episode179-cassandra.mp3" fileSize="57125070" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2011/10/episode-179-cassandra-with-jonathan-ellis/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/Z2SiSR3BfEY/seradio-episode179-cassandra.mp3" length="57125070" type="audio/mpeg" /><feedburner:origEnclosureLink>http://traffic.libsyn.com/seradio/seradio-episode179-cassandra.mp3</feedburner:origEnclosureLink></item><item><title>Episode 178: Akka With Jonas Boner</title><link>http://feedproxy.google.com/~r/se-radio/~3/b132PWjBpEM/</link><category>Episodes</category><category>concurrency</category><category>middleware</category><category>scala</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Wed, 10 Aug 2011 09:25:26 PDT</pubDate><guid isPermaLink="false">http://www.se-radio.net/?p=1091</guid><description>This episode is a conversation with Jonas Boner about Akka.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/b132PWjBpEM" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2011/08/episode-178-akka-with-jonas-boner/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">6</slash:comments><itunes:subtitle>This episode is a conversation with Jonas Boner about Akka.</itunes:subtitle><itunes:summary>This episode is a conversation with Jonas Boner about Akka.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>1:19:45</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/JgzAQcG-oUk/seradio-episode178-akka.mp3" fileSize="76560647" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2011/08/episode-178-akka-with-jonas-boner/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/JgzAQcG-oUk/seradio-episode178-akka.mp3" length="76560647" type="audio/mpeg" /><feedburner:origEnclosureLink>http://traffic.libsyn.com/seradio/seradio-episode178-akka.mp3</feedburner:origEnclosureLink></item><item><title>Episode 177: IBM i (OS/400) Operating System with Steve Will</title><link>http://feedproxy.google.com/~r/se-radio/~3/Exc6HDARbJo/</link><category>Episodes</category><category>as400</category><category>ibm-i</category><category>java</category><category>PHP</category><category>vitualization</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Tue, 05 Jul 2011 23:02:03 PDT</pubDate><guid isPermaLink="false">http://www.se-radio.net/?p=1084</guid><description>Recording Venue: Phone Guest: Steve Will IBM i (formerly known as OS/400) is an advanced object-based operating system by IBM that runs thousands of businesses around the world.  Steve Will, the Chief Architect of IBM i speaks with us about the history, technical features, and underlying architecture discussing the concepts of Single Level Store, integrated [&amp;#8230;]&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/Exc6HDARbJo" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2011/07/episode-177-ibm-i-os400-operating-system-with-steve-will/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">7</slash:comments><itunes:subtitle>Recording Venue: Phone - Guest: Steve Will - IBM i (formerly known as OS/400) is an advanced object-based operating system by IBM that runs thousands of businesses around the world.  Steve Will, the Chief Architect of IBM i speaks with us about t...</itunes:subtitle><itunes:summary>Recording Venue: Phone

Guest: Steve Will



IBM i (formerly known as OS/400) is an advanced object-based operating system by IBM that runs thousands of businesses around the world.  Steve Will, the Chief Architect of IBM i speaks with us about the history, technical features, and underlying architecture discussing the concepts of Single Level Store, integrated databases, machine and logical virtualization, and workload management in an operating system and environment that takes an alternative and often kinder look at the role operations systems should play vs. the common programming infrastructure management models.

	IBM i
	Steve Will's Blog
	Varnish Architecture Notes
	Single Level Store 
	PHP on i</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>1:03:14</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/057Tf7PZA2I/seradio-episode177-ibmi.mp3" fileSize="60705793" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2011/07/episode-177-ibm-i-os400-operating-system-with-steve-will/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/057Tf7PZA2I/seradio-episode177-ibmi.mp3" length="60705793" type="audio/mpeg" /><feedburner:origEnclosureLink>http://traffic.libsyn.com/seradio/seradio-episode177-ibmi.mp3</feedburner:origEnclosureLink></item><item><title>Episode 176: Quantum Computing with Martin Laforest</title><link>http://feedproxy.google.com/~r/se-radio/~3/6NnqroCM25k/</link><category>Episodes</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Thu, 02 Jun 2011 22:43:42 PDT</pubDate><guid isPermaLink="false">http://www.se-radio.net/?p=1074</guid><description>We talk with Martin Laforest about topics ranging from how quantum computing works, which different models of quantum computing are explored, current and future uses of the approach as well as the current state of the art.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/6NnqroCM25k" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2011/06/episode-176-quantum-computing-with-martin-laforest/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">6</slash:comments><itunes:subtitle>We talk with Martin Laforest about topics ranging from how quantum computing works, which different models of quantum computing are explored, current and future uses of the approach as well as the current state of the art.</itunes:subtitle><itunes:summary>We talk with Martin Laforest about topics ranging from how quantum computing works, which different models of quantum computing are explored, current and future uses of the approach as well as the current state of the art.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>1:05:30</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/lFSAQ8mt3VE/seradio-episode176-qc.mp3" fileSize="62877913" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2011/06/episode-176-quantum-computing-with-martin-laforest/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/lFSAQ8mt3VE/seradio-episode176-qc.mp3" length="62877913" type="audio/mpeg" /><feedburner:origEnclosureLink>http://traffic.libsyn.com/seradio/seradio-episode176-qc.mp3</feedburner:origEnclosureLink></item><item><title>Episode 175: Game Development with Andrew Brownsword</title><link>http://feedproxy.google.com/~r/se-radio/~3/PZIeu1VUPLo/</link><category>Episodes</category><category>game development</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Thu, 05 May 2011 21:23:33 PDT</pubDate><guid isPermaLink="false">http://www.se-radio.net/?p=1062</guid><description>We discuss characteristics and performance properties of modern games and outline the challenges for software development.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/PZIeu1VUPLo" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2011/05/episode-175-game-development-with-andrew-brownsword/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">4</slash:comments><itunes:subtitle>We discuss characteristics and performance properties of modern games and outline the challenges for software development.</itunes:subtitle><itunes:summary>We discuss characteristics and performance properties of modern games and outline the challenges for software development.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>1:04:02</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/KatSIs1rveA/seradio-episode175-gameArchitecture.mp3" fileSize="61478191" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2011/05/episode-175-game-development-with-andrew-brownsword/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/KatSIs1rveA/seradio-episode175-gameArchitecture.mp3" length="61478191" type="audio/mpeg" /><feedburner:origEnclosureLink>http://traffic.libsyn.com/seradio/seradio-episode175-gameArchitecture.mp3</feedburner:origEnclosureLink></item><item><title>Episode 174: Chip Manufacturing and Waferscanners</title><link>http://feedproxy.google.com/~r/se-radio/~3/eYLC5-4-zU4/</link><category>Episodes</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Thu, 07 Apr 2011 22:30:21 PDT</pubDate><guid isPermaLink="false">http://www.se-radio.net/?p=1050</guid><description>Guest: Wilbert Albers Host: Markus In this episode we take a look at microchip production, with a special focus on waferscanners. To do this, we talked with Wilbert Albers of ASML, the leading waferscanner manufacturer in the world. In the episode, we talk about the overall chip production process (from silicon sand over wafer cutting [&amp;#8230;]&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/eYLC5-4-zU4" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2011/04/episode-174-chip-manufacturing-and-waferscanners/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">9</slash:comments><itunes:subtitle>Guest: Wilbert Albers - Host: Markus - In this episode we take a look at microchip production, with a special focus on waferscanners. To do this, we talked with Wilbert Albers of ASML, the leading waferscanner manufacturer in the world. In the episode,</itunes:subtitle><itunes:summary>Guest: Wilbert Albers

Host: Markus

In this episode we take a look at microchip production, with a special focus on waferscanners. To do this, we talked with Wilbert Albers of ASML, the leading waferscanner manufacturer in the world. In the episode, we talk about the overall chip production process (from silicon sand over wafer cutting to lithography and etching), and then we talk about the challenges of building high-precision, high-throughput waferscanners.

Links:

	ASML
	ASML TwinScan
	ASML PAS
	ASML eUV
	Zeiss Optics for Waferscanners
	Wafer
	Transmeta
	Integrated Circuit (IC)
	Transistor
	Semiconductor
	Mercury-vapor Lamp
	Excimer Laser
	Plasma Source
	Etching
	Hydraulics
	Linear Motor
	Antonie van Leeuwenhoek
	Diffraction
	Control Theory
	Interferometry
	Real-Time computing
	C
	Java 
	Python
	Fab
	Foundry
	Metrology
	EUV
	Moore's Law</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>49:36</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/lUCaBULcmAY/seradio-episode174-chipProduction.mp3" fileSize="47617422" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2011/04/episode-174-chip-manufacturing-and-waferscanners/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/lUCaBULcmAY/seradio-episode174-chipProduction.mp3" length="47617422" type="audio/mpeg" /><feedburner:origEnclosureLink>http://traffic.libsyn.com/seradio/seradio-episode174-chipProduction.mp3</feedburner:origEnclosureLink></item><item><title>Episode 173: Feature-Oriented Software Development with Sven Apel – Pt 2</title><link>http://feedproxy.google.com/~r/se-radio/~3/OcvsRGrIlmE/</link><category>Episodes</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Sat, 19 Mar 2011 09:17:48 PDT</pubDate><guid isPermaLink="false">http://www.se-radio.net/?p=1041</guid><description>Recording Venue: University of Passau Guest: Sven Apel Host: Stefan In this second episode on Feature-Oriented Software Development (FOSD), Sven Apel gives us an overview of programming language and tool support for FOSD. He introduces the Eclipse-based FeatureIDE which covers important phases of the FOSD process, namely domain implementation as well as configuration and generation. [&amp;#8230;]&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/OcvsRGrIlmE" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2011/03/episode-173-feature-oriented-software-development-with-sven-apel-pt-1/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><itunes:subtitle>Recording Venue: University of Passau - Guest: Sven Apel - Host: Stefan - In this second episode on Feature-Oriented Software Development (FOSD), Sven Apel gives us an overview of programming language and tool support for FOSD. - </itunes:subtitle><itunes:summary>Recording Venue: University of Passau

Guest: Sven Apel



Host: Stefan

In this second episode on Feature-Oriented Software Development (FOSD), Sven Apel gives us an overview of programming language and tool support for FOSD.

He introduces the Eclipse-based FeatureIDE which covers important phases of the FOSD process, namely domain implementation as well as configuration and generation. The Eclipse plugin CIDE comes in handy for refactoring an existing code base towards a feature-oriented design and feature modularisation in a stepwise manner. As for programming language support, Sven gives us some hints on how certain mainstream (e.g., C#, Ruby, Scala) and research-driven languages (FeatureC++) assist at turning features into proper feature modules. Sven makes an interesting point by stating that feature modularisation is limited by the common granularity levels available for modularisation in object-oriented languages, namely the levels of objects and methods. Rather, modularisation at the statement and expression level would be equally required.

We end this episode by outlining some burning issues in FOSD research and practise to be tackled in the years to come (e.g., verification of feature-oriented programs and product lines, optimising feature selection, etc.). Sven finally provides some hints on where to keep yourself informed about FOSD and how to participate in FOSD-related events.

Links:

	FeatureIDE
	CIDE
	The FOSD community portal
	FOSD workshop 2010
	FOSD workshop 2009</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>57:44</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/pA6ON-G5MvQ/seradio-episode173-fosd2.mp3" fileSize="55422599" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2011/03/episode-173-feature-oriented-software-development-with-sven-apel-pt-1/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/pA6ON-G5MvQ/seradio-episode173-fosd2.mp3" length="55422599" type="audio/mpeg" /><feedburner:origEnclosureLink>http://traffic.libsyn.com/seradio/seradio-episode173-fosd2.mp3</feedburner:origEnclosureLink></item><item><title>Episode 172: Feature-Oriented Software Development with Sven Apel – Pt 1</title><link>http://feedproxy.google.com/~r/se-radio/~3/wki5HXVEHsQ/</link><category>Episodes</category><category>FDD</category><category>feature</category><category>FOSD</category><category>large scale</category><category>product lines</category><category>variability</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Sat, 19 Feb 2011 10:43:56 PST</pubDate><guid isPermaLink="false">http://www.se-radio.net/?p=1030</guid><description>Sven Apel explains why developing software in a feature-oriented manner is so vital for us as software engineers and why objects are simply not enough.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/wki5HXVEHsQ" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2011/02/episode-172-feature-oriented-software-development-with-sven-apel-pt-1/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">4</slash:comments><itunes:subtitle>Sven Apel explains why developing software in a feature-oriented manner is so vital for us as software engineers and why objects are simply not enough.</itunes:subtitle><itunes:summary>Sven Apel explains why developing software in a feature-oriented manner is so vital for us as software engineers and why objects are simply not enough.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>56:31</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/83DGBm4zk9E/seradio-episode172-fosd1.mp3" fileSize="54257969" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2011/02/episode-172-feature-oriented-software-development-with-sven-apel-pt-1/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/83DGBm4zk9E/seradio-episode172-fosd1.mp3" length="54257969" type="audio/mpeg" /><feedburner:origEnclosureLink>http://traffic.libsyn.com/seradio/seradio-episode172-fosd1.mp3</feedburner:origEnclosureLink></item><item><title>Episode 171: Scala Update with Martin Odersky</title><link>http://feedproxy.google.com/~r/se-radio/~3/SIxu23mI1XU/</link><category>Episodes</category><category>concurrency</category><category>dsls</category><category>programming languages</category><category>scala</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Tue, 01 Feb 2011 19:48:22 PST</pubDate><guid isPermaLink="false">http://www.se-radio.net/?p=1008</guid><description>This episode is an update on the developments around the Scala language.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/SIxu23mI1XU" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2011/02/episode-171-scala-update-with-martin-odersky/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">7</slash:comments><itunes:subtitle>This episode is an update on the developments around the Scala language.</itunes:subtitle><itunes:summary>This episode is an update on the developments around the Scala language.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>52:54</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/HgS5JKub63I/seradio-episode171-scalaUpdate.mp3" fileSize="50795521" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2011/02/episode-171-scala-update-with-martin-odersky/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/HgS5JKub63I/seradio-episode171-scalaUpdate.mp3" length="50795521" type="audio/mpeg" /><feedburner:origEnclosureLink>http://traffic.libsyn.com/seradio/seradio-episode171-scalaUpdate.mp3</feedburner:origEnclosureLink></item><item><title>Episode 170: Large Agile Software Development with Bas Vodde</title><link>http://feedproxy.google.com/~r/se-radio/~3/LApjKej7oXI/</link><category>Episodes</category><category>agile</category><category>distributed</category><category>feature</category><category>large scale</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Tue, 04 Jan 2011 19:58:06 PST</pubDate><guid isPermaLink="false">http://www.se-radio.net/?p=977</guid><description>In this episode Michael talks with Bas Vodde about how to apply agile principles to large and distributed development organizations.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/LApjKej7oXI" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2011/01/episode-170-large-agile-software-development-with-bas-vodde/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">8</slash:comments><itunes:subtitle>In this episode Michael talks with Bas Vodde about how to apply agile principles to large and distributed development organizations.</itunes:subtitle><itunes:summary>In this episode Michael talks with Bas Vodde about how to apply agile principles to large and distributed development organizations.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>49:11</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/c7aU_9o4764/seradio-episode170-basVodde.mp3" fileSize="47212346" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2011/01/episode-170-large-agile-software-development-with-bas-vodde/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/c7aU_9o4764/seradio-episode170-basVodde.mp3" length="47212346" type="audio/mpeg" /><feedburner:origEnclosureLink>http://traffic.libsyn.com/seradio/seradio-episode170-basVodde.mp3</feedburner:origEnclosureLink></item><item><title>Episode 169:  Memory Grid Architecture with Nati Shalom</title><link>http://feedproxy.google.com/~r/se-radio/~3/7OownW-xtDg/</link><category>Episodes</category><category>architecture</category><category>cloud</category><category>data store</category><category>database</category><category>distributed systems</category><category>grid</category><category>memory</category><category>scale</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Mon, 29 Nov 2010 21:00:21 PST</pubDate><guid isPermaLink="false">http://www.se-radio.net/?p=892</guid><description>In this episode, Robert talks with Nati Shalom about the emergence of large-system architectures consisting of a grid of high-memory nodes.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/7OownW-xtDg" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2010/11/episode-169-memory-grid-architecture-with-nati-shalom/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">2</slash:comments><itunes:subtitle>In this episode, Robert talks with Nati Shalom about the emergence of large-system architectures consisting of a grid of high-memory nodes.</itunes:subtitle><itunes:summary>In this episode, Robert talks with Nati Shalom about the emergence of large-system architectures consisting of a grid of high-memory nodes.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>1:03:33</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/0EX4zvYry1Q/seradio-episode169-memoryGridArchitecture.mp3" fileSize="61013766" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2010/11/episode-169-memory-grid-architecture-with-nati-shalom/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/0EX4zvYry1Q/seradio-episode169-memoryGridArchitecture.mp3" length="61013766" type="audio/mpeg" /><feedburner:origEnclosureLink>http://traffic.libsyn.com/seradio/seradio-episode169-memoryGridArchitecture.mp3</feedburner:origEnclosureLink></item><item><title>Episode 168:  Being a Consultant</title><link>http://feedproxy.google.com/~r/se-radio/~3/fEEcUCQBs6g/</link><category>Episodes</category><category>consulting</category><category>profession</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Fri, 22 Oct 2010 00:37:49 PDT</pubDate><guid isPermaLink="false">http://www.se-radio.net/?p=867</guid><description>This episode is about being a consultant in the software business.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/fEEcUCQBs6g" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2010/10/episode-168-being-a-consultant/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">5</slash:comments><itunes:subtitle>This episode is about being a consultant in the software business.</itunes:subtitle><itunes:summary>This episode is about being a consultant in the software business.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>56:39</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/R51dQwZgBG8/seradio-episode168-beingConsultant.mp3" fileSize="54392001" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2010/10/episode-168-being-a-consultant/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/R51dQwZgBG8/seradio-episode168-beingConsultant.mp3" length="54392001" type="audio/mpeg" /><feedburner:origEnclosureLink>http://traffic.libsyn.com/seradio/seradio-episode168-beingConsultant.mp3</feedburner:origEnclosureLink></item><item><title>Episode 167: The History of JUnit and the Future of Testing with Kent Beck</title><link>http://feedproxy.google.com/~r/se-radio/~3/HFEqme8d-Yo/</link><category>Episodes</category><category>agile</category><category>junit</category><category>junitmax</category><category>TDD</category><category>testing</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Sun, 26 Sep 2010 13:41:04 PDT</pubDate><guid isPermaLink="false">http://www.se-radio.net/?p=762</guid><description>In this episode we talk with Kent Beck about automated unit testing and JUnit.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/HFEqme8d-Yo" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2010/09/episode-167-the-history-of-junit-and-the-future-of-testing-with-kent-beck/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">24</slash:comments><itunes:subtitle>In this episode we talk with Kent Beck about automated unit testing and JUnit.</itunes:subtitle><itunes:summary>In this episode we talk with Kent Beck about automated unit testing and JUnit.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><media:content url="http://feedproxy.google.com/~r/se-radio/~5/YBJuWak9ibw/seradio-episode167-kentBack.mp3" fileSize="5242880" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2010/09/episode-167-the-history-of-junit-and-the-future-of-testing-with-kent-beck/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/YBJuWak9ibw/seradio-episode167-kentBack.mp3" length="5242880" type="audio/mpeg" /><feedburner:origEnclosureLink>http://traffic.libsyn.com/seradio/seradio-episode167-kentBack.mp3</feedburner:origEnclosureLink></item><item><title>Episode 166: Living Architectures with John Wiegand</title><link>http://feedproxy.google.com/~r/se-radio/~3/6wQTuHkufPc/</link><category>Episodes</category><category>agile</category><category>architecture</category><category>eclipse</category><category>jazz</category><category>rest</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Wed, 18 Aug 2010 12:37:29 PDT</pubDate><guid isPermaLink="false">http://www.se-radio.net/?p=740</guid><description>This time we have John Wiegand on the mic for an episode on architectures and agile software development. We talk about the role of architectures in an agile world and why architectures change and need to change over time. We discuss the characteristics of those living architectures, using the Eclipse and the Jazz projects as examples, and the surrounding development methods for such environments.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/6wQTuHkufPc" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2010/08/episode-166-living-architectures-with-john-wiegand/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">8</slash:comments><itunes:subtitle>This time we have John Wiegand on the mic for an episode on architectures and agile software development. We talk about the role of architectures in an agile world and why architectures change and need to change over time.</itunes:subtitle><itunes:summary>This time we have John Wiegand on the mic for an episode on architectures and agile software development. We talk about the role of architectures in an agile world and why architectures change and need to change over time. We discuss the characteristics of those living architectures, using the Eclipse and the Jazz projects as examples, and the surrounding development methods for such environments.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>43:15</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/gBrt-voB2SE/seradio-episode166-Living_Architectures_with_John_Wiegand.mp3" fileSize="41517604" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2010/08/episode-166-living-architectures-with-john-wiegand/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/gBrt-voB2SE/seradio-episode166-Living_Architectures_with_John_Wiegand.mp3" length="41517604" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode166-Living_Architectures_with_John_Wiegand.mp3</feedburner:origEnclosureLink></item><item><title>Episode 165: NoSQL and MongoDB with Dwight Merriman</title><link>http://feedproxy.google.com/~r/se-radio/~3/QYFFMmYEnbo/</link><category>Episodes</category><category>cloud</category><category>domain-driven design</category><category>FOSD</category><category>memory</category><category>ruby</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Fri, 16 Jul 2010 10:54:35 PDT</pubDate><guid isPermaLink="false"></guid><description>Dwight Merriman talks with Robert about the emerging NoSQL movement, the three types of non-relational data stores, Brewer's CAP theorem, the weaker consistency guarantees that can be made in a distributed database, document-oriented data stores, the data storage needs of modern web applications, and the open source MongoDB.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/QYFFMmYEnbo" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2010/07/episode-165-nosql-and-mongodb-with-dwight-merriman/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">9</slash:comments><itunes:subtitle>Dwight Merriman talks with Robert about the emerging NoSQL movement, the three types of non-relational data stores, Brewer's CAP theorem, the weaker consistency guarantees that can be made in a distributed database, document-oriented data stores,</itunes:subtitle><itunes:summary>Dwight Merriman talks with Robert about the emerging NoSQL movement, the three types of non-relational data stores, Brewer's CAP theorem, the weaker consistency guarantees that can be made in a distributed database, document-oriented data stores, the data storage needs of modern web applications, and the open source MongoDB.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>58:05</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/mNyBGPuRylo/seradio-episode165-noSqlMongoDb.mp3" fileSize="55765287" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2010/07/episode-165-nosql-and-mongodb-with-dwight-merriman/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/mNyBGPuRylo/seradio-episode165-noSqlMongoDb.mp3" length="55765287" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode165-noSqlMongoDb.mp3</feedburner:origEnclosureLink></item><item><title>Episode 164: Agile Testing with Lisa Crispin</title><link>http://feedproxy.google.com/~r/se-radio/~3/A4CMJVf1fOA/</link><category>Episodes</category><category>domain-driven design</category><category>objects</category><category>owl</category><category>rfid</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Wed, 16 Jun 2010 09:53:06 PDT</pubDate><guid isPermaLink="false"></guid><description>This episode covers the topic of agile testing. Michael interviews Lisa Crispin as an practionier and book author on agile testing. We cover several topics ranging from the role of the tester in agile teams, over test automation strategy and regression testing, to continuous integration.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/A4CMJVf1fOA" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2010/06/episode-164-agile-testing-with-lisa-crispin/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">5</slash:comments><itunes:subtitle>This episode covers the topic of agile testing. Michael interviews Lisa Crispin as an practionier and book author on agile testing. We cover several topics ranging from the role of the tester in agile teams,</itunes:subtitle><itunes:summary>This episode covers the topic of agile testing. Michael interviews Lisa Crispin as an practionier and book author on agile testing. We cover several topics ranging from the role of the tester in agile teams, over test automation strategy and regression testing, to continuous integration.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>47:11</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/ztirFf_2_bw/seradio-episode164-agileTestingWithLisaCrispin.mp3" fileSize="45298753" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2010/06/episode-164-agile-testing-with-lisa-crispin/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/ztirFf_2_bw/seradio-episode164-agileTestingWithLisaCrispin.mp3" length="45298753" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode164-agileTestingWithLisaCrispin.mp3</feedburner:origEnclosureLink></item><item><title>Episode 163: State of the Union</title><link>http://feedproxy.google.com/~r/se-radio/~3/X2CPIxwQ5sw/</link><category>Episodes</category><category>FDD</category><category>soa</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Thu, 03 Jun 2010 11:37:17 PDT</pubDate><guid isPermaLink="false"></guid><description>Announcement regarding the release cycle.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/X2CPIxwQ5sw" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2010/06/episode-163-state-of-the-union/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">24</slash:comments><itunes:subtitle>Announcement regarding the release cycle.</itunes:subtitle><itunes:summary>Announcement regarding the release cycle.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>17:43</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/crEvAMyZfM0/seradio-episode163-stateOfTheUnion.mp3" fileSize="17018797" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2010/06/episode-163-state-of-the-union/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/crEvAMyZfM0/seradio-episode163-stateOfTheUnion.mp3" length="17018797" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode163-stateOfTheUnion.mp3</feedburner:origEnclosureLink></item><item><title>Episode 162: Project Voldemort with Jay Kreps</title><link>http://feedproxy.google.com/~r/se-radio/~3/x4cIsPfgiFM/</link><category>Episodes</category><category>cloud</category><category>domain-driven design</category><category>FOSD</category><category>Intervie</category><category>memory</category><category>ruby</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Sun, 16 May 2010 13:29:42 PDT</pubDate><guid isPermaLink="false"></guid><description>Jay Kreps talks about the open source data store Project Voldemort. Voldemort is a distributed key-value store used by LinkedIn and other high-traffic web sites to overcome the inherent scalability limitations of a relational database. The conversation delves into the workings of a Voldemort cluster, the type of consistency guarantees that can be made in a distributed database, and the tradeoff between client and the server.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/x4cIsPfgiFM" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2010/05/episode-162-project-voldemort-with-jay-kreps/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">9</slash:comments><itunes:subtitle>Jay Kreps talks about the open source data store Project Voldemort. Voldemort is a distributed key-value store used by LinkedIn and other high-traffic web sites to overcome the inherent scalability limitations of a relational database.</itunes:subtitle><itunes:summary>Jay Kreps talks about the open source data store Project Voldemort. Voldemort is a distributed key-value store used by LinkedIn and other high-traffic web sites to overcome the inherent scalability limitations of a relational database. The conversation delves into the workings of a Voldemort cluster, the type of consistency guarantees that can be made in a distributed database, and the tradeoff between client and the server.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>1:13:36</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/aP4j58lV2Ck/seradio-episode162-projectVoldemort.mp3" fileSize="70660935" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2010/05/episode-162-project-voldemort-with-jay-kreps/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/aP4j58lV2Ck/seradio-episode162-projectVoldemort.mp3" length="70660935" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode162-projectVoldemort.mp3</feedburner:origEnclosureLink></item><item><title>Episode 161: Agile Product Management with Roman Pichler</title><link>http://feedproxy.google.com/~r/se-radio/~3/sSTAV3Ju53I/</link><category>Episodes</category><category>domain-driven design</category><category>feature</category><category>owl</category><category>rfid</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Mon, 03 May 2010 01:47:33 PDT</pubDate><guid isPermaLink="false"></guid><description>In this episode, we discuss with Roman Pichler how Scrum impacts product management and how agile product management differs from traditional approaches. The topics covered include product owners on large projects and product owner teams, facilitating customer feedback through early and frequent releases, envisioning the product, and creating products with the minimum functionality. Enjoy!&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/sSTAV3Ju53I" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2010/05/episode-161-agile-product-management-with-roman-pichler/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">3</slash:comments><itunes:subtitle>In this episode, we discuss with Roman Pichler how Scrum impacts product management and how agile product management differs from traditional approaches. The topics covered include product owners on large projects and product owner teams,</itunes:subtitle><itunes:summary>In this episode, we discuss with Roman Pichler how Scrum impacts product management and how agile product management differs from traditional approaches. The topics covered include product owners on large projects and product owner teams, facilitating customer feedback through early and frequent releases, envisioning the product, and creating products with the minimum functionality. Enjoy!</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>1:00:47</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/uzJGmVasBDs/seradio-episode161-agileProductManagement.mp3" fileSize="58358724" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2010/05/episode-161-agile-product-management-with-roman-pichler/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/uzJGmVasBDs/seradio-episode161-agileProductManagement.mp3" length="58358724" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode161-agileProductManagement.mp3</feedburner:origEnclosureLink></item><item><title>Episode 160: AspectJ and Spring AOP with Ramnivas Laddad</title><link>http://feedproxy.google.com/~r/se-radio/~3/z1GlYJ_AAnA/</link><category>Episodes</category><category>domain-driven design</category><category>jbi</category><category>large scale</category><category>xp</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Mon, 19 Apr 2010 00:06:55 PDT</pubDate><guid isPermaLink="false"></guid><description>This episode is a conversation with Ramnivas Laddad about aspect-oriented programming (AOP), Aspect J, and Spring AOP. We review the fundamental concepts of AOP, discuss AspectJ (an open source compiler that extends java with support for AOP),  and cover the Spring Framework's proxy-based AOP system.  Laddad also gives his thoughts on the use cases for AOP and where we are in the technology adoption curve, and updates on the state of the AspectJ project itself.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/z1GlYJ_AAnA" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2010/04/episode-160-aspectj-and-spring-aop-with-ramnivas-laddad/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">6</slash:comments><itunes:subtitle>This episode is a conversation with Ramnivas Laddad about aspect-oriented programming (AOP), Aspect J, and Spring AOP. We review the fundamental concepts of AOP, discuss AspectJ (an open source compiler that extends java with support for AOP),</itunes:subtitle><itunes:summary>This episode is a conversation with Ramnivas Laddad about aspect-oriented programming (AOP), Aspect J, and Spring AOP. We review the fundamental concepts of AOP, discuss AspectJ (an open source compiler that extends java with support for AOP),  and cover the Spring Framework's proxy-based AOP system.  Laddad also gives his thoughts on the use cases for AOP and where we are in the technology adoption curve, and updates on the state of the AspectJ project itself.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>1:02:08</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/ozeaSj3-AGM/seradio-episode160-aspectJ.mp3" fileSize="59645620" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2010/04/episode-160-aspectj-and-spring-aop-with-ramnivas-laddad/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/ozeaSj3-AGM/seradio-episode160-aspectJ.mp3" length="59645620" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode160-aspectJ.mp3</feedburner:origEnclosureLink></item><item><title>Episode 159: C++0X with Scott Meyers</title><link>http://feedproxy.google.com/~r/se-radio/~3/LOmd4ACdwV8/</link><category>Episodes</category><category>communities</category><category>domain-driven design</category><category>uml</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Mon, 05 Apr 2010 13:20:03 PDT</pubDate><guid isPermaLink="false"></guid><description>This episode is a conversation with &lt;a href="http://www.aristeia.com/"&gt;Scott Meyers&lt;/a&gt; about the upcoming C++0x standard. We talk a bit about the reasons for creating this new standard and then cover the most important new features, including upport for concurrency, implicitly-typed variables, move semantics, variadic templates, lambda functions, and uniform initialization syntax. We also looked at some new features in the standard library.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/LOmd4ACdwV8" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2010/04/episode-159-c-0x-with-scott-meyers/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">14</slash:comments><itunes:subtitle>This episode is a conversation with Scott Meyers about the upcoming C++0x standard. We talk a bit about the reasons for creating this new standard and then cover the most important new features, including upport for concurrency,</itunes:subtitle><itunes:summary>This episode is a conversation with Scott Meyers about the upcoming C++0x standard. We talk a bit about the reasons for creating this new standard and then cover the most important new features, including upport for concurrency, implicitly-typed variables, move semantics, variadic templates, lambda functions, and uniform initialization syntax. We also looked at some new features in the standard library.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>1:04:30</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/YbLWndUxYs0/seradio-episode159-cPlusPlus0x.mp3" fileSize="61920282" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2010/04/episode-159-c-0x-with-scott-meyers/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/YbLWndUxYs0/seradio-episode159-cPlusPlus0x.mp3" length="61920282" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode159-cPlusPlus0x.mp3</feedburner:origEnclosureLink></item><item><title>Episode 158: Rich Hickey on Clojure</title><link>http://feedproxy.google.com/~r/se-radio/~3/SIvxVfkAQLk/</link><category>Episodes</category><category>communities</category><category>data access</category><category>distributed</category><category>domain-driven design</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Mon, 22 Mar 2010 12:56:03 PDT</pubDate><guid isPermaLink="false"></guid><description>This episode is a coversation with Rich Hickey about his programming language Clojure. Clojure is a Lisp dialect that runs on top of the JVM that comes with - among other things - persistent data structures and transactional memory, both very useful for writing concurrent applications.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/SIvxVfkAQLk" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2010/03/episode-158-rich-hickey-on-clojure/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">9</slash:comments><itunes:subtitle>This episode is a coversation with Rich Hickey about his programming language Clojure. Clojure is a Lisp dialect that runs on top of the JVM that comes with - among other things - persistent data structures and transactional memory,</itunes:subtitle><itunes:summary>This episode is a coversation with Rich Hickey about his programming language Clojure. Clojure is a Lisp dialect that runs on top of the JVM that comes with - among other things - persistent data structures and transactional memory, both very useful for writing concurrent applications.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>58:02</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/EyuVsM6nFbM/seradio-episode158-clojure.mp3" fileSize="55722513" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2010/03/episode-158-rich-hickey-on-clojure/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/EyuVsM6nFbM/seradio-episode158-clojure.mp3" length="55722513" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode158-clojure.mp3</feedburner:origEnclosureLink></item><item><title>Episode 157: Hadoop with Philip Zeyliger</title><link>http://feedproxy.google.com/~r/se-radio/~3/-xVFNhQY0uA/</link><category>Episodes</category><category>cloud</category><category>data store</category><category>domain-driven design</category><category>Intervie</category><category>ruby</category><category>scale</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Mon, 08 Mar 2010 10:51:19 PST</pubDate><guid isPermaLink="false"></guid><description>Philip Zeyliger of Cloudera discusses the Hadoop project with Robert Blumen.  The conversation covers the emergence of large data problems, the Hadoop file system, map-reduce, and a look under the hood at how it all works.  The listener will also learn where and how Hadoop is being used to process large data sets.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/-xVFNhQY0uA" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2010/03/episode-157-hadoop-with-philip-zeyliger/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">1</slash:comments><itunes:subtitle>Philip Zeyliger of Cloudera discusses the Hadoop project with Robert Blumen.  The conversation covers the emergence of large data problems, the Hadoop file system, map-reduce, and a look under the hood at how it all works.</itunes:subtitle><itunes:summary>Philip Zeyliger of Cloudera discusses the Hadoop project with Robert Blumen.  The conversation covers the emergence of large data problems, the Hadoop file system, map-reduce, and a look under the hood at how it all works.  The listener will also learn where and how Hadoop is being used to process large data sets.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>51:04</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/ww7Rp0Z90Wc/seradio-episode157-hadoop.mp3" fileSize="49033346" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2010/03/episode-157-hadoop-with-philip-zeyliger/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/ww7Rp0Z90Wc/seradio-episode157-hadoop.mp3" length="49033346" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode157-hadoop.mp3</feedburner:origEnclosureLink></item><item><title>Episode 156: Kanban with David Anderson</title><link>http://feedproxy.google.com/~r/se-radio/~3/rarWD4hW6fM/</link><category>Episodes</category><category>domain-driven design</category><category>grid</category><category>rfid</category><category>sensor networks</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Sun, 21 Feb 2010 21:33:50 PST</pubDate><guid isPermaLink="false"></guid><description>This episode is part of our series on agile software development. We talk with David Anderson about Kanban, an agile software development method that is quite different from most of the other agile methods out there. We discuss the basic ideas behind Kanban, the differences between Kanban and Scrum and when and why projects can benefit from using Kanban. This episode is done in cooperation with the German magazine ObjektSpektrum (thanks for sharing this interview with us).&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/rarWD4hW6fM" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2010/02/episode-156-kanban-with-david-anderson/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">4</slash:comments><itunes:subtitle>This episode is part of our series on agile software development. We talk with David Anderson about Kanban, an agile software development method that is quite different from most of the other agile methods out there.</itunes:subtitle><itunes:summary>This episode is part of our series on agile software development. We talk with David Anderson about Kanban, an agile software development method that is quite different from most of the other agile methods out there. We discuss the basic ideas behind Kanban, the differences between Kanban and Scrum and when and why projects can benefit from using Kanban. This episode is done in cooperation with the German magazine ObjektSpektrum (thanks for sharing this interview with us).</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>1:01:58</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/h5_IKjrxsjc/seradio-episode156-kanbanWith_DavidAnderson.mp3" fileSize="59496119" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2010/02/episode-156-kanban-with-david-anderson/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/h5_IKjrxsjc/seradio-episode156-kanbanWith_DavidAnderson.mp3" length="59496119" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode156-kanbanWith_DavidAnderson.mp3</feedburner:origEnclosureLink></item><item><title>Episode 155: Johannes Link &amp; Lasse Koskela on TDD</title><link>http://feedproxy.google.com/~r/se-radio/~3/RMCLHPnMikM/</link><category>Episodes</category><category>domain-driven design</category><category>meta pro</category><category>objects</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Mon, 08 Feb 2010 11:37:48 PST</pubDate><guid isPermaLink="false"></guid><description>In this episode Johannes Link interviews Lasse Koskela - the author of "Test-Driven" - about test-driven development (TDD). We cover the basics, the rationale behind it and the challenges you face when doing it in more difficult environments.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/RMCLHPnMikM" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2010/02/episode-155-johannes-link-lasse-koskela-on-tdd/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">4</slash:comments><itunes:subtitle>In this episode Johannes Link interviews Lasse Koskela - the author of "Test-Driven" - about test-driven development (TDD). We cover the basics, the rationale behind it and the challenges you face when doing it in more difficult environments.</itunes:subtitle><itunes:summary>In this episode Johannes Link interviews Lasse Koskela - the author of "Test-Driven" - about test-driven development (TDD). We cover the basics, the rationale behind it and the challenges you face when doing it in more difficult environments.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>1:02:06</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/tzWDX3_bvVg/seradio-episode155-johannesLinkLasseKoskelaTDD.mp3" fileSize="59613565" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2010/02/episode-155-johannes-link-lasse-koskela-on-tdd/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/tzWDX3_bvVg/seradio-episode155-johannesLinkLasseKoskelaTDD.mp3" length="59613565" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode155-johannesLinkLasseKoskelaTDD.mp3</feedburner:origEnclosureLink></item><item><title>Episode 154: Ola Bini on Ioke</title><link>http://feedproxy.google.com/~r/se-radio/~3/2j3t1HcuGUs/</link><category>Episodes</category><category>communities</category><category>consulting</category><category>domain-driven design</category><category>profession</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Sun, 24 Jan 2010 22:16:20 PST</pubDate><guid isPermaLink="false"></guid><description>This is a conversation with Ola Bini on his experimental language Ioke. We cover the idea behind the Ioke experiment as well as important language concepts and the thinking behind them.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/2j3t1HcuGUs" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2010/01/episode-154-ola-bini-on-ioke/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">2</slash:comments><itunes:subtitle>This is a conversation with Ola Bini on his experimental language Ioke. We cover the idea behind the Ioke experiment as well as important language concepts and the thinking behind them.</itunes:subtitle><itunes:summary>This is a conversation with Ola Bini on his experimental language Ioke. We cover the idea behind the Ioke experiment as well as important language concepts and the thinking behind them.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>59:23</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/KIs5fjzod2E/seradio-episode154-olaBiniOnIoke.mp3" fileSize="57012477" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2010/01/episode-154-ola-bini-on-ioke/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/KIs5fjzod2E/seradio-episode154-olaBiniOnIoke.mp3" length="57012477" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode154-olaBiniOnIoke.mp3</feedburner:origEnclosureLink></item><item><title>Episode 153: Jan Bosch on Product Lines and Software Ecosystems</title><link>http://feedproxy.google.com/~r/se-radio/~3/4pdmCwq2UQo/</link><category>Episodes</category><category>domain-driven design</category><category>erosion</category><category>junitmax</category><category>sensor networks</category><category>variability</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Sun, 10 Jan 2010 22:31:23 PST</pubDate><guid isPermaLink="false"></guid><description>This episode is a conversation with Jan Bosch about product line engineering (PLE). Jan has worked in various roles and industries and academia in the context of product lines. In this episode we look at Jan's view of what is next for product lines: software ecosystems. What is their relationship to PLE and how should PLE change to remain relevant?&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/4pdmCwq2UQo" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2010/01/episode-153-jan-bosch-on-product-lines-and-software-ecosystems/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">2</slash:comments><itunes:subtitle>This episode is a conversation with Jan Bosch about product line engineering (PLE). Jan has worked in various roles and industries and academia in the context of product lines. In this episode we look at Jan's view of what is next for product lines: so...</itunes:subtitle><itunes:summary>This episode is a conversation with Jan Bosch about product line engineering (PLE). Jan has worked in various roles and industries and academia in the context of product lines. In this episode we look at Jan's view of what is next for product lines: software ecosystems. What is their relationship to PLE and how should PLE change to remain relevant?</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>56:00</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/USmXKqezVl4/seradio-episode153-janBosch.mp3" fileSize="53760964" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2010/01/episode-153-jan-bosch-on-product-lines-and-software-ecosystems/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/USmXKqezVl4/seradio-episode153-janBosch.mp3" length="53760964" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode153-janBosch.mp3</feedburner:origEnclosureLink></item><item><title>Episode 152: MISRA with Johan Bezem</title><link>http://feedproxy.google.com/~r/se-radio/~3/haDlmh1lenw/</link><category>Episodes</category><category>domain-driven design</category><category>dsls</category><category>release-cycle</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Sun, 27 Dec 2009 23:39:42 PST</pubDate><guid isPermaLink="false"></guid><description>Our guest Johan Bezem explains the idea behind and the benefits of MISRA. MISRA defines guidelines for C and C++ programming in order to ensure quality. While it got started for embedded automotive development, it is more generally applicable.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/haDlmh1lenw" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2009/12/episode-152-misra-with-johan-bezem/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">2</slash:comments><itunes:subtitle>Our guest Johan Bezem explains the idea behind and the benefits of MISRA. MISRA defines guidelines for C and C++ programming in order to ensure quality. While it got started for embedded automotive development, it is more generally applicable.</itunes:subtitle><itunes:summary>Our guest Johan Bezem explains the idea behind and the benefits of MISRA. MISRA defines guidelines for C and C++ programming in order to ensure quality. While it got started for embedded automotive development, it is more generally applicable.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>40:40</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/07Ydpr9ggao/seradio-episode152-misra.mp3" fileSize="39044955" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2009/12/episode-152-misra-with-johan-bezem/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/07Ydpr9ggao/seradio-episode152-misra.mp3" length="39044955" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode152-misra.mp3</feedburner:origEnclosureLink></item><item><title>Episode 151: Intentional Software with Shane Clifford</title><link>http://feedproxy.google.com/~r/se-radio/~3/sad6H2-2i_o/</link><category>Episodes</category><category>dbc</category><category>domain-driven design</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Mon, 14 Dec 2009 09:02:23 PST</pubDate><guid isPermaLink="false"></guid><description>This episode is a discussion with Shane Clifford, who is a development manager at Intentional Software. We discuss the idea behind intentional programming, key concepts of the technology as well as example uses and a little bit of history.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/sad6H2-2i_o" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2009/12/episode-151-intentional-software-with-shane-clifford/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">1</slash:comments><itunes:subtitle>This episode is a discussion with Shane Clifford, who is a development manager at Intentional Software. We discuss the idea behind intentional programming, key concepts of the technology as well as example uses and a little bit of history.</itunes:subtitle><itunes:summary>This episode is a discussion with Shane Clifford, who is a development manager at Intentional Software. We discuss the idea behind intentional programming, key concepts of the technology as well as example uses and a little bit of history.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>1:03:04</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/kNjIjlh6HE4/seradio-episode151-intentionalSoftware.mp3" fileSize="60546866" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2009/12/episode-151-intentional-software-with-shane-clifford/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/kNjIjlh6HE4/seradio-episode151-intentionalSoftware.mp3" length="60546866" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode151-intentionalSoftware.mp3</feedburner:origEnclosureLink></item><item><title>Episode 150: Software Craftsmanship with Bob Martin</title><link>http://feedproxy.google.com/~r/se-radio/~3/le9pHyRAKCY/</link><category>Episodes</category><category>domain-driven design</category><category>release-cycle</category><category>rfid</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Sun, 29 Nov 2009 22:52:58 PST</pubDate><guid isPermaLink="false"></guid><description>This episode is a conversation with "Uncle Bob" Bob Martin about agile software development and software craftsmanship specifically. We talk about the history of the term, the reasons for coming up with it some of the practices and the relationship to other agile approaches. We conclude our discussion with an outlook on some of todays new and hyped programming languages.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/le9pHyRAKCY" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2009/11/episode-150-software-craftsmanship-with-bob-martin/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">17</slash:comments><itunes:subtitle>This episode is a conversation with "Uncle Bob" Bob Martin about agile software development and software craftsmanship specifically. We talk about the history of the term, the reasons for coming up with it some of the practices and the relationship to ...</itunes:subtitle><itunes:summary>This episode is a conversation with "Uncle Bob" Bob Martin about agile software development and software craftsmanship specifically. We talk about the history of the term, the reasons for coming up with it some of the practices and the relationship to other agile approaches. We conclude our discussion with an outlook on some of todays new and hyped programming languages.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>58:44</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/ozS5ZW0gK-g/seradio-episode150-bobMartinOnSoftwareCraftsmanship.mp3" fileSize="56376970" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2009/11/episode-150-software-craftsmanship-with-bob-martin/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/ozS5ZW0gK-g/seradio-episode150-bobMartinOnSoftwareCraftsmanship.mp3" length="56376970" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode150-bobMartinOnSoftwareCraftsmanship.mp3</feedburner:origEnclosureLink></item><item><title>Episode 149: Difference between Software Engineering and Computer Science with Chuck Connell</title><link>http://feedproxy.google.com/~r/se-radio/~3/mKB0ODyjVao/</link><category>Episodes</category><category>aspect oriented programming</category><category>domain-driven design</category><category>file systems</category><category>nosql</category><category>product management</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Mon, 16 Nov 2009 07:36:46 PST</pubDate><guid isPermaLink="false"></guid><description>Michael discusses with his guest Chuck Connell the differences between software engineering and computer science. What makes software engineering so unpredictable, with so few formal results? And how can we advance the field of software engineering without these results?&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/mKB0ODyjVao" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2009/11/episode-149-difference-between-software-engineering-and-computer-science-with-chuck-connell/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">8</slash:comments><itunes:subtitle>Michael discusses with his guest Chuck Connell the differences between software engineering and computer science. What makes software engineering so unpredictable, with so few formal results? And how can we advance the field of software engineering wit...</itunes:subtitle><itunes:summary>Michael discusses with his guest Chuck Connell the differences between software engineering and computer science. What makes software engineering so unpredictable, with so few formal results? And how can we advance the field of software engineering without these results?</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>36:36</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/g_0btYuM_dc/seradio-episode149-differenceBetweenSoftware_EngineeringAndComputerScience.mp3" fileSize="35136619" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2009/11/episode-149-difference-between-software-engineering-and-computer-science-with-chuck-connell/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/g_0btYuM_dc/seradio-episode149-differenceBetweenSoftware_EngineeringAndComputerScience.mp3" length="35136619" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode149-differenceBetweenSoftware_EngineeringAndComputerScience.mp3</feedburner:origEnclosureLink></item><item><title>Episode 148: Software Archaeology with Dave Thomas</title><link>http://feedproxy.google.com/~r/se-radio/~3/WXQZZn40mGc/</link><category>Episodes</category><category>AspectJ</category><category>big data</category><category>clojure</category><category>domain-driven design</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Sun, 01 Nov 2009 22:33:57 PST</pubDate><guid isPermaLink="false"></guid><description>Dave explains why reading source code is at least as important a skill as writing source code. He shares approaches for how to get to grips with unknown and undocumented source code even if it is non-trivial in size. He finishes with advice for how to get started reading code.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/WXQZZn40mGc" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2009/11/episode-148-software-archaeology-with-dave-thomas/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">19</slash:comments><itunes:subtitle>Dave explains why reading source code is at least as important a skill as writing source code. He shares approaches for how to get to grips with unknown and undocumented source code even if it is non-trivial in size.</itunes:subtitle><itunes:summary>Dave explains why reading source code is at least as important a skill as writing source code. He shares approaches for how to get to grips with unknown and undocumented source code even if it is non-trivial in size. He finishes with advice for how to get started reading code.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>58:43</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/QytRFNbzaz0/seradio-episode148-softwareArchaeology.mp3" fileSize="56361088" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2009/11/episode-148-software-archaeology-with-dave-thomas/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/QytRFNbzaz0/seradio-episode148-softwareArchaeology.mp3" length="56361088" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode148-softwareArchaeology.mp3</feedburner:origEnclosureLink></item><item><title>Episode 147: Software Development Manager</title><link>http://feedproxy.google.com/~r/se-radio/~3/1xoPp7sm6dI/</link><category>Episodes</category><category>file systems</category><category>grid computing</category><category>security</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Mon, 19 Oct 2009 12:48:26 PDT</pubDate><guid isPermaLink="false"></guid><description>Michael and Markus discuss what makes a good R&amp;#038;D manager and how to potentially become an R&amp;#038;D manager. You will learn what some of the essential skills are, what the challenges are, and what the 'mission/vision/strategy thing' is actually good for.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/1xoPp7sm6dI" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2009/10/episode-147-software-development-manager/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">7</slash:comments><itunes:subtitle>Michael and Markus discuss what makes a good R&amp;D manager and how to potentially become an R&amp;D manager. You will learn what some of the essential skills are, what the challenges are, and what the 'mission/vision/strategy thing' is actually good for.</itunes:subtitle><itunes:summary>Michael and Markus discuss what makes a good R&amp;D manager and how to potentially become an R&amp;D manager. You will learn what some of the essential skills are, what the challenges are, and what the 'mission/vision/strategy thing' is actually good for.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>41:35</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/kSemfcdoCKQ/episode-147-softwareDevelopmentManagerVolumeOk.mp3" fileSize="39919744" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2009/10/episode-147-software-development-manager/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/kSemfcdoCKQ/episode-147-softwareDevelopmentManagerVolumeOk.mp3" length="39919744" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/episode-147-softwareDevelopmentManagerVolumeOk.mp3</feedburner:origEnclosureLink></item><item><title>Episode 146: Interesting Patterns at EuroPLoP 2009</title><link>http://feedproxy.google.com/~r/se-radio/~3/981snz-k5WE/</link><category>Episodes</category><category>modeling</category><category>security</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Mon, 05 Oct 2009 00:51:15 PDT</pubDate><guid isPermaLink="false"></guid><description>This episode is a discussion with various authors of patterns reviewed at EuroPLoP 2009. Topics include Product Line Engineering, Distributed Development, Open Source and Embedded Systems&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/981snz-k5WE" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2009/10/episode-146-interesting-patterns-at-europlop-2009/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">2</slash:comments><itunes:subtitle>This episode is a discussion with various authors of patterns reviewed at EuroPLoP 2009. Topics include Product Line Engineering, Distributed Development, Open Source and Embedded Systems</itunes:subtitle><itunes:summary>This episode is a discussion with various authors of patterns reviewed at EuroPLoP 2009. Topics include Product Line Engineering, Distributed Development, Open Source and Embedded Systems</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>1:05:17</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/hosI8vlwTQc/seradio-episode146-interestingPatternsEuroPLoP2009.mp3" fileSize="62669680" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2009/10/episode-146-interesting-patterns-at-europlop-2009/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/hosI8vlwTQc/seradio-episode146-interestingPatternsEuroPLoP2009.mp3" length="62669680" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode146-interestingPatternsEuroPLoP2009.mp3</feedburner:origEnclosureLink></item><item><title>Episode 145: Spring in 2009 with Eberhard Wolff</title><link>http://feedproxy.google.com/~r/se-radio/~3/XK7rHfCw-nA/</link><category>Episodes</category><category>components</category><category>domain-driven design</category><category>jbi</category><category>post moden programming</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Mon, 21 Sep 2009 11:26:14 PDT</pubDate><guid isPermaLink="false"></guid><description>In this episode we discuss the current state of the spring framework. We talk about core features (dependency injection, AOP) but also about the spring universe, i.e. some of the more specific frameworks such as Spring Batch.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/XK7rHfCw-nA" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2009/09/episode-145-spring-in-2009-with-eberhard-wolff/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">2</slash:comments><itunes:subtitle>In this episode we discuss the current state of the spring framework. We talk about core features (dependency injection, AOP) but also about the spring universe, i.e. some of the more specific frameworks such as Spring Batch.</itunes:subtitle><itunes:summary>In this episode we discuss the current state of the spring framework. We talk about core features (dependency injection, AOP) but also about the spring universe, i.e. some of the more specific frameworks such as Spring Batch.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>1:04:06</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/cCaqwf6jIrk/seradio-episode145-springIn2009.mp3" fileSize="61547878" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2009/09/episode-145-spring-in-2009-with-eberhard-wolff/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/cCaqwf6jIrk/seradio-episode145-springIn2009.mp3" length="61547878" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode145-springIn2009.mp3</feedburner:origEnclosureLink></item><item><title>Episode 144: The Maxine Research Virtual Machine with Doug Simon</title><link>http://feedproxy.google.com/~r/se-radio/~3/dpEQLMAsEXM/</link><category>Episodes</category><category>database</category><category>domain-driven design</category><category>post moden programming</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Mon, 07 Sep 2009 11:49:33 PDT</pubDate><guid isPermaLink="false"></guid><description>In this episode we talk with Doug Simon from Sun Microsystems Laboratories about the Maxine Research VM, a so-called meta-circular virtual machine. Maxine is a JVM that is written itself in Java, but aims at taking JVM development to the next level while using highly integrated Java IDEs as development environments and running and debugging the VM itself directly from the Inspector, an IDE-like tool specialized for the Maxine VM. During the episode we talk about the basic ideas behind Maxine, what exactly "meta-circular" means and what makes it interesting and promising to build a Java VM in Java. We talk about the relationship to Sun's current production JVM (HotSpot) and about ideas and directions for the future of Maxine.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/dpEQLMAsEXM" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2009/09/episode-144-the-maxine-research-virtual-machine-with-doug-simon/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">2</slash:comments><itunes:subtitle>In this episode we talk with Doug Simon from Sun Microsystems Laboratories about the Maxine Research VM, a so-called meta-circular virtual machine. Maxine is a JVM that is written itself in Java, but aims at taking JVM development to the next level whi...</itunes:subtitle><itunes:summary>In this episode we talk with Doug Simon from Sun Microsystems Laboratories about the Maxine Research VM, a so-called meta-circular virtual machine. Maxine is a JVM that is written itself in Java, but aims at taking JVM development to the next level while using highly integrated Java IDEs as development environments and running and debugging the VM itself directly from the Inspector, an IDE-like tool specialized for the Maxine VM. During the episode we talk about the basic ideas behind Maxine, what exactly "meta-circular" means and what makes it interesting and promising to build a Java VM in Java. We talk about the relationship to Sun's current production JVM (HotSpot) and about ideas and directions for the future of Maxine.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>55:22</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/T0Au236FLgA/seradio-episode144-theMaxineResearchVirtualMachine.mp3" fileSize="53156929" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2009/09/episode-144-the-maxine-research-virtual-machine-with-doug-simon/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/T0Au236FLgA/seradio-episode144-theMaxineResearchVirtualMachine.mp3" length="53156929" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode144-theMaxineResearchVirtualMachine.mp3</feedburner:origEnclosureLink></item><item><title>Episode 143: API Design with Jim des Rivieres</title><link>http://feedproxy.google.com/~r/se-radio/~3/6OFwRt4FeTE/</link><category>Episodes</category><category>domain-driven design</category><category>garbage collection</category><category>objects</category><category>OpenJDK</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Mon, 24 Aug 2009 10:43:21 PDT</pubDate><guid isPermaLink="false"></guid><description>This episode is a discussion with Jim Des Rivieres about APIs: How to design good APIs, the role of the documentation/specification in APIs, API evolution and other relevant topics.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/6OFwRt4FeTE" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2009/08/episode-143-api-design-with-jim-des-rivieres/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">8</slash:comments><itunes:subtitle>This episode is a discussion with Jim Des Rivieres about APIs: How to design good APIs, the role of the documentation/specification in APIs, API evolution and other relevant topics.</itunes:subtitle><itunes:summary>This episode is a discussion with Jim Des Rivieres about APIs: How to design good APIs, the role of the documentation/specification in APIs, API evolution and other relevant topics.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>44:44</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/_qiuB6FLl_w/seradio-episode143-APIs-jimDeRivieres.mp3" fileSize="42949112" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2009/08/episode-143-api-design-with-jim-des-rivieres/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/_qiuB6FLl_w/seradio-episode143-APIs-jimDeRivieres.mp3" length="42949112" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode143-APIs-jimDeRivieres.mp3</feedburner:origEnclosureLink></item><item><title>Episode 142: Sustainable Architecture with Kevlin Henney and Klaus Marquardt</title><link>http://feedproxy.google.com/~r/se-radio/~3/ujC0HVAEy64/</link><category>Episodes</category><category>code</category><category>domain-driven design</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Mon, 10 Aug 2009 10:39:57 PDT</pubDate><guid isPermaLink="false"></guid><description>This is another episode recorded at &lt;a href="http://www.sigs-datacom.de/sd/kongresse/oop_2009/index.php"&gt;OOP 2009&lt;/a&gt;, thanks to &lt;a href="http://www.sigs-datacom.de/"&gt;SIGS Datacom&lt;/a&gt; and programme chair Frances Paulisch for making this possible. Here is the abstract from the conference program: Many software systems have fragile architectures that are based on brittle assumptions or rigid architectures that reduce options and make change difficult. On the one hand, an architecture needs to be fit for the present day, suitable for immediate use, and on the other it needs to accommodate the future, absorbing reasonable uncertainty. However, an approach that is overly focused on today's needs and nothing more can create an inflexible architecture. An approach that becomes obsessed with possible future changes creates an overly complex architecture that is unfit for both today's and tomorrow's needs. Both approaches encourage an early descent into legacy for a system. The considerations presented in this talk reflect an approach that is more about thinking in the continuous present tense than just the present or the future tense. This includes principles from lean thinking, practices common in agile processes and techniques for loosely coupled design.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/ujC0HVAEy64" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2009/08/episode-142-sustainable-architecture-with-kevlin-henney-and-klaus-marquardt/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">3</slash:comments><itunes:subtitle>This is another episode recorded at OOP 2009, thanks to SIGS Datacom and programme chair Frances Paulisch for making this possible. Here is the abstract from the conference program: Many software systems have fragile architectures that are based on bri...</itunes:subtitle><itunes:summary>This is another episode recorded at OOP 2009, thanks to SIGS Datacom and programme chair Frances Paulisch for making this possible. Here is the abstract from the conference program: Many software systems have fragile architectures that are based on brittle assumptions or rigid architectures that reduce options and make change difficult. On the one hand, an architecture needs to be fit for the present day, suitable for immediate use, and on the other it needs to accommodate the future, absorbing reasonable uncertainty. However, an approach that is overly focused on today's needs and nothing more can create an inflexible architecture. An approach that becomes obsessed with possible future changes creates an overly complex architecture that is unfit for both today's and tomorrow's needs. Both approaches encourage an early descent into legacy for a system. The considerations presented in this talk reflect an approach that is more about thinking in the continuous present tense than just the present or the future tense. This includes principles from lean thinking, practices common in agile processes and techniques for loosely coupled design.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>1:01:49</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/ErTu-V4jM1A/seradio-episode142-kevlinKlausOOP.mp3" fileSize="59342725" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2009/08/episode-142-sustainable-architecture-with-kevlin-henney-and-klaus-marquardt/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/ErTu-V4jM1A/seradio-episode142-kevlinKlausOOP.mp3" length="59342725" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode142-kevlinKlausOOP.mp3</feedburner:origEnclosureLink></item><item><title>Episode 141: Second Life and Mono with Jim Purbrick</title><link>http://feedproxy.google.com/~r/se-radio/~3/jHE3TDJNbqM/</link><category>Episodes</category><category>dbc</category><category>domain-driven design</category><category>kanban</category><category>TDD</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Mon, 27 Jul 2009 00:14:41 PDT</pubDate><guid isPermaLink="false"></guid><description>In the first part of this episode we discuss a couple of basics about SecondLife (scaling, partitioning, etc). The second part specifically looks at how the dev team tackled a number of interesting problems in the context of executing their own LSL scripting language on top of Mono.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/jHE3TDJNbqM" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2009/07/episode-141-second-life-and-mono-with-jim-purbrick/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">1</slash:comments><itunes:subtitle>In the first part of this episode we discuss a couple of basics about SecondLife (scaling, partitioning, etc). The second part specifically looks at how the dev team tackled a number of interesting problems in the context of executing their own LSL scr...</itunes:subtitle><itunes:summary>In the first part of this episode we discuss a couple of basics about SecondLife (scaling, partitioning, etc). The second part specifically looks at how the dev team tackled a number of interesting problems in the context of executing their own LSL scripting language on top of Mono.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>42:03</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/kpwQahZhPPI/seradio-episode141-secondLifeJimPurbrick.mp3" fileSize="40371140" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2009/07/episode-141-second-life-and-mono-with-jim-purbrick/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/kpwQahZhPPI/seradio-episode141-secondLifeJimPurbrick.mp3" length="40371140" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode141-secondLifeJimPurbrick.mp3</feedburner:origEnclosureLink></item><item><title>Episode 140: Newspeak and Pluggable Types with Gilad Bracha</title><link>http://feedproxy.google.com/~r/se-radio/~3/3n5py2pF-z4/</link><category>Episodes</category><category>domain-driven design</category><category>feature-driven development</category><category>ioke</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Mon, 13 Jul 2009 14:03:15 PDT</pubDate><guid isPermaLink="false"></guid><description>This episode is a conversation with &lt;a href="http://bracha.org/Site/Home.html"&gt;Gilad Bracha&lt;/a&gt; about &lt;a href="http://newspeaklanguage.org/"&gt;Newspeak&lt;/a&gt;, type systems in general and optional/pluggable types in particular.  It was recorded during DSL Devcon in the gardens of the Microsoft campus, and thanks to Gilad's "speaking like a book" way of talking it is published completely unedited :-)&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/3n5py2pF-z4" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2009/07/episode-140-newspeak-and-pluggable-types-with-gilad-bracha/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">7</slash:comments><itunes:subtitle>This episode is a conversation with Gilad Bracha about Newspeak, type systems in general and optional/pluggable types in particular.  It was recorded during DSL Devcon in the gardens of the Microsoft campus,</itunes:subtitle><itunes:summary>This episode is a conversation with Gilad Bracha about Newspeak, type systems in general and optional/pluggable types in particular.  It was recorded during DSL Devcon in the gardens of the Microsoft campus, and thanks to Gilad's "speaking like a book" way of talking it is published completely unedited :-)</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>43:52</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/TxZpMiOHoTw/seradio-episode140-NewspeakGiladBraha.mp3" fileSize="42116120" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2009/07/episode-140-newspeak-and-pluggable-types-with-gilad-bracha/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/TxZpMiOHoTw/seradio-episode140-NewspeakGiladBraha.mp3" length="42116120" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode140-NewspeakGiladBraha.mp3</feedburner:origEnclosureLink></item><item><title>Episode 139: Fearless Change with Linda Rising</title><link>http://feedproxy.google.com/~r/se-radio/~3/B_ByzifrXQA/</link><category>Episodes</category><category>domain-driven design</category><category>language design</category><category>rfid</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Mon, 29 Jun 2009 16:04:19 PDT</pubDate><guid isPermaLink="false"></guid><description>This episode is once again with &lt;a href="http://www.lindarising.org/"&gt;Linda Rising&lt;/a&gt;, this time on the book she coauthored with Mary Lynn Manns on introducing ideas into organizations. The talk is another one of the SE Radio Live sessions recorded at &lt;a href="http://www.sigs-datacom.de/sd/kongresse/oop_2009/index.php"&gt;OOP 2009&lt;/a&gt; -  thanks to &lt;a href="http://www.sigs-datacom.de/"&gt;SIGS Datacom&lt;/a&gt; and programme chair Frances Paulisch for making this possible.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/B_ByzifrXQA" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2009/06/episode-139-fearless-change-with-linda-rising/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">5</slash:comments><itunes:subtitle>This episode is once again with Linda Rising, this time on the book she coauthored with Mary Lynn Manns on introducing ideas into organizations. The talk is another one of the SE Radio Live sessions recorded at OOP 2009 thanks to SIGS Datacom and pr...</itunes:subtitle><itunes:summary>This episode is once again with Linda Rising, this time on the book she coauthored with Mary Lynn Manns on introducing ideas into organizations. The talk is another one of the SE Radio Live sessions recorded at OOP 2009 -  thanks to SIGS Datacom and programme chair Frances Paulisch for making this possible.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>1:08:13</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/ER9CC9jFTmc/seradio-episode139-lindaRisingFearlessChange.mp3" fileSize="65491323" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2009/06/episode-139-fearless-change-with-linda-rising/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/ER9CC9jFTmc/seradio-episode139-lindaRisingFearlessChange.mp3" length="65491323" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode139-lindaRisingFearlessChange.mp3</feedburner:origEnclosureLink></item><item><title>Episode 138: Learning as a Part of Development with Allan Kelly</title><link>http://feedproxy.google.com/~r/se-radio/~3/3CDoYdoRbP8/</link><category>Episodes</category><category>domain-driven design</category><category>rfid</category><category>software ecosystems</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Mon, 15 Jun 2009 01:06:02 PDT</pubDate><guid isPermaLink="false"></guid><description>In this episode, Allan shares his insights about how learning is a necessary part of software development. He covers the personal as well as the team and the organizational level and offers practical advice.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/3CDoYdoRbP8" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2009/06/episode-138-learning-as-a-part-of-development-with-allan-kelly/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">15</slash:comments><itunes:subtitle>In this episode, Allan shares his insights about how learning is a necessary part of software development. He covers the personal as well as the team and the organizational level and offers practical advice.</itunes:subtitle><itunes:summary>In this episode, Allan shares his insights about how learning is a necessary part of software development. He covers the personal as well as the team and the organizational level and offers practical advice.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>59:13</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/GnJqJVlSxEA/seradio-episode138-learningAsPartOfDevelopment.mp3" fileSize="56859630" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2009/06/episode-138-learning-as-a-part-of-development-with-allan-kelly/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/GnJqJVlSxEA/seradio-episode138-learningAsPartOfDevelopment.mp3" length="56859630" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode138-learningAsPartOfDevelopment.mp3</feedburner:origEnclosureLink></item><item><title>Episode 137: SQL with Jim Melton</title><link>http://feedproxy.google.com/~r/se-radio/~3/wQhffcePmhM/</link><category>Episodes</category><category>communities</category><category>domain-driven design</category><category>Language Workbenches</category><category>Programming</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Thu, 04 Jun 2009 23:55:09 PDT</pubDate><guid isPermaLink="false"></guid><description>In this episode, Arno talks to Jim Melton about the SQL programming language. In addition to covering the concepts and ideas behind SQL, Jim shares stories and insights based on his many years' experience as SQL specification lead.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/wQhffcePmhM" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2009/06/episode-137-sql-with-jim-melton/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">5</slash:comments><itunes:subtitle>In this episode, Arno talks to Jim Melton about the SQL programming language. In addition to covering the concepts and ideas behind SQL, Jim shares stories and insights based on his many years' experience as SQL specification lead.</itunes:subtitle><itunes:summary>In this episode, Arno talks to Jim Melton about the SQL programming language. In addition to covering the concepts and ideas behind SQL, Jim shares stories and insights based on his many years' experience as SQL specification lead.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>1:02:45</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/1-hPOXSvHJY/seradio-episode137-sqlJimMelton.mp3" fileSize="60250533" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2009/06/episode-137-sql-with-jim-melton/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/1-hPOXSvHJY/seradio-episode137-sqlJimMelton.mp3" length="60250533" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode137-sqlJimMelton.mp3</feedburner:origEnclosureLink></item><item><title>Episode 136: Past Present and Future of MDA with David Frankel</title><link>http://feedproxy.google.com/~r/se-radio/~3/n1QIaHpj4Cs/</link><category>Episodes</category><category>c#</category><category>computer science</category><category>design-by-contract</category><category>domain-driven design</category><category>o/r mappers</category><category>ocl</category><category>software development</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Tue, 26 May 2009 14:23:25 PDT</pubDate><guid isPermaLink="false"></guid><description>In this episode, Dirk talks with David Frankel, resident Metamodeller and MDA expert at SAP Labs LLC, SAP's subsidiary in the Silicon Valley. Dave's extensive experience provides a big picture, from the early days of CORBA all the way to current issues that are bugging most enterprise architects' work with MDA.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/n1QIaHpj4Cs" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2009/05/episode-136-past-present-and-future-of-mda-with-david-frankel/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">2</slash:comments><itunes:subtitle>In this episode, Dirk talks with David Frankel, resident Metamodeller and MDA expert at SAP Labs LLC, SAP's subsidiary in the Silicon Valley. Dave's extensive experience provides a big picture, from the early days of CORBA all the way to current issues...</itunes:subtitle><itunes:summary>In this episode, Dirk talks with David Frankel, resident Metamodeller and MDA expert at SAP Labs LLC, SAP's subsidiary in the Silicon Valley. Dave's extensive experience provides a big picture, from the early days of CORBA all the way to current issues that are bugging most enterprise architects' work with MDA.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>1:00:32</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/LtWnc8Gx7iI/seradio-episode136-pastPresentAndFutureOfMda.mp3" fileSize="58118606" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2009/05/episode-136-past-present-and-future-of-mda-with-david-frankel/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/LtWnc8Gx7iI/seradio-episode136-pastPresentAndFutureOfMda.mp3" length="58118606" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode136-pastPresentAndFutureOfMda.mp3</feedburner:origEnclosureLink></item><item><title>Episode 135: Introduction to Software Configuration Management with Petri Ahonen</title><link>http://feedproxy.google.com/~r/se-radio/~3/aqhpWKuvxJM/</link><category>Episodes</category><category>archaeology</category><category>domain-driven design</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Sat, 16 May 2009 02:20:09 PDT</pubDate><guid isPermaLink="false"></guid><description>In this episode Michael interviews one of our regular listeners: Petri Ahonen. Petri introduces Software Configuration Management by defining key terms and describing relevant concepts.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/aqhpWKuvxJM" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2009/05/episode-135-introduction-to-software-configuration-management-with-petri-ahonen/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">1</slash:comments><itunes:subtitle>In this episode Michael interviews one of our regular listeners: Petri Ahonen. Petri introduces Software Configuration Management by defining key terms and describing relevant concepts.</itunes:subtitle><itunes:summary>In this episode Michael interviews one of our regular listeners: Petri Ahonen. Petri introduces Software Configuration Management by defining key terms and describing relevant concepts.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>30:20</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/Y-sf2CSpsIo/seradio-episode135-introductionToSoftwareConfigurationManagement.mp3" fileSize="29125112" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2009/05/episode-135-introduction-to-software-configuration-management-with-petri-ahonen/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/Y-sf2CSpsIo/seradio-episode135-introductionToSoftwareConfigurationManagement.mp3" length="29125112" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode135-introductionToSoftwareConfigurationManagement.mp3</feedburner:origEnclosureLink></item><item><title>Episode 134: Release It with Michael Nygard</title><link>http://feedproxy.google.com/~r/se-radio/~3/zzCBiDr9TNM/</link><category>Episodes</category><category>domain-driven design</category><category>fault tolerance</category><category>garbage collection</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Wed, 06 May 2009 00:25:03 PDT</pubDate><guid isPermaLink="false"></guid><description>This episode is a discussion with Michael Nygard about his book "Release It" which covers aspects of software architecture you often don't think of initially when starting to build a system. Some of the points we discussed were capacity planning, recovery as well as making the system suitable for operation in a data center.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/zzCBiDr9TNM" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2009/05/episode-134-release-it-with-michael-nygard/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">5</slash:comments><itunes:subtitle>This episode is a discussion with Michael Nygard about his book "Release It" which covers aspects of software architecture you often don't think of initially when starting to build a system. Some of the points we discussed were capacity planning,</itunes:subtitle><itunes:summary>This episode is a discussion with Michael Nygard about his book "Release It" which covers aspects of software architecture you often don't think of initially when starting to build a system. Some of the points we discussed were capacity planning, recovery as well as making the system suitable for operation in a data center.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>48:58</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/i21YofpILRE/seradio-episode133-michaelNygard.mp3" fileSize="47012929" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2009/05/episode-134-release-it-with-michael-nygard/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/i21YofpILRE/seradio-episode133-michaelNygard.mp3" length="47012929" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode133-michaelNygard.mp3</feedburner:origEnclosureLink></item><item><title>Episode 133: Continuous Integration with Chris Read</title><link>http://feedproxy.google.com/~r/se-radio/~3/ZScG2sCgfMc/</link><category>Episodes</category><category>domain-driven design</category><category>reading</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Sun, 26 Apr 2009 01:13:45 PDT</pubDate><guid isPermaLink="false"></guid><description>In this episode Markus discusses with Chris Read basics and some advanced topics in the space of continuous integration. We cover concepts, some tools, as well as a number of best practices.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/ZScG2sCgfMc" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2009/04/episode-133-continuous-integration-with-chris-read/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">3</slash:comments><itunes:subtitle>In this episode Markus discusses with Chris Read basics and some advanced topics in the space of continuous integration. We cover concepts, some tools, as well as a number of best practices.</itunes:subtitle><itunes:summary>In this episode Markus discusses with Chris Read basics and some advanced topics in the space of continuous integration. We cover concepts, some tools, as well as a number of best practices.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>50:07</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/3QUNgwtUdnY/seradio-episode133-continuousIntegrationWithChrisRead.mp3" fileSize="48119267" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2009/04/episode-133-continuous-integration-with-chris-read/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/3QUNgwtUdnY/seradio-episode133-continuousIntegrationWithChrisRead.mp3" length="48119267" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode133-continuousIntegrationWithChrisRead.mp3</feedburner:origEnclosureLink></item><item><title>Episode 132: Top 10 Architecture Mistakes with Eoin Woods</title><link>http://feedproxy.google.com/~r/se-radio/~3/rqli-jo9-gY/</link><category>Episodes</category><category>code</category><category>domain-driven design</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Thu, 16 Apr 2009 08:53:47 PDT</pubDate><guid isPermaLink="false"></guid><description>This is a discussion with Eoin Woods about his collection of top 10 software architecture mistakes. Looking at things that don't work is always a good way to learn what you should actually do.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/rqli-jo9-gY" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2009/04/episode-132-top-10-architecture-mistakes-with-eoin-woods/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">3</slash:comments><itunes:subtitle>This is a discussion with Eoin Woods about his collection of top 10 software architecture mistakes. Looking at things that don't work is always a good way to learn what you should actually do.</itunes:subtitle><itunes:summary>This is a discussion with Eoin Woods about his collection of top 10 software architecture mistakes. Looking at things that don't work is always a good way to learn what you should actually do.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>47:53</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/PmEULyc2H_g/seradio-episode132-architectureMistakesWithEoinWoods.mp3" fileSize="45970539" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2009/04/episode-132-top-10-architecture-mistakes-with-eoin-woods/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/PmEULyc2H_g/seradio-episode132-architectureMistakesWithEoinWoods.mp3" length="45970539" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode132-architectureMistakesWithEoinWoods.mp3</feedburner:origEnclosureLink></item><item><title>Episode 131: Adrenaline Junkies with DeMarco and Hruschka</title><link>http://feedproxy.google.com/~r/se-radio/~3/KqxCyzvLK9k/</link><category>Episodes</category><category>business</category><category>soft skills</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Mon, 06 Apr 2009 02:43:54 PDT</pubDate><guid isPermaLink="false"></guid><description>This episode is an interview with &lt;a href="http://en.wikipedia.org/wiki/Tom_DeMarco"&gt;Tom DeMarco&lt;/a&gt; and &lt;a href="http://www.systemsguild.com/GuildSite/PH/PXH.html"&gt;Peter Hruschka&lt;/a&gt; about the new book of the &lt;a href="http://www.systemsguild.com/"&gt;Altantic Systems Guild&lt;/a&gt;: 
&lt;a href="http://www.amazon.de/Adrenaline-Junkies-Template-Zombies-Understanding/dp/0932633676"&gt;Adrenaline Junkies and Template Zombies: Understanding Patterns of Project Behavior&lt;/a&gt;.

This is a session recorded live at &lt;a href="http://oop2009.com/"&gt;OOP 2009&lt;/a&gt;. SE Radio thanks Tom and Peter, &lt;a href="http://sigs-datacom.de/"&gt;SIGS Datacom&lt;/a&gt; and the programme chair, Frances Paulisch, for their great support!&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/KqxCyzvLK9k" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2009/04/episode-131-adrenaline-junkies-with-demarco-and-hruschka/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">1</slash:comments><itunes:subtitle>This episode is an interview with Tom DeMarco and Peter Hruschka about the new book of the Altantic Systems Guild:  Adrenaline Junkies and Template Zombies: Understanding Patterns of Project Behavior. - This is a session recorded live at OOP 2009.</itunes:subtitle><itunes:summary>This episode is an interview with Tom DeMarco and Peter Hruschka about the new book of the Altantic Systems Guild: 
Adrenaline Junkies and Template Zombies: Understanding Patterns of Project Behavior.

This is a session recorded live at OOP 2009. SE Radio thanks Tom and Peter, SIGS Datacom and the programme chair, Frances Paulisch, for their great support!</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>48:29</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/kYkm4fqQGMg/seradio-episode131-tomDeMarcoAndPeterHruschka.mp3" fileSize="46551084" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2009/04/episode-131-adrenaline-junkies-with-demarco-and-hruschka/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/kYkm4fqQGMg/seradio-episode131-tomDeMarcoAndPeterHruschka.mp3" length="46551084" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode131-tomDeMarcoAndPeterHruschka.mp3</feedburner:origEnclosureLink></item><item><title>Episode 130: Code Visualization with Michele Lanza</title><link>http://feedproxy.google.com/~r/se-radio/~3/zaHxqM-MqrE/</link><category>Episodes</category><category>domain-driven design</category><category>leadership</category><category>virtual machines</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Fri, 27 Mar 2009 13:17:08 PDT</pubDate><guid isPermaLink="false"></guid><description>This episode is a discussion about code and metrics visualization with Michele Lanza. Michele invented the Code Cities idea about which he talks in this episode.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/zaHxqM-MqrE" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2009/03/episode-130-code-visualization-with-michele-lanza/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">2</slash:comments><itunes:subtitle>This episode is a discussion about code and metrics visualization with Michele Lanza. Michele invented the Code Cities idea about which he talks in this episode.</itunes:subtitle><itunes:summary>This episode is a discussion about code and metrics visualization with Michele Lanza. Michele invented the Code Cities idea about which he talks in this episode.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>32:21</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/ECQdLLim5Bk/seradio-episode130-codeVisualization.mp3" fileSize="31067368" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2009/03/episode-130-code-visualization-with-michele-lanza/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/ECQdLLim5Bk/seradio-episode130-codeVisualization.mp3" length="31067368" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode130-codeVisualization.mp3</feedburner:origEnclosureLink></item><item><title>Episode 129: F# with Luke Hoban</title><link>http://feedproxy.google.com/~r/se-radio/~3/YSGUysT1AQg/</link><category>Episodes</category><category>domain-driven design</category><category>linq</category><category>second life</category><category>transactions</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Tue, 17 Mar 2009 09:24:54 PDT</pubDate><guid isPermaLink="false"></guid><description>This episode is a discussion about &lt;a href="http://research.microsoft.com/en-us/um/cambridge/projects/fsharp/"&gt;F#&lt;/a&gt; with Microsoft's F# program manager Luke Hoban.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/YSGUysT1AQg" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2009/03/episode-129-f-with-luke-hoban/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">4</slash:comments><itunes:subtitle>This episode is a discussion about F# with Microsoft's F# program manager Luke Hoban.</itunes:subtitle><itunes:summary>This episode is a discussion about F# with Microsoft's F# program manager Luke Hoban.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>25:29</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/Kh7uB7DvBr8/seradio-episode129-FSharpWihLukeHoban.mp3" fileSize="24469883" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2009/03/episode-129-f-with-luke-hoban/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/Kh7uB7DvBr8/seradio-episode129-FSharpWihLukeHoban.mp3" length="24469883" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode129-FSharpWihLukeHoban.mp3</feedburner:origEnclosureLink></item><item><title>Episode 128: Web App Security with Bruce Sams</title><link>http://feedproxy.google.com/~r/se-radio/~3/HWbvLjq_cNY/</link><category>Episodes</category><category>concurrency</category><category>memory</category><category>security</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Sat, 07 Mar 2009 08:44:45 PST</pubDate><guid isPermaLink="false"></guid><description>The majority of hacker attacks (70 %) are directed at weaknesses that are the result of problems in the implementation and/or architecture of the application. This session shows how you can protect your web applications (J2EE or .NET) against these attacks. The session covers lots of practical examples and techniques for attack. Furthermore, it shows strategies for defense, including a "Secure Software Development Lifecycle". A "Live Hacking" demo rounds it out.

&lt;b&gt;This is a session recorded live at &lt;a href="http://oop2009.com"&gt;OOP 2009&lt;/a&gt;. SE Radio thanks Bruce, &lt;a href="http://sigs-datacom.de"&gt;SIGS Datacom&lt;/a&gt; and the programme chair, Frances Paulisch, for their great support!&lt;/b&gt;&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/HWbvLjq_cNY" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2009/03/episode-128-web-app-security-with-bruce-sams/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">7</slash:comments><itunes:subtitle>The majority of hacker attacks (70 %) are directed at weaknesses that are the result of problems in the implementation and/or architecture of the application. This session shows how you can protect your web applications (J2EE or .</itunes:subtitle><itunes:summary>The majority of hacker attacks (70 %) are directed at weaknesses that are the result of problems in the implementation and/or architecture of the application. This session shows how you can protect your web applications (J2EE or .NET) against these attacks. The session covers lots of practical examples and techniques for attack. Furthermore, it shows strategies for defense, including a "Secure Software Development Lifecycle". A "Live Hacking" demo rounds it out.

This is a session recorded live at OOP 2009. SE Radio thanks Bruce, SIGS Datacom and the programme chair, Frances Paulisch, for their great support!</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>59:02</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/qnag1fAUT6o/seradio-episode128-bruceSamsWebAppSecurity.mp3" fileSize="56674056" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2009/03/episode-128-web-app-security-with-bruce-sams/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/qnag1fAUT6o/seradio-episode128-bruceSamsWebAppSecurity.mp3" length="56674056" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode128-bruceSamsWebAppSecurity.mp3</feedburner:origEnclosureLink></item><item><title>Episode 127: Usability with Joachim Machate</title><link>http://feedproxy.google.com/~r/se-radio/~3/rMdLjyYpUhk/</link><category>Episodes</category><category>change</category><category>domain-driven design</category><category>mono</category><category>newspeak</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Wed, 25 Feb 2009 08:33:32 PST</pubDate><guid isPermaLink="false"></guid><description>This episode is an introduction to user interface design with Joachim Machate of &lt;a href="http://www.uid.com/"&gt;UID&lt;/a&gt;. We talk about the importance of user interface design, about its relationship to the overall software engineering process, as well as about UID's process for systematic user interface design.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/rMdLjyYpUhk" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2009/02/episode-127-usability-with-joachim-machate/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">7</slash:comments><itunes:subtitle>This episode is an introduction to user interface design with Joachim Machate of UID. We talk about the importance of user interface design, about its relationship to the overall software engineering process,</itunes:subtitle><itunes:summary>This episode is an introduction to user interface design with Joachim Machate of UID. We talk about the importance of user interface design, about its relationship to the overall software engineering process, as well as about UID's process for systematic user interface design.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>50:18</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/l_j8u6Ad-ws/seradio-episode127-interviewJoachimMachateOnUsability.mp3" fileSize="48286033" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2009/02/episode-127-usability-with-joachim-machate/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/l_j8u6Ad-ws/seradio-episode127-interviewJoachimMachateOnUsability.mp3" length="48286033" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode127-interviewJoachimMachateOnUsability.mp3</feedburner:origEnclosureLink></item><item><title>Episode 126: Jetbrains MPS with Konstantin Solomatov</title><link>http://feedproxy.google.com/~r/se-radio/~3/u-pKTJyRIkg/</link><category>Episodes</category><category>architecture evaluation</category><category>dbc</category><category>domain-driven design</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Sun, 15 Feb 2009 01:35:22 PST</pubDate><guid isPermaLink="false"></guid><description>In this episode we take a brief look at Jetbrains' Meta Programming System, a language workbench for creating external DSLs or for extending existing languages (such as Java). In a brief telephone discussion, Konstantin Solomatov explains what the system does and how it works. The system has recently been released into public beta and will be made available under then Apache 2.0 Open Source license.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/u-pKTJyRIkg" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2009/02/episode-126-jetbrains-mps-with-konstantin-solomatov/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><itunes:subtitle>In this episode we take a brief look at Jetbrains' Meta Programming System, a language workbench for creating external DSLs or for extending existing languages (such as Java). In a brief telephone discussion,</itunes:subtitle><itunes:summary>In this episode we take a brief look at Jetbrains' Meta Programming System, a language workbench for creating external DSLs or for extending existing languages (such as Java). In a brief telephone discussion, Konstantin Solomatov explains what the system does and how it works. The system has recently been released into public beta and will be made available under then Apache 2.0 Open Source license.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>17:47</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/Li-Gk2__iwc/seradio-episode126-jetbrainsMPS.mp3" fileSize="17070333" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2009/02/episode-126-jetbrains-mps-with-konstantin-solomatov/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/Li-Gk2__iwc/seradio-episode126-jetbrainsMPS.mp3" length="17070333" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode126-jetbrainsMPS.mp3</feedburner:origEnclosureLink></item><item><title>Episode 125: Performance Engineering with Chris Grindstaff</title><link>http://feedproxy.google.com/~r/se-radio/~3/9bUYpJVNk0k/</link><category>Episodes</category><category>domain-driven design</category><category>Learning</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Thu, 05 Feb 2009 10:06:00 PST</pubDate><guid isPermaLink="false"></guid><description>In this episode Martin talks with Chris Grindstaff about the fundamentals of performance engineering. The episode discusses when and how to work on performance of client- and server-side systems, what you should take into account during development to avoid performance issues, typical situations that cause performance problems, and some common pitfalls when analysing performance.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/9bUYpJVNk0k" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2009/02/episode-125-performance-engineering-with-chris-grindstaff/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">1</slash:comments><itunes:subtitle>In this episode Martin talks with Chris Grindstaff about the fundamentals of performance engineering. The episode discusses when and how to work on performance of client- and server-side systems, what you should take into account during development to ...</itunes:subtitle><itunes:summary>In this episode Martin talks with Chris Grindstaff about the fundamentals of performance engineering. The episode discusses when and how to work on performance of client- and server-side systems, what you should take into account during development to avoid performance issues, typical situations that cause performance problems, and some common pitfalls when analysing performance.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>52:28</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/V116PNDFoT4/seradio-episode125-performanceEngineeringWithChrisGrindstaff.mp3" fileSize="50372903" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2009/02/episode-125-performance-engineering-with-chris-grindstaff/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/V116PNDFoT4/seradio-episode125-performanceEngineeringWithChrisGrindstaff.mp3" length="50372903" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode125-performanceEngineeringWithChrisGrindstaff.mp3</feedburner:origEnclosureLink></item><item><title>Episode 124: OpenJDK with Dalibor Topic</title><link>http://feedproxy.google.com/~r/se-radio/~3/y4EPiMIuK2Q/</link><category>Episodes</category><category>domain-driven design</category><category>haskell</category><category>post moden programming</category><category>programming languages</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Mon, 26 Jan 2009 08:25:48 PST</pubDate><guid isPermaLink="false"></guid><description>In this episode we look at SUN's open source strategy for the OpenJDK. We discuss challenges in creating such a big open source project, and ways to keep it focused and organized. We discuss what it means for the Java runtime to be adopted as the technological foundation for other programming languages.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/y4EPiMIuK2Q" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2009/01/episode-124-openjdk-with-dalibor-topic/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">7</slash:comments><itunes:subtitle>In this episode we look at SUN's open source strategy for the OpenJDK. We discuss challenges in creating such a big open source project, and ways to keep it focused and organized. We discuss what it means for the Java runtime to be adopted as the techn...</itunes:subtitle><itunes:summary>In this episode we look at SUN's open source strategy for the OpenJDK. We discuss challenges in creating such a big open source project, and ways to keep it focused and organized. We discuss what it means for the Java runtime to be adopted as the technological foundation for other programming languages.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>53:28</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/BoMyXnUR7Pk/seradio-episode124-OpenJDK.mp3" fileSize="51328859" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2009/01/episode-124-openjdk-with-dalibor-topic/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/BoMyXnUR7Pk/seradio-episode124-OpenJDK.mp3" length="51328859" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode124-OpenJDK.mp3</feedburner:origEnclosureLink></item><item><title>Episode 123: Microsoft OSLO with Don Box and Doug Purdy</title><link>http://feedproxy.google.com/~r/se-radio/~3/RkxhrOfh0d8/</link><category>Episodes</category><category>dbc</category><category>domain-driven design</category><category>relational databases</category><category>SQL</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Thu, 15 Jan 2009 23:58:06 PST</pubDate><guid isPermaLink="false"></guid><description>In this episode we discuss Microsoft's OSLO platform with Doug Purdy and Don Box. We briefly discuss what OSLO is in general and then look at the various components of OSLO. We also look at how OSLO fits in with the general Microsoft strategy and how it compares to other DSL/Model-driven approaches. We then look at language modularization and composition and discuss the similarities with XML and Smalltalk. Finally, we discuss possible integrations of OSLO with other MD* approaches and technologies.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/RkxhrOfh0d8" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2009/01/episode-123-microsoft-oslo-with-don-box-and-doug-purdy/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">5</slash:comments><itunes:subtitle>In this episode we discuss Microsoft's OSLO platform with Doug Purdy and Don Box. We briefly discuss what OSLO is in general and then look at the various components of OSLO. We also look at how OSLO fits in with the general Microsoft strategy and how i...</itunes:subtitle><itunes:summary>In this episode we discuss Microsoft's OSLO platform with Doug Purdy and Don Box. We briefly discuss what OSLO is in general and then look at the various components of OSLO. We also look at how OSLO fits in with the general Microsoft strategy and how it compares to other DSL/Model-driven approaches. We then look at language modularization and composition and discuss the similarities with XML and Smalltalk. Finally, we discuss possible integrations of OSLO with other MD* approaches and technologies.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>46:46</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/-v6iqZlCJMU/seradio-episode123-microsoftOSLOwithDonBoxAndDougPurdy.mp3" fileSize="44900982" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2009/01/episode-123-microsoft-oslo-with-don-box-and-doug-purdy/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/-v6iqZlCJMU/seradio-episode123-microsoftOSLOwithDonBoxAndDougPurdy.mp3" length="44900982" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode123-microsoftOSLOwithDonBoxAndDougPurdy.mp3</feedburner:origEnclosureLink></item><item><title>Episode 122: Interview Janos Sztipanovits</title><link>http://feedproxy.google.com/~r/se-radio/~3/urGCLEtpXJU/</link><category>Episodes</category><category>business</category><category>COM</category><category>configuration management</category><category>dbc</category><category>Metamodeling</category><category>ruby</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Tue, 06 Jan 2009 11:04:06 PST</pubDate><guid isPermaLink="false"></guid><description>This is a discussion with &lt;a href="http://frontweb.vuse.vanderbilt.edu/vuse_web/directory/facultybio.asp?FacultyID=101."&gt;Janos Sztipanovits&lt;/a&gt; about &lt;a href="http://en.wikipedia.org/wiki/Cyber-physical_system"&gt;Cyber Physical Systems&lt;/a&gt; and how DSLs are used to approach some of the challenges in that domain. Specifically, in the second part we talk about formalizing DSL semantics.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/urGCLEtpXJU" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2009/01/episode-122-interview-janos-sztipanovits/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">1</slash:comments><itunes:subtitle>This is a discussion with Janos Sztipanovits about Cyber Physical Systems and how DSLs are used to approach some of the challenges in that domain. Specifically, in the second part we talk about formalizing DSL semantics.</itunes:subtitle><itunes:summary>This is a discussion with Janos Sztipanovits about Cyber Physical Systems and how DSLs are used to approach some of the challenges in that domain. Specifically, in the second part we talk about formalizing DSL semantics.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>26:12</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/pBAMvRHDoK4/seradio-episode122-InterviewJanosStzipanovits.mp3" fileSize="25156590" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2009/01/episode-122-interview-janos-sztipanovits/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/pBAMvRHDoK4/seradio-episode122-InterviewJanosStzipanovits.mp3" length="25156590" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode122-InterviewJanosStzipanovits.mp3</feedburner:origEnclosureLink></item><item><title>Episode 121: OR Mappers with Michael Plöd</title><link>http://feedproxy.google.com/~r/se-radio/~3/jz4lGuQILvY/</link><category>Episodes</category><category>api</category><category>continuous integration</category><category>domain-driven design</category><category>operating system</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Sat, 27 Dec 2008 09:20:02 PST</pubDate><guid isPermaLink="false"></guid><description>In this episode, Michael Plöd is interviewed about Object-Relational Mapping technology. He talks about the common concepts, compares the range of different tools that go by this name, and goes into the design and architectural consequences of using an OR mapper.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/jz4lGuQILvY" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2008/12/episode-121-or-mappers-with-michael-plod/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">4</slash:comments><itunes:subtitle>In this episode, Michael Plöd is interviewed about Object-Relational Mapping technology. He talks about the common concepts, compares the range of different tools that go by this name, and goes into the design and architectural consequences of using an...</itunes:subtitle><itunes:summary>In this episode, Michael Plöd is interviewed about Object-Relational Mapping technology. He talks about the common concepts, compares the range of different tools that go by this name, and goes into the design and architectural consequences of using an OR mapper.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>54:38</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/NBWtxwMbM64/seradio-episode121-ORMappers.mp3" fileSize="52457684" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2008/12/episode-121-or-mappers-with-michael-plod/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/NBWtxwMbM64/seradio-episode121-ORMappers.mp3" length="52457684" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode121-ORMappers.mp3</feedburner:origEnclosureLink></item><item><title>Episode 120: OCL with Anneke Kleppe</title><link>http://feedproxy.google.com/~r/se-radio/~3/8HIrtRRKpVw/</link><category>Episodes</category><category>dbc</category><category>design-by-contract</category><category>domain-driven design</category><category>ocl</category><category>software architecture</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Wed, 17 Dec 2008 12:39:29 PST</pubDate><guid isPermaLink="false"></guid><description>In this episode we're talking to Anneke Kleppe about model-driven software development and language engineering. We start with her involvement in the creation of the Object Constraint Language (OCL) and discuss the intial expactations, actual experiences, and the place of OCL in the current day. From here, Anneke talks us through her take on the formative years of UML and MDA. From here, we expand to the realm of Domain-Specific Languages and Anneke discusses their place in software engineering in general and why we should expect DSLs in significant numbers to become a common sight.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/8HIrtRRKpVw" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2008/12/episode-120-ocl-with-anneke-kleppe/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">3</slash:comments><itunes:subtitle>In this episode we're talking to Anneke Kleppe about model-driven software development and language engineering. We start with her involvement in the creation of the Object Constraint Language (OCL) and discuss the intial expactations,</itunes:subtitle><itunes:summary>In this episode we're talking to Anneke Kleppe about model-driven software development and language engineering. We start with her involvement in the creation of the Object Constraint Language (OCL) and discuss the intial expactations, actual experiences, and the place of OCL in the current day. From here, Anneke talks us through her take on the formative years of UML and MDA. From here, we expand to the realm of Domain-Specific Languages and Anneke discusses their place in software engineering in general and why we should expect DSLs in significant numbers to become a common sight.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>41:43</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/qL0aRGti514/seradio-episode120-OCL.mp3" fileSize="40053909" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2008/12/episode-120-ocl-with-anneke-kleppe/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/qL0aRGti514/seradio-episode120-OCL.mp3" length="40053909" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode120-OCL.mp3</feedburner:origEnclosureLink></item><item><title>Episode 119: DSLs in Practice with JP Tolvanen</title><link>http://feedproxy.google.com/~r/se-radio/~3/ipx-zVYZPTU/</link><category>Episodes</category><category>dbc</category><category>domain-driven design</category><category>mdsd</category><category>metrics</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Sun, 07 Dec 2008 09:35:25 PST</pubDate><guid isPermaLink="false"></guid><description>In this episode, Markus talks with Juha-Pekka Tolvanen about using DSLs and code generation in practice. The main part of the episode is the discussion about a number of case studies that show how DSLs and code generation are used in practice.

&lt;li&gt;&lt;a href="http://omegataupodcast.net"&gt;Omega Tau&lt;/a&gt;,
  Markus' new podcast mentioned in the beginning of the show
&lt;/li&gt;&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/ipx-zVYZPTU" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2008/12/episode-119-dsls-in-practice-with-jp-tolvanen/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">14</slash:comments><itunes:subtitle>In this episode, Markus talks with Juha-Pekka Tolvanen about using DSLs and code generation in practice. The main part of the episode is the discussion about a number of case studies that show how DSLs and code generation are used in practice. - </itunes:subtitle><itunes:summary>In this episode, Markus talks with Juha-Pekka Tolvanen about using DSLs and code generation in practice. The main part of the episode is the discussion about a number of case studies that show how DSLs and code generation are used in practice.

Omega Tau,
  Markus' new podcast mentioned in the beginning of the show</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>51:26</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/TeNxZn5RUX8/seradio-episode119-DSLsInPracticeWithJPTolvanen.mp3" fileSize="49378996" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2008/12/episode-119-dsls-in-practice-with-jp-tolvanen/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/TeNxZn5RUX8/seradio-episode119-DSLsInPracticeWithJPTolvanen.mp3" length="49378996" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode119-DSLsInPracticeWithJPTolvanen.mp3</feedburner:origEnclosureLink></item><item><title>Episode 118: Eelco Visser on Parsers</title><link>http://feedproxy.google.com/~r/se-radio/~3/jXfdjqO6fEE/</link><category>Episodes</category><category>dbc</category><category>domain-driven design</category><category>project management</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Wed, 26 Nov 2008 22:27:21 PST</pubDate><guid isPermaLink="false"></guid><description>In this episode we're talking to Eelco Visser about parsing text. We start at the basics - what is parsing? - covering classic tools such as Yacc and classic parsing approaches such as LALR before examining how more recent approaches such as scannerless parsing can make parsing easier and enable previously impractical use cases.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/jXfdjqO6fEE" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2008/11/episode-118-eelco-visser-on-parsers/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">3</slash:comments><itunes:subtitle>In this episode we're talking to Eelco Visser about parsing text. We start at the basics - what is parsing? - covering classic tools such as Yacc and classic parsing approaches such as LALR before examining how more recent approaches such as scannerles...</itunes:subtitle><itunes:summary>In this episode we're talking to Eelco Visser about parsing text. We start at the basics - what is parsing? - covering classic tools such as Yacc and classic parsing approaches such as LALR before examining how more recent approaches such as scannerless parsing can make parsing easier and enable previously impractical use cases.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>54:33</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/rQgGQ-J5kOA/seradio-episode118-eelcoVisserOnParsers.mp3" fileSize="52373256" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2008/11/episode-118-eelco-visser-on-parsers/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/rQgGQ-J5kOA/seradio-episode118-eelcoVisserOnParsers.mp3" length="52373256" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode118-eelcoVisserOnParsers.mp3</feedburner:origEnclosureLink></item><item><title>Episode 117: Bran Selic on UML</title><link>http://feedproxy.google.com/~r/se-radio/~3/4FGWehKbt8g/</link><category>Episodes</category><category>dbc</category><category>domain-driven design</category><category>mdsd</category><category>metrics</category><category>ocl</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Sun, 16 Nov 2008 21:48:32 PST</pubDate><guid isPermaLink="false"></guid><description>In this episode we're talking to Bran Selic of Malina Software about modelling in general and UML2 in particular. Bran covers the basics of modelling, the history of UML, and what's new in UML2.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/4FGWehKbt8g" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2008/11/episode-117-bran-selic-on-uml/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">6</slash:comments><itunes:subtitle>In this episode we're talking to Bran Selic of Malina Software about modelling in general and UML2 in particular. Bran covers the basics of modelling, the history of UML, and what's new in UML2.</itunes:subtitle><itunes:summary>In this episode we're talking to Bran Selic of Malina Software about modelling in general and UML2 in particular. Bran covers the basics of modelling, the history of UML, and what's new in UML2.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>1:07:27</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/H6-XL1SS5jY/seradio-episode117-branSelicOnUML.mp3" fileSize="64756968" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2008/11/episode-117-bran-selic-on-uml/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/H6-XL1SS5jY/seradio-episode117-branSelicOnUML.mp3" length="64756968" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode117-branSelicOnUML.mp3</feedburner:origEnclosureLink></item><item><title>Episode 116: The Semantic Web with Jim Hendler</title><link>http://feedproxy.google.com/~r/se-radio/~3/eH9GQyFix2g/</link><category>Episodes</category><category>domain-driven design</category><category>F#</category><category>interaction design</category><category>ui</category><category>usability</category><category>visualization</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Thu, 06 Nov 2008 23:47:58 PST</pubDate><guid isPermaLink="false"></guid><description>In this episode we're talking to James A. Hendler about the semantic web. We start with a definition of the semantic web and by discussing the main ingredients. We then look at (more or less) related topics such as prolog, artificial intelligence, wisdom of the crowds, and tagging. In the next section we discuss the core semantic web technologies: RDF, OWL, inference engines, SPARQL, and GRDDL. We conclude our discussion by looking at the status of the semantic web today and a couple of example applications.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/eH9GQyFix2g" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2008/11/episode-116-the-semantic-web-with-jim-hendler/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">2</slash:comments><itunes:subtitle>In this episode we're talking to James A. Hendler about the semantic web. We start with a definition of the semantic web and by discussing the main ingredients. We then look at (more or less) related topics such as prolog, artificial intelligence,</itunes:subtitle><itunes:summary>In this episode we're talking to James A. Hendler about the semantic web. We start with a definition of the semantic web and by discussing the main ingredients. We then look at (more or less) related topics such as prolog, artificial intelligence, wisdom of the crowds, and tagging. In the next section we discuss the core semantic web technologies: RDF, OWL, inference engines, SPARQL, and GRDDL. We conclude our discussion by looking at the status of the semantic web today and a couple of example applications.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>28:50</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/DzZ4GWQPHxg/seradio-episode116-jimHendlerOnTheSemanticWeb.mp3" fileSize="27681147" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2008/11/episode-116-the-semantic-web-with-jim-hendler/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/DzZ4GWQPHxg/seradio-episode116-jimHendlerOnTheSemanticWeb.mp3" length="27681147" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode116-jimHendlerOnTheSemanticWeb.mp3</feedburner:origEnclosureLink></item><item><title>Episode 115: Architecture Analysis</title><link>http://feedproxy.google.com/~r/se-radio/~3/LXQnrB8K6eg/</link><category>Episodes</category><category>architecture evaluation</category><category>architecture review</category><category>dbc</category><category>erosion</category><category>findbugs</category><category>refactoring</category><category>static analysis</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Tue, 28 Oct 2008 00:41:25 PDT</pubDate><guid isPermaLink="false"></guid><description>During Evolution of a software system, it becomes more and more difficult to understand the originally planned software architecture. Often an architectural degeneration happens because of various reasons during the development phases. In this session we will be looking how to avoid such architectural decay and degeneration and how continuous monitoring can improve the situation (and avoid architectural violations). In addition we will look at "refactoring in the large" and how refactoring can be simulated. A new family of "lint like tools for software architectures" is currently emerging in the marketplace I will show some examples and how they scale and support you in real world projects.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/LXQnrB8K6eg" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2008/10/episode-115-architecture-analysis/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">6</slash:comments><itunes:subtitle>During Evolution of a software system, it becomes more and more difficult to understand the originally planned software architecture. Often an architectural degeneration happens because of various reasons during the development phases.</itunes:subtitle><itunes:summary>During Evolution of a software system, it becomes more and more difficult to understand the originally planned software architecture. Often an architectural degeneration happens because of various reasons during the development phases. In this session we will be looking how to avoid such architectural decay and degeneration and how continuous monitoring can improve the situation (and avoid architectural violations). In addition we will look at "refactoring in the large" and how refactoring can be simulated. A new family of "lint like tools for software architectures" is currently emerging in the marketplace I will show some examples and how they scale and support you in real world projects.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>44:48</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/X4MsyO5lVHA/seradio-episode115-architectureAnalysis.mp3" fileSize="43019747" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2008/10/episode-115-architecture-analysis/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/X4MsyO5lVHA/seradio-episode115-architectureAnalysis.mp3" length="43019747" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode115-architectureAnalysis.mp3</feedburner:origEnclosureLink></item><item><title>Episode 114: Christof Ebert on Requirements Engineering</title><link>http://feedproxy.google.com/~r/se-radio/~3/oT2DHQ-NyvY/</link><category>Episodes</category><category>domain-driven design</category><category>owl</category><category>performance</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Sat, 18 Oct 2008 00:28:32 PDT</pubDate><guid isPermaLink="false"></guid><description>In this episode we talk to Christof Ebert about requirements engineering. As the name "engineering" suggests, we need to be systematic when working and managing requirements. Christof will structure RE into several activities, namely elicitation (identifying the relevant requirements), specification (clearly describing requirements), analysis (synthesizing a solution), verification and validation (achieving good requirements quality), comittment (allocating requirements to a project, product release or iteration), and management (keeping track of the implementation status of requirements). In this episode we discuss these activities and highlight lots of practical guidance.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/oT2DHQ-NyvY" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2008/10/episode-114-christof-ebert-on-requirements-engineering/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">4</slash:comments><itunes:subtitle>In this episode we talk to Christof Ebert about requirements engineering. As the name "engineering" suggests, we need to be systematic when working and managing requirements. Christof will structure RE into several activities,</itunes:subtitle><itunes:summary>In this episode we talk to Christof Ebert about requirements engineering. As the name "engineering" suggests, we need to be systematic when working and managing requirements. Christof will structure RE into several activities, namely elicitation (identifying the relevant requirements), specification (clearly describing requirements), analysis (synthesizing a solution), verification and validation (achieving good requirements quality), comittment (allocating requirements to a project, product release or iteration), and management (keeping track of the implementation status of requirements). In this episode we discuss these activities and highlight lots of practical guidance.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>59:56</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/_bQAvLeCE6c/seradio-episode114-christofEbertOnRequirementsEngineering.mp3" fileSize="57529284" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2008/10/episode-114-christof-ebert-on-requirements-engineering/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/_bQAvLeCE6c/seradio-episode114-christofEbertOnRequirementsEngineering.mp3" length="57529284" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode114-christofEbertOnRequirementsEngineering.mp3</feedburner:origEnclosureLink></item><item><title>Episode 113: Building Platforms with Jeff McAffer</title><link>http://feedproxy.google.com/~r/se-radio/~3/a_NgM8za7x4/</link><category>Episodes</category><category>domain-driven design</category><category>garbage collection</category><category>OpenJDK</category><category>OSLO</category><category>scalability</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Tue, 07 Oct 2008 22:53:29 PDT</pubDate><guid isPermaLink="false"></guid><description>In this episode we talk with Jeff McAffer about building platforms. We start with a brief discussion about what a platform is in contrast to a framework or an application. Drawing from his experiences working on the Eclipse platform for years, Jeff talks with us about how to develop platforms, why developing a platform is different from developing an application, what makes a good platform great, and why API design becomes so extremely important for platforms. He provides us with some insights on how the development process and the client collaboration for platform development could look like and what has and has not worked in the past.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/a_NgM8za7x4" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2008/10/episode-113-building-platforms-with-jeff-mcaffer/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><itunes:subtitle>In this episode we talk with Jeff McAffer about building platforms. We start with a brief discussion about what a platform is in contrast to a framework or an application. Drawing from his experiences working on the Eclipse platform for years,</itunes:subtitle><itunes:summary>In this episode we talk with Jeff McAffer about building platforms. We start with a brief discussion about what a platform is in contrast to a framework or an application. Drawing from his experiences working on the Eclipse platform for years, Jeff talks with us about how to develop platforms, why developing a platform is different from developing an application, what makes a good platform great, and why API design becomes so extremely important for platforms. He provides us with some insights on how the development process and the client collaboration for platform development could look like and what has and has not worked in the past.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>57:10</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/Pk_BJAJgNT4/seradio-episode113-jeffMcAfferOnBuildingPlatforms.mp3" fileSize="54879339" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2008/10/episode-113-building-platforms-with-jeff-mcaffer/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/Pk_BJAJgNT4/seradio-episode113-jeffMcAfferOnBuildingPlatforms.mp3" length="54879339" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode113-jeffMcAfferOnBuildingPlatforms.mp3</feedburner:origEnclosureLink></item><item><title>Episode 112: Roles in Software Engineering II</title><link>http://feedproxy.google.com/~r/se-radio/~3/Bmf6W4mv8q0/</link><category>Episodes</category><category>DRE Systems</category><category>owl</category><category>security</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Sat, 27 Sep 2008 23:05:25 PDT</pubDate><guid isPermaLink="false"></guid><description>This is the second part of the two part topic on roles in software engineering. Michael and Markus discuss role definitions in a corporate environment. For several typical roles we give hints on the expected skills, knowledge, and mindset. In this episode we discuss the roles technical lead, technologist, requirements engineer, product manager, and project manager.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/Bmf6W4mv8q0" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2008/09/episode-112-roles-in-software-engineering-ii/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">6</slash:comments><itunes:subtitle>This is the second part of the two part topic on roles in software engineering. Michael and Markus discuss role definitions in a corporate environment. For several typical roles we give hints on the expected skills, knowledge, and mindset.</itunes:subtitle><itunes:summary>This is the second part of the two part topic on roles in software engineering. Michael and Markus discuss role definitions in a corporate environment. For several typical roles we give hints on the expected skills, knowledge, and mindset. In this episode we discuss the roles technical lead, technologist, requirements engineer, product manager, and project manager.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>44:45</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/e_62uh5Cwrw/seradio-episode112-rolesInSoftwareEngineeringPartTwo.mp3" fileSize="42967502" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2008/09/episode-112-roles-in-software-engineering-ii/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/e_62uh5Cwrw/seradio-episode112-rolesInSoftwareEngineeringPartTwo.mp3" length="42967502" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode112-rolesInSoftwareEngineeringPartTwo.mp3</feedburner:origEnclosureLink></item><item><title>Episode 111: About Us 2008</title><link>http://feedproxy.google.com/~r/se-radio/~3/L60b0BawA4A/</link><category>Episodes</category><category>Domain Specific Languages</category><category>soa</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Sun, 21 Sep 2008 23:16:39 PDT</pubDate><guid isPermaLink="false"></guid><description>In this episode we discuss the status of SE Radio today and introduce the team members. Among other things, Markus discusses stats, sound quality, partners, transcripts, and the cooperation with Hillside Europe. Also, the team members introduce themselves with a one to two minute clip.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/L60b0BawA4A" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2008/09/episode-111-about-us-2008/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">6</slash:comments><itunes:subtitle>In this episode we discuss the status of SE Radio today and introduce the team members. Among other things, Markus discusses stats, sound quality, partners, transcripts, and the cooperation with Hillside Europe. Also,</itunes:subtitle><itunes:summary>In this episode we discuss the status of SE Radio today and introduce the team members. Among other things, Markus discusses stats, sound quality, partners, transcripts, and the cooperation with Hillside Europe. Also, the team members introduce themselves with a one to two minute clip.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>37:01</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/XwkpDSoDSsM/seradio-episode111-aboutus2008.mp3" fileSize="35546401" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2008/09/episode-111-about-us-2008/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/XwkpDSoDSsM/seradio-episode111-aboutus2008.mp3" length="35546401" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode111-aboutus2008.mp3</feedburner:origEnclosureLink></item><item><title>Episode 110: Roles in Software Engineering I</title><link>http://feedproxy.google.com/~r/se-radio/~3/89fYbv9rgC8/</link><category>Episodes</category><category>DRE Systems</category><category>owl</category><category>security</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Thu, 18 Sep 2008 12:51:58 PDT</pubDate><guid isPermaLink="false"></guid><description>This is the first part of a two part topic on roles in software engineering. Michael and Markus discuss role definitions in an corporate environment. For several typical roles we give hints on the expected skills, knowledge, and mindset. In this episode we discuss the roles junior developer, senior developer, and software architect.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/89fYbv9rgC8" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2008/09/episode-110-roles-in-software-engineering-i/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">3</slash:comments><itunes:subtitle>This is the first part of a two part topic on roles in software engineering. Michael and Markus discuss role definitions in an corporate environment. For several typical roles we give hints on the expected skills, knowledge, and mindset.</itunes:subtitle><itunes:summary>This is the first part of a two part topic on roles in software engineering. Michael and Markus discuss role definitions in an corporate environment. For several typical roles we give hints on the expected skills, knowledge, and mindset. In this episode we discuss the roles junior developer, senior developer, and software architect.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>50:23</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/7vepaziQKyA/seradio-episode110-rolesInSoftwareEngineeringPartOne.mp3" fileSize="48367117" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2008/09/episode-110-roles-in-software-engineering-i/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/7vepaziQKyA/seradio-episode110-rolesInSoftwareEngineeringPartOne.mp3" length="48367117" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode110-rolesInSoftwareEngineeringPartOne.mp3</feedburner:origEnclosureLink></item><item><title>Episode 109: eBay’s Architecture Principles with Randy Shoup</title><link>http://feedproxy.google.com/~r/se-radio/~3/VXCB01ZYLCU/</link><category>Episodes</category><category>domain-driven design</category><category>garbage collection</category><category>roles</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Sun, 07 Sep 2008 23:57:11 PDT</pubDate><guid isPermaLink="false"></guid><description>In this episode we discuss with Randy Shoup, Distinguished Architect at eBay, about architectural pinciples and patterns used for building the highly scalable eBay infrastructure. The discussion is structured into four main ideas: partition everything, use asynchrony everywhere, automate everything, and design the system keeping in mind that everything fails at some point in a large distributed system.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/VXCB01ZYLCU" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2008/09/episode-109-ebays-architecture-principles-with-randy-shoup/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">12</slash:comments><itunes:subtitle>In this episode we discuss with Randy Shoup, Distinguished Architect at eBay, about architectural pinciples and patterns used for building the highly scalable eBay infrastructure. The discussion is structured into four main ideas: partition everything,</itunes:subtitle><itunes:summary>In this episode we discuss with Randy Shoup, Distinguished Architect at eBay, about architectural pinciples and patterns used for building the highly scalable eBay infrastructure. The discussion is structured into four main ideas: partition everything, use asynchrony everywhere, automate everything, and design the system keeping in mind that everything fails at some point in a large distributed system.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>1:00:04</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/gfGgeCISVN4/seradio-episode109-randyShoupOnEbayArchitecturePrinciples.mp3" fileSize="57669217" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2008/09/episode-109-ebays-architecture-principles-with-randy-shoup/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/gfGgeCISVN4/seradio-episode109-randyShoupOnEbayArchitecturePrinciples.mp3" length="57669217" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode109-randyShoupOnEbayArchitecturePrinciples.mp3</feedburner:origEnclosureLink></item><item><title>Episode 108: Simon Peyton Jones on Functional Programming and Haskell</title><link>http://feedproxy.google.com/~r/se-radio/~3/gaZOB7nLdrQ/</link><category>Episodes</category><category>cyber-physical systems</category><category>domain-driven design</category><category>python</category><category>transactions</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Fri, 29 Aug 2008 00:47:22 PDT</pubDate><guid isPermaLink="false"></guid><description>We start our discussion with a brief look at what Haskell is and how a pure functional language is different from non-pure languages. We then look at the basic building blocks and the philosophy of the language, discussing concepts such as the lambda calculus, closures, currying, immutability, lazy evaluation, memoization, and the role of data types in functional languages. A significant part of the discussion is then spent on the management of side effects in a pure language - in other words, the importance of monads. We conclude the episode with a look at Haskell's importance and community today.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/gaZOB7nLdrQ" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2008/08/episode-108-simon-peyton-jones-on-functional-programming-and-haskell/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">7</slash:comments><itunes:subtitle>We start our discussion with a brief look at what Haskell is and how a pure functional language is different from non-pure languages. We then look at the basic building blocks and the philosophy of the language,</itunes:subtitle><itunes:summary>We start our discussion with a brief look at what Haskell is and how a pure functional language is different from non-pure languages. We then look at the basic building blocks and the philosophy of the language, discussing concepts such as the lambda calculus, closures, currying, immutability, lazy evaluation, memoization, and the role of data types in functional languages. A significant part of the discussion is then spent on the management of side effects in a pure language - in other words, the importance of monads. We conclude the episode with a look at Haskell's importance and community today.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>50:52</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/pBXonDCwEZ8/seradio-episode108-simonPeytonJonesOnFunctionalProgramming.mp3" fileSize="48828544" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2008/08/episode-108-simon-peyton-jones-on-functional-programming-and-haskell/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/pBXonDCwEZ8/seradio-episode108-simonPeytonJonesOnFunctionalProgramming.mp3" length="48828544" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode108-simonPeytonJonesOnFunctionalProgramming.mp3</feedburner:origEnclosureLink></item><item><title>Episode 107: Andrew Watson on the OMG</title><link>http://feedproxy.google.com/~r/se-radio/~3/tsJAWABSVhM/</link><category>Episodes</category><category>domain-driven design</category><category>dsm</category><category>o/r mappers</category><category>ocl</category><category>parsing</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Mon, 18 Aug 2008 22:46:25 PDT</pubDate><guid isPermaLink="false"></guid><description>This episode is a discussion with Andrew Watson,  Technical Director of the Object Management Group.
The episode is structured into five parts. We start with the history of the OMG and its early work. Then we look at the set of standards it has been (or is currently) working on. Next is a discussion of the standardization process used by the OMG, including the much-debated topic of compliance testing. We then look at OMG's relationship to other standards bodies (W3C, OASIS). Finally Andrew and I briefly discuss our common passion, gliding :-)&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/tsJAWABSVhM" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2008/08/episode-107-andrew-watson-on-the-omg/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">1</slash:comments><itunes:subtitle>This episode is a discussion with Andrew Watson,  Technical Director of the Object Management Group. The episode is structured into five parts. We start with the history of the OMG and its early work. Then we look at the set of standards it has been (...</itunes:subtitle><itunes:summary>This episode is a discussion with Andrew Watson,  Technical Director of the Object Management Group.
The episode is structured into five parts. We start with the history of the OMG and its early work. Then we look at the set of standards it has been (or is currently) working on. Next is a discussion of the standardization process used by the OMG, including the much-debated topic of compliance testing. We then look at OMG's relationship to other standards bodies (W3C, OASIS). Finally Andrew and I briefly discuss our common passion, gliding :-)</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>1:07:25</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/DoIqNxqzbJA/seradio-episode107-andrewWatsonOnOMG.mp3" fileSize="64725204" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2008/08/episode-107-andrew-watson-on-the-omg/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/DoIqNxqzbJA/seradio-episode107-andrewWatsonOnOMG.mp3" length="64725204" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode107-andrewWatsonOnOMG.mp3</feedburner:origEnclosureLink></item><item><title>Episode 106: Introduction to AOP</title><link>http://feedproxy.google.com/~r/se-radio/~3/CZMd9P301C0/</link><category>Episodes</category><category>domain-driven design</category><category>xp</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Sat, 09 Aug 2008 10:07:58 PDT</pubDate><guid isPermaLink="false"></guid><description>This episode is a systematic introduction to Aspect Oriented Programming (in contrast to the &lt;a href="http://se-radio.net/podcast/2006-04/episode-11-interview-gregor-kiczales"&gt;interview with Gregor Kiczales&lt;/a&gt;). We discuss the fundamentals of AOP, define many of the relevant terms and also look at how and where AOP is used in practice, as well as at some current research trends.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/CZMd9P301C0" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2008/08/episode-106-introduction-to-aop/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><itunes:subtitle>This episode is a systematic introduction to Aspect Oriented Programming (in contrast to the interview with Gregor Kiczales). We discuss the fundamentals of AOP, define many of the relevant terms and also look at how and where AOP is used in practice,</itunes:subtitle><itunes:summary>This episode is a systematic introduction to Aspect Oriented Programming (in contrast to the interview with Gregor Kiczales). We discuss the fundamentals of AOP, define many of the relevant terms and also look at how and where AOP is used in practice, as well as at some current research trends.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>1:04:49</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/05-uDXySC3Q/seradio-episode106-introductionToAOP.mp3" fileSize="62221210" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2008/08/episode-106-introduction-to-aop/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/05-uDXySC3Q/seradio-episode106-introductionToAOP.mp3" length="62221210" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode106-introductionToAOP.mp3</feedburner:origEnclosureLink></item><item><title>Episode 105: Retrospectives with Linda Rising</title><link>http://feedproxy.google.com/~r/se-radio/~3/fGwZBYqIqx8/</link><category>Episodes</category><category>domain-driven design</category><category>owl</category><category>rdf</category><category>rfid</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Wed, 30 Jul 2008 01:57:29 PDT</pubDate><guid isPermaLink="false"></guid><description>In this episode we're talking to &lt;a href="http://www.lindarising.org/"&gt;Linda Rising&lt;/a&gt; about retrospectives. We start by defining what a retrospective is and discuss some of the logistics of making it work for software projects. We then look at the different phases of a retrospective. The main part then is a discussion about some of the practices or games that are used to facilitate the retrospective. We conclude the retrospective discussion with destroying some of the prejudices against it and the relationship to process improvement and CMM. 
At the end of the interview we talk a little about Linda's current interest: how does the brain work?&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/fGwZBYqIqx8" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2008/07/episode-105-retrospectives-with-linda-rising/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">19</slash:comments><itunes:subtitle>In this episode we're talking to Linda Rising about retrospectives. We start by defining what a retrospective is and discuss some of the logistics of making it work for software projects. We then look at the different phases of a retrospective.</itunes:subtitle><itunes:summary>In this episode we're talking to Linda Rising about retrospectives. We start by defining what a retrospective is and discuss some of the logistics of making it work for software projects. We then look at the different phases of a retrospective. The main part then is a discussion about some of the practices or games that are used to facilitate the retrospective. We conclude the retrospective discussion with destroying some of the prejudices against it and the relationship to process improvement and CMM. 
At the end of the interview we talk a little about Linda's current interest: how does the brain work?</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>1:13:36</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/Uku3BvM99Ag/seradio-episode105-lindaRisingOnRetrospectives.mp3" fileSize="70656964" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2008/07/episode-105-retrospectives-with-linda-rising/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/Uku3BvM99Ag/seradio-episode105-lindaRisingOnRetrospectives.mp3" length="70656964" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode105-lindaRisingOnRetrospectives.mp3</feedburner:origEnclosureLink></item><item><title>Episode 104: Plugin Architectures</title><link>http://feedproxy.google.com/~r/se-radio/~3/HKbNYUF1V5I/</link><category>Episodes</category><category>architecture</category><category>plugins</category><category>Technology/Guest</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Sun, 20 Jul 2008 00:30:56 PDT</pubDate><guid isPermaLink="false"></guid><description>In this episode we talk with Klaus Marquardt about building systems out of plugins. After briefly introducing the concept of a plugin in contrast to modules and related software engineering concepts, we discuss different views on plugins and different ways of working with plugins for developing software. We are looking at plugins for embedded systems as well as large business systems, at how plugins change the working mode and team organization, and discuss the possibilities of why and when to use plugins for implementing software systems.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/HKbNYUF1V5I" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2008/07/episode-104-plugin-architectures/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">6</slash:comments><itunes:subtitle>In this episode we talk with Klaus Marquardt about building systems out of plugins. After briefly introducing the concept of a plugin in contrast to modules and related software engineering concepts, we discuss different views on plugins and different ...</itunes:subtitle><itunes:summary>In this episode we talk with Klaus Marquardt about building systems out of plugins. After briefly introducing the concept of a plugin in contrast to modules and related software engineering concepts, we discuss different views on plugins and different ways of working with plugins for developing software. We are looking at plugins for embedded systems as well as large business systems, at how plugins change the working mode and team organization, and discuss the possibilities of why and when to use plugins for implementing software systems.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>56:22</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/TA7qW1BoR98/seradio-episode104-klausMarquartOnPluginArchitectures.mp3" fileSize="54115107" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2008/07/episode-104-plugin-architectures/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/TA7qW1BoR98/seradio-episode104-klausMarquartOnPluginArchitectures.mp3" length="54115107" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode104-klausMarquartOnPluginArchitectures.mp3</feedburner:origEnclosureLink></item><item><title>Episode 103: 10 years of Agile Experiences</title><link>http://feedproxy.google.com/~r/se-radio/~3/Sg34h75MSuE/</link><category>Episodes</category><category>agile</category><category>Technology/Guest</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Thu, 10 Jul 2008 00:04:47 PDT</pubDate><guid isPermaLink="false"></guid><description>In this episode we're talking to &lt;a href="http://www.coldewey.com/"&gt;Jens Coldewey&lt;/a&gt; about his experiences in 10 years of introducing agile techniques to project teams. We discuss real-world examples and the lessons learned and strategies derived from them.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/Sg34h75MSuE" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2008/07/episode-103-10-years-of-agile-experiences/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">1</slash:comments><itunes:subtitle>In this episode we're talking to Jens Coldewey about his experiences in 10 years of introducing agile techniques to project teams. We discuss real-world examples and the lessons learned and strategies derived from them.</itunes:subtitle><itunes:summary>In this episode we're talking to Jens Coldewey about his experiences in 10 years of introducing agile techniques to project teams. We discuss real-world examples and the lessons learned and strategies derived from them.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>55:09</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/Cd_txIH03DA/seradio-episode103-jensColdeweyOn10YearsOfAgileExperiences.mp3" fileSize="52951253" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2008/07/episode-103-10-years-of-agile-experiences/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/Cd_txIH03DA/seradio-episode103-jensColdeweyOn10YearsOfAgileExperiences.mp3" length="52951253" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode103-jensColdeweyOn10YearsOfAgileExperiences.mp3</feedburner:origEnclosureLink></item><item><title>Episode 102: Relational Databases</title><link>http://feedproxy.google.com/~r/se-radio/~3/Ob_ZYQYlBy0/</link><category>Episodes</category><category>databases</category><category>Technology Talk</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Mon, 30 Jun 2008 02:15:07 PDT</pubDate><guid isPermaLink="false"></guid><description>In this espisode we take a closer look at relational database systems and the concepts behind them. We start by discussing the relational paradigm, its concepts and ramifications, and go on to architectural aspects.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/Ob_ZYQYlBy0" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2008/06/episode-102-relational-databases/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">4</slash:comments><itunes:subtitle>In this espisode we take a closer look at relational database systems and the concepts behind them. We start by discussing the relational paradigm, its concepts and ramifications, and go on to architectural aspects.</itunes:subtitle><itunes:summary>In this espisode we take a closer look at relational database systems and the concepts behind them. We start by discussing the relational paradigm, its concepts and ramifications, and go on to architectural aspects.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>1:03:54</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/3JGcQh_xMuM/seradio-episode102-relationalDatabases.mp3" fileSize="61349212" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2008/06/episode-102-relational-databases/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/3JGcQh_xMuM/seradio-episode102-relationalDatabases.mp3" length="61349212" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode102-relationalDatabases.mp3</feedburner:origEnclosureLink></item><item><title>Episode 101: Andreas Zeller on Debugging</title><link>http://feedproxy.google.com/~r/se-radio/~3/t6z6sQ0hG0w/</link><category>Episodes</category><category>automation</category><category>debugging</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Fri, 20 Jun 2008 02:18:24 PDT</pubDate><guid isPermaLink="false"></guid><description>In this episode we're talking to &lt;a href="http://www.st.cs.uni-sb.de/zeller/"&gt;Andreas Zeller&lt;/a&gt;. about debugging. We started the discussion with an explanation of what debugging and how it works in principle. We then briefly discussed the relationship between
debugging and testing. Next was the importance of the scientific method for debugging. We then looked as debugging as a search problem, leading to a discussion about delta debugging, the main topic of this discussion. We concluded the discussion by looking at the practical usability of delta debugging and the relationship to other means of automatically finding problems in software.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/t6z6sQ0hG0w" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2008/06/episode-101-andreas-zeller-on-debugging/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">1</slash:comments><itunes:subtitle>In this episode we're talking to Andreas Zeller. about debugging. We started the discussion with an explanation of what debugging and how it works in principle. We then briefly discussed the relationship between debugging and testing.</itunes:subtitle><itunes:summary>In this episode we're talking to Andreas Zeller. about debugging. We started the discussion with an explanation of what debugging and how it works in principle. We then briefly discussed the relationship between
debugging and testing. Next was the importance of the scientific method for debugging. We then looked as debugging as a search problem, leading to a discussion about delta debugging, the main topic of this discussion. We concluded the discussion by looking at the practical usability of delta debugging and the relationship to other means of automatically finding problems in software.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>34:10</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/Dh16BMp6BO0/seradio-episode101-andreasZellerOnDebugging.mp3" fileSize="32802238" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2008/06/episode-101-andreas-zeller-on-debugging/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/Dh16BMp6BO0/seradio-episode101-andreasZellerOnDebugging.mp3" length="32802238" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode101-andreasZellerOnDebugging.mp3</feedburner:origEnclosureLink></item><item><title>Episode 100: Software in Space</title><link>http://feedproxy.google.com/~r/se-radio/~3/ZpXEZGjqshM/</link><category>Episodes</category><category>processes</category><category>space</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Tue, 10 Jun 2008 05:24:42 PDT</pubDate><guid isPermaLink="false"></guid><description>In this episode we're talking to Hans-Joachim Popp, CIO at DLR about software in space. We start out by reviewing some well-known accidents of unmanned space flight that were caused by software faults and use this as a motivation to discuss how to avoid these in the future. We discuss culture, process, techniques and tools that DLR uses to create  high-quality software for use in unmanned space systems.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/ZpXEZGjqshM" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2008/06/episode-100-software-in-space/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">5</slash:comments><itunes:subtitle>In this episode we're talking to Hans-Joachim Popp, CIO at DLR about software in space. We start out by reviewing some well-known accidents of unmanned space flight that were caused by software faults and use this as a motivation to discuss how to avoi...</itunes:subtitle><itunes:summary>In this episode we're talking to Hans-Joachim Popp, CIO at DLR about software in space. We start out by reviewing some well-known accidents of unmanned space flight that were caused by software faults and use this as a motivation to discuss how to avoid these in the future. We discuss culture, process, techniques and tools that DLR uses to create  high-quality software for use in unmanned space systems.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>36:14</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/bshf1H1NX5s/seradio-episode100-softwareInSpace.mp3" fileSize="34793376" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2008/06/episode-100-software-in-space/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/bshf1H1NX5s/seradio-episode100-softwareInSpace.mp3" length="34793376" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode100-softwareInSpace.mp3</feedburner:origEnclosureLink></item><item><title>Episode 99: Transactions</title><link>http://feedproxy.google.com/~r/se-radio/~3/endG3yvjNJI/</link><category>Episodes</category><category>databases</category><category>Technology/Guest</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Sat, 31 May 2008 05:09:36 PDT</pubDate><guid isPermaLink="false"></guid><description>This episode takes a close look at transactions from different angles, starting with their fundamental properties of Atomicity, Consistency, Isolation, Durability but also investigating advanced topics like distributed or business transactions.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/endG3yvjNJI" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2008/05/episode-99-transactions/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">1</slash:comments><itunes:subtitle>This episode takes a close look at transactions from different angles, starting with their fundamental properties of Atomicity, Consistency, Isolation, Durability but also investigating advanced topics like distributed or business transactions.</itunes:subtitle><itunes:summary>This episode takes a close look at transactions from different angles, starting with their fundamental properties of Atomicity, Consistency, Isolation, Durability but also investigating advanced topics like distributed or business transactions.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>1:01:11</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/Y6_HnFDQWog/seradio-episode99-transactions.mp3" fileSize="58740709" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2008/05/episode-99-transactions/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/Y6_HnFDQWog/seradio-episode99-transactions.mp3" length="58740709" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode99-transactions.mp3</feedburner:origEnclosureLink></item><item><title>Episode 98: Stefan Tilkov on REST</title><link>http://feedproxy.google.com/~r/se-radio/~3/R2SQXK4MTkU/</link><category>Episodes</category><category>rest</category><category>soa</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Thu, 22 May 2008 23:55:49 PDT</pubDate><guid isPermaLink="false"></guid><description>In this episode we discuss REST (Representational State Transfer) with &lt;a href="http://www.innoq.com/blog/st/"&gt;Stefan Tilkov&lt;/a&gt;. We started out by discussing the 5 steps to REST: IDs, links, Standard Methods, multiple representations and stateless communication. We then looked at how to use HTTP for REST, and discussed about how to use it for Web Services. We then we discussed whether and how to use REST for enterprise applications, and not just for apps on the internet. We concluded the discussion with a couple of recommendations.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/R2SQXK4MTkU" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2008/05/episode-98-stefan-tilkov-on-rest/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">15</slash:comments><itunes:subtitle>In this episode we discuss REST (Representational State Transfer) with Stefan Tilkov. We started out by discussing the 5 steps to REST: IDs, links, Standard Methods, multiple representations and stateless communication.</itunes:subtitle><itunes:summary>In this episode we discuss REST (Representational State Transfer) with Stefan Tilkov. We started out by discussing the 5 steps to REST: IDs, links, Standard Methods, multiple representations and stateless communication. We then looked at how to use HTTP for REST, and discussed about how to use it for Web Services. We then we discussed whether and how to use REST for enterprise applications, and not just for apps on the internet. We concluded the discussion with a couple of recommendations.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>55:53</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/Ia7DYdBheXk/seradio-episode98-stefanTilkovOnRest-fixed.mp3" fileSize="53642879" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2008/05/episode-98-stefan-tilkov-on-rest/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/Ia7DYdBheXk/seradio-episode98-stefanTilkovOnRest-fixed.mp3" length="53642879" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode98-stefanTilkovOnRest-fixed.mp3</feedburner:origEnclosureLink></item><item><title>Episode 97: Interview Anders Hejlsberg</title><link>http://feedproxy.google.com/~r/se-radio/~3/FxQQnP8ya2M/</link><category>Episodes</category><category>.net</category><category>c#</category><category>languages</category><category>pascal</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Fri, 16 May 2008 12:41:56 PDT</pubDate><guid isPermaLink="false"></guid><description>In this episode we have the pleasure of talking to &lt;a href="http://en.wikipedia.org/wiki/Anders_Hejlsberg"&gt;Anders Hejlsberg&lt;/a&gt;, Chief Language Strategist at Microsoft. We started by discussing his more distant past, namely, his involvement with Turbo Pascal and Borland's Delphi. We then looked at the influences Delphi had on C# and how C# evolved from Delphi. In the next section we discussed a couple of general language design issues, among them components and checked vs. unchecked exceptions. Next, we discussed interesting issues about languages of the future, static vs. dynamic typing, functional programming, meta programming as well as the importance of good support for concurrency. We concluded the discussion by looking at the interplay between languages and IDEs.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/FxQQnP8ya2M" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2008/05/episode-97-interview-anders-hejlsberg/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">8</slash:comments><itunes:subtitle>In this episode we have the pleasure of talking to Anders Hejlsberg, Chief Language Strategist at Microsoft. We started by discussing his more distant past, namely, his involvement with Turbo Pascal and Borland's Delphi.</itunes:subtitle><itunes:summary>In this episode we have the pleasure of talking to Anders Hejlsberg, Chief Language Strategist at Microsoft. We started by discussing his more distant past, namely, his involvement with Turbo Pascal and Borland's Delphi. We then looked at the influences Delphi had on C# and how C# evolved from Delphi. In the next section we discussed a couple of general language design issues, among them components and checked vs. unchecked exceptions. Next, we discussed interesting issues about languages of the future, static vs. dynamic typing, functional programming, meta programming as well as the importance of good support for concurrency. We concluded the discussion by looking at the interplay between languages and IDEs.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>48:00</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/JcP-IPEeQvo/seradio-episode97-interviewAndersHejlsberg-fixed.mp3" fileSize="46084976" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2008/05/episode-97-interview-anders-hejlsberg/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/JcP-IPEeQvo/seradio-episode97-interviewAndersHejlsberg-fixed.mp3" length="46084976" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode97-interviewAndersHejlsberg-fixed.mp3</feedburner:origEnclosureLink></item><item><title>Episode 96: Interview Krzysztof Czarnecki</title><link>http://feedproxy.google.com/~r/se-radio/~3/bO3sMk8ALmg/</link><category>Episodes</category><category>dsls</category><category>generative programming</category><category>modeling</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Thu, 08 May 2008 12:14:02 PDT</pubDate><guid isPermaLink="false"></guid><description>This episode is the long-awaited (and much requested) interview with &lt;a href="http://swen.uwaterloo.ca/~kczarnec/"&gt;Krzysztof Czarnecki&lt;/a&gt;, the author, together with Ulrich Eisenecker, of the book  &lt;a href="http://www.amazon.com/Generative-Programming-Methods-Tools-Applications/dp/0201309777"&gt;Generative Programming&lt;/a&gt;.

In the interview we discussed the state of generative programming today and related it to model-driven development and DSLs. We then talked a little bit about product lines in general. We then discussed his current field of research, which currently focusses on framework-specific modeling languages and non-trivial roundtrip engineering.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/bO3sMk8ALmg" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2008/05/episode-96-interview-krzysztof-czarnecki/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">2</slash:comments><itunes:subtitle>This episode is the long-awaited (and much requested) interview with Krzysztof Czarnecki, the author, together with Ulrich Eisenecker, of the book  Generative Programming. - In the interview we discussed the state of generative programming today and r...</itunes:subtitle><itunes:summary>This episode is the long-awaited (and much requested) interview with Krzysztof Czarnecki, the author, together with Ulrich Eisenecker, of the book  Generative Programming.

In the interview we discussed the state of generative programming today and related it to model-driven development and DSLs. We then talked a little bit about product lines in general. We then discussed his current field of research, which currently focusses on framework-specific modeling languages and non-trivial roundtrip engineering.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>33:02</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/Qz1trj_G9Wo/seradio-episode96-interviewKrzysztofCzarnecki.mp3" fileSize="31707200" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2008/05/episode-96-interview-krzysztof-czarnecki/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/Qz1trj_G9Wo/seradio-episode96-interviewKrzysztofCzarnecki.mp3" length="31707200" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode96-interviewKrzysztofCzarnecki.mp3</feedburner:origEnclosureLink></item><item><title>Episode 95: The New Guardian.co.uk website with Matt Wall and Erik DoernenBurg</title><link>http://feedproxy.google.com/~r/se-radio/~3/-LVE6tt-y5k/</link><category>Episodes</category><category>architecture</category><category>domain-driven design</category><category>web apps</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Thu, 01 May 2008 06:49:52 PDT</pubDate><guid isPermaLink="false"></guid><description>In this episode we talk to Matthew Wall (Guardian News and Media) and &lt;a href="http://www.doernenburg.com/"&gt;Erik Doernenburg&lt;/a&gt; (&lt;a href="www.thoughtworks.com"&gt;Thoughtworks&lt;/a&gt;) about their work on the new &lt;a href="http://www.guardian.co.uk/"&gt;guardian.co.uk&lt;/a&gt; website. We discuss the challenge of scalability and interactivity, their use of &lt;a href="http://www.domaindrivendesign.org/"&gt;Domain Driven Design&lt;/a&gt;, some of the technical building blocks as well as the approaches they use for performance measuring and scalability tuning.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/-LVE6tt-y5k" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2008/05/episode-95-the-new-guardian-co-uk-website-with-matt-wall-and-erik-doernenburg/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">12</slash:comments><itunes:subtitle>In this episode we talk to Matthew Wall (Guardian News and Media) and Erik Doernenburg (Thoughtworks) about their work on the new guardian.co.uk website. We discuss the challenge of scalability and interactivity, their use of Domain Driven Design,</itunes:subtitle><itunes:summary>In this episode we talk to Matthew Wall (Guardian News and Media) and Erik Doernenburg (Thoughtworks) about their work on the new guardian.co.uk website. We discuss the challenge of scalability and interactivity, their use of Domain Driven Design, some of the technical building blocks as well as the approaches they use for performance measuring and scalability tuning.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>44:13</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/AKsMBw7hGoA/seradio-episode95-theNewGuardianWithWallAndDoernenburg.mp3" fileSize="42446330" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2008/05/episode-95-the-new-guardian-co-uk-website-with-matt-wall-and-erik-doernenburg/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/AKsMBw7hGoA/seradio-episode95-theNewGuardianWithWallAndDoernenburg.mp3" length="42446330" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode95-theNewGuardianWithWallAndDoernenburg.mp3</feedburner:origEnclosureLink></item><item><title>Episode 94: Open Source Business Models with Dirk Riehle</title><link>http://feedproxy.google.com/~r/se-radio/~3/RKUOU6DZPNY/</link><category>Episodes</category><category>business</category><category>open source</category><category>Technology/Guest</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Wed, 23 Apr 2008 13:56:12 PDT</pubDate><guid isPermaLink="false"></guid><description>In this episode we're talking to &lt;a href="http://www.riehle.org"&gt;Dirk Riehle&lt;/a&gt; about open source business models. We started looking at the way OS projects work and defined different kinds of open source projects. In the main part of the discussion we looked at various ways of how to make money with open source: consulting, support contracts, commercial variant of an open source project, etc. We then looked at the chances and risks of each of these approaches. The next part focused on different open source licenses and how they are suitable for open source business. We concluded the episode by discussing a couple of specific questions and loose ends. 

After the show, Dirk informed me about the following three corrections: Black Duck Software's main product is called &lt;i&gt;protexIP&lt;/i&gt; not &lt;i&gt;IP Central&lt;/i&gt;, there are presently 70 licenses approved by the &lt;a href="http://www.opensource.org"&gt;Open Source Initiative&lt;/a&gt;, and EnterpriseDB has so far acquired $37M in venture capital&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/RKUOU6DZPNY" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2008/04/episode-94-open-source-business-models-with-dirk-riehle/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">1</slash:comments><itunes:subtitle>In this episode we're talking to Dirk Riehle about open source business models. We started looking at the way OS projects work and defined different kinds of open source projects. In the main part of the discussion we looked at various ways of how to m...</itunes:subtitle><itunes:summary>In this episode we're talking to Dirk Riehle about open source business models. We started looking at the way OS projects work and defined different kinds of open source projects. In the main part of the discussion we looked at various ways of how to make money with open source: consulting, support contracts, commercial variant of an open source project, etc. We then looked at the chances and risks of each of these approaches. The next part focused on different open source licenses and how they are suitable for open source business. We concluded the episode by discussing a couple of specific questions and loose ends. 

After the show, Dirk informed me about the following three corrections: Black Duck Software's main product is called protexIP not IP Central, there are presently 70 licenses approved by the Open Source Initiative, and EnterpriseDB has so far acquired $37M in venture capital</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>1:03:48</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/qHdSFZEHRkc/seradio-episode94-osBusinessModelsWithDirkRiehle.mp3" fileSize="61251915" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2008/04/episode-94-open-source-business-models-with-dirk-riehle/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/qHdSFZEHRkc/seradio-episode94-osBusinessModelsWithDirkRiehle.mp3" length="61251915" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode94-osBusinessModelsWithDirkRiehle.mp3</feedburner:origEnclosureLink></item><item><title>Episode 93: Lessons Learned From Architecture Reviews with Rebecca Wirfs-Brock</title><link>http://feedproxy.google.com/~r/se-radio/~3/SSI11qmHuAQ/</link><category>Episodes</category><category>agile</category><category>architecture review</category><category>Technology/Guest</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Tue, 15 Apr 2008 05:38:12 PDT</pubDate><guid isPermaLink="false"></guid><description>In this episode, Markus talks to &lt;a href="http://www.wirfs-brock.com"&gt;Rebecca Wirfs-Brock&lt;/a&gt; on what she has learned from architecture reviews. This is a very complement to the earlier episode on &lt;a href="http://se-radio.net/podcast/2007-03/episode-48-interview-dragos-manolescua"&gt;architecture evaluation&lt;/a&gt;.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/SSI11qmHuAQ" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2008/04/episode-93-lessons-learned-from-architecture-reviews-with-rebecca-wirfs-brock/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><itunes:subtitle>In this episode, Markus talks to Rebecca Wirfs-Brock on what she has learned from architecture reviews. This is a very complement to the earlier episode on architecture evaluation.</itunes:subtitle><itunes:summary>In this episode, Markus talks to Rebecca Wirfs-Brock on what she has learned from architecture reviews. This is a very complement to the earlier episode on architecture evaluation.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>52:06</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/-JAOStAoMZ4/seradio-episode93-architectureReviewsWithRebeccaWirfsBrock.mp3" fileSize="50012090" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2008/04/episode-93-lessons-learned-from-architecture-reviews-with-rebecca-wirfs-brock/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/-JAOStAoMZ4/seradio-episode93-architectureReviewsWithRebeccaWirfsBrock.mp3" length="50012090" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode93-architectureReviewsWithRebeccaWirfsBrock.mp3</feedburner:origEnclosureLink></item><item><title>Episode 92: Introduction to Game Development</title><link>http://feedproxy.google.com/~r/se-radio/~3/6e44yOjPNDQ/</link><category>Episodes</category><category>games</category><category>Technology/Guest</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Mon, 07 Apr 2008 06:19:51 PDT</pubDate><guid isPermaLink="false"></guid><description>In this Episode, Arno talks with Oliver Jucknath about the art of writing computer games. A lot of myth is attached to this area of computing, and while a game technically is just another program, it is written in a different context than typical business applications.

This is true at the code level, where aggressive optimization is a focus throughout development. It also applies at the team level, where collaboration between specialists is pronounced. And the business context is different as well, which in turn influences the development effort as a whole.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/6e44yOjPNDQ" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2008/04/episode-92-introduction-to-game-development/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">7</slash:comments><itunes:subtitle>In this Episode, Arno talks with Oliver Jucknath about the art of writing computer games. A lot of myth is attached to this area of computing, and while a game technically is just another program, it is written in a different context than typical busin...</itunes:subtitle><itunes:summary>In this Episode, Arno talks with Oliver Jucknath about the art of writing computer games. A lot of myth is attached to this area of computing, and while a game technically is just another program, it is written in a different context than typical business applications.

This is true at the code level, where aggressive optimization is a focus throughout development. It also applies at the team level, where collaboration between specialists is pronounced. And the business context is different as well, which in turn influences the development effort as a whole.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>48:53</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/AsiwrXyVfFk/seradio-episode92-introductionToGameDevelopment.mp3" fileSize="46932156" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2008/04/episode-92-introduction-to-game-development/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/AsiwrXyVfFk/seradio-episode92-introductionToGameDevelopment.mp3" length="46932156" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode92-introductionToGameDevelopment.mp3</feedburner:origEnclosureLink></item><item><title>Episode 91: Kevlin Henney on C++</title><link>http://feedproxy.google.com/~r/se-radio/~3/osdh3olwf20/</link><category>Episodes</category><category>c++</category><category>languages</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Sat, 29 Mar 2008 22:15:55 PDT</pubDate><guid isPermaLink="false"></guid><description>In this episode, we talk with Kevlin Henney about the C++ programming language. We look at the history and the culture of the language, and how it went through several phases in its evolution. We also take a look at some of the special language features of C++ and their overall influence.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/osdh3olwf20" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2008/03/episode-91-kevlin-henney-on-c/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">4</slash:comments><itunes:subtitle>In this episode, we talk with Kevlin Henney about the C++ programming language. We look at the history and the culture of the language, and how it went through several phases in its evolution. We also take a look at some of the special language feature...</itunes:subtitle><itunes:summary>In this episode, we talk with Kevlin Henney about the C++ programming language. We look at the history and the culture of the language, and how it went through several phases in its evolution. We also take a look at some of the special language features of C++ and their overall influence.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>1:04:19</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/jcqZNp9Fk2A/seradio-episode91-kevlinHenneyOnCpp.mp3" fileSize="61753389" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2008/03/episode-91-kevlin-henney-on-c/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/jcqZNp9Fk2A/seradio-episode91-kevlinHenneyOnCpp.mp3" length="61753389" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode91-kevlinHenneyOnCpp.mp3</feedburner:origEnclosureLink></item><item><title>Episode 90: Product Line Engineering, Pt. 3, with Charles Krueger</title><link>http://feedproxy.google.com/~r/se-radio/~3/LB-VF9sDhtA/</link><category>Episodes</category><category>architecture</category><category>product lines</category><category>Technology/Guest</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Sat, 22 Mar 2008 04:31:17 PDT</pubDate><guid isPermaLink="false"></guid><description>In this episode Charles Krueger, a well-known member of the product line engineering community, talks about his long term experiences in the field. Charles is also the founder and CEO of a company that provides tooling for variability management and product derivation. Besides some clarifications on terms like product line architecture and reference architecture, you also learn what kind of preconditions need to exist before product line engineering can be applied successfully.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/LB-VF9sDhtA" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2008/03/episode-90-product-line-engineering-pt-3-with-charles-krueger/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><itunes:subtitle>In this episode Charles Krueger, a well-known member of the product line engineering community, talks about his long term experiences in the field. Charles is also the founder and CEO of a company that provides tooling for variability management and pr...</itunes:subtitle><itunes:summary>In this episode Charles Krueger, a well-known member of the product line engineering community, talks about his long term experiences in the field. Charles is also the founder and CEO of a company that provides tooling for variability management and product derivation. Besides some clarifications on terms like product line architecture and reference architecture, you also learn what kind of preconditions need to exist before product line engineering can be applied successfully.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>36:56</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/eSR3MDTwrLQ/seradio-episode90-ProductLineEngineering_Pt3_CharlesKrueger.mp3" fileSize="35460015" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2008/03/episode-90-product-line-engineering-pt-3-with-charles-krueger/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/eSR3MDTwrLQ/seradio-episode90-ProductLineEngineering_Pt3_CharlesKrueger.mp3" length="35460015" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode90-ProductLineEngineering_Pt3_CharlesKrueger.mp3</feedburner:origEnclosureLink></item><item><title>Episode 89: Joe Armstrong on Erlang</title><link>http://feedproxy.google.com/~r/se-radio/~3/US128SRwaI4/</link><category>Episodes</category><category>actors</category><category>concurrency</category><category>languages</category><category>message passing</category><category>Technology/Guest</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Wed, 12 Mar 2008 03:53:21 PDT</pubDate><guid isPermaLink="false"></guid><description>In this Episode we're talking about &lt;a href="http://www.erlang.org/"&gt;Erlang&lt;/a&gt; with its creator &lt;a href="http://armstrongonsoftware.blogspot.com/"&gt;Joe Armstrong&lt;/a&gt;. We started by looking at the history of the Erlang language and why it is so relevant today.

We then looked at Joe's approach to Concurrency Oriented Programming and its main ingredients: share nothing, lightweight concurrency and pure message passing. We also compared this to the classic shared memory approach to concurrency. We then looked at other interesting aspects of Erlang, such as its functional nature (and why this is important to concurrency) and pattern matching.  Next we discussed how to implement distribution and fault tolerance, and we took a look at OTP, the "application server" for Erlang.

We concluded the conversation with a littel discussion about how Erlang was designed, it's current community as well as its future.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/US128SRwaI4" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2008/03/episode-89-joe-armstrong-on-erlang/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">14</slash:comments><itunes:subtitle>In this Episode we're talking about Erlang with its creator Joe Armstrong. We started by looking at the history of the Erlang language and why it is so relevant today. - We then looked at Joe's approach to Concurrency Oriented Programming and its main...</itunes:subtitle><itunes:summary>In this Episode we're talking about Erlang with its creator Joe Armstrong. We started by looking at the history of the Erlang language and why it is so relevant today.

We then looked at Joe's approach to Concurrency Oriented Programming and its main ingredients: share nothing, lightweight concurrency and pure message passing. We also compared this to the classic shared memory approach to concurrency. We then looked at other interesting aspects of Erlang, such as its functional nature (and why this is important to concurrency) and pattern matching.  Next we discussed how to implement distribution and fault tolerance, and we took a look at OTP, the "application server" for Erlang.

We concluded the conversation with a littel discussion about how Erlang was designed, it's current community as well as its future.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>53:20</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/hFgHKb4K3Lg/seradio-episode89-JoeArmstrongOnErlang.mp3" fileSize="51204566" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2008/03/episode-89-joe-armstrong-on-erlang/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/hFgHKb4K3Lg/seradio-episode89-JoeArmstrongOnErlang.mp3" length="51204566" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode89-JoeArmstrongOnErlang.mp3</feedburner:origEnclosureLink></item><item><title>Episode 88: The Singularity Research OS with Galen Hunt</title><link>http://feedproxy.google.com/~r/se-radio/~3/yThIe-zsLWs/</link><category>Episodes</category><category>components</category><category>operating system</category><category>Technology/Guest</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Sun, 02 Mar 2008 12:58:38 PST</pubDate><guid isPermaLink="false"></guid><description>In this episode we talk to &lt;a href="http://research.microsoft.com/~galenh/"&gt;Galen Hunt&lt;/a&gt; about the &lt;a href="http://research.microsoft.com/os/singularity/"&gt;Singularity&lt;/a&gt; research OS. Galen is the head of &lt;a href="http://research.microsoft.com/os/"&gt;Microsoft's OS Research Group&lt;/a&gt; and, together with a team of about 30 other researches, has built Singularity. 

We started our discussion by covering the basics of Singularity: why it was designed, what the goals of the project are as well as some of the architectural foundations of Singularity: software isolated processes, contract-based channels and manifest-based programs. In this context we also looked at the role of the Spec# and Sing# programming languages and the role of static analysis tools to statically verify important properties of a singularity application.

We then looked a little bit more closely at the role of the kernel and how it is different from kernels in traditional OSes. 

In a second part of the discussion we looked at some of the experiments the group did based on the OS. These include compile-time reflection, using hardware protection domains, heterogenerous multiprocessing as well as the typed assembly language

We closed the conversation with a look at some of the performance characteristics of Singularity, compatibility with traditional operating systems and a brief look at how the findings from Singularity influence product development at Microsoft.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/yThIe-zsLWs" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2008/03/episode-88-the-singularity-research-os-with-galen-hunt/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">7</slash:comments><itunes:subtitle>In this episode we talk to Galen Hunt about the Singularity research OS. Galen is the head of Microsoft's OS Research Group and, together with a team of about 30 other researches, has built Singularity.  - </itunes:subtitle><itunes:summary>In this episode we talk to Galen Hunt about the Singularity research OS. Galen is the head of Microsoft's OS Research Group and, together with a team of about 30 other researches, has built Singularity. 

We started our discussion by covering the basics of Singularity: why it was designed, what the goals of the project are as well as some of the architectural foundations of Singularity: software isolated processes, contract-based channels and manifest-based programs. In this context we also looked at the role of the Spec# and Sing# programming languages and the role of static analysis tools to statically verify important properties of a singularity application.

We then looked a little bit more closely at the role of the kernel and how it is different from kernels in traditional OSes. 

In a second part of the discussion we looked at some of the experiments the group did based on the OS. These include compile-time reflection, using hardware protection domains, heterogenerous multiprocessing as well as the typed assembly language

We closed the conversation with a look at some of the performance characteristics of Singularity, compatibility with traditional operating systems and a brief look at how the findings from Singularity influence product development at Microsoft.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>46:36</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/s3mRswl8DKs/seradio-episode88-singularityWithGalenHunt.mp3" fileSize="44733730" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2008/03/episode-88-the-singularity-research-os-with-galen-hunt/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/s3mRswl8DKs/seradio-episode88-singularityWithGalenHunt.mp3" length="44733730" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode88-singularityWithGalenHunt.mp3</feedburner:origEnclosureLink></item><item><title>Episode 87: Software Components</title><link>http://feedproxy.google.com/~r/se-radio/~3/PBPvfR_F3WU/</link><category>Episodes</category><category>architecture</category><category>components</category><category>sca</category><category>Technology Talk</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Thu, 21 Feb 2008 12:06:22 PST</pubDate><guid isPermaLink="false"></guid><description>In this episode, Michael and Markus talk about software components. We first looked at a couple of attempts at defining what a component is. We then provided our own definition that will be used in the rest of the episode. We then looked at the promises of component-based development: why are components useful?

We then discussed some of the typical metadata components should specify to make them useful. We discussed to some extent typical variations in component models. The next topic was the separation of concerns between the component functionality and functionality provided by the component's execution environment (aka. container).
We then compared components with other (more or less) related technologies such as OO and SOA.

We concluded the episode with the notion of architecture as language, where you use a formal DSL to describe a system's architecture. Components are the basic building block for this approach.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/PBPvfR_F3WU" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2008/02/episode-87-software-components/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">10</slash:comments><itunes:subtitle>In this episode, Michael and Markus talk about software components. We first looked at a couple of attempts at defining what a component is. We then provided our own definition that will be used in the rest of the episode.</itunes:subtitle><itunes:summary>In this episode, Michael and Markus talk about software components. We first looked at a couple of attempts at defining what a component is. We then provided our own definition that will be used in the rest of the episode. We then looked at the promises of component-based development: why are components useful?

We then discussed some of the typical metadata components should specify to make them useful. We discussed to some extent typical variations in component models. The next topic was the separation of concerns between the component functionality and functionality provided by the component's execution environment (aka. container).
We then compared components with other (more or less) related technologies such as OO and SOA.

We concluded the episode with the notion of architecture as language, where you use a formal DSL to describe a system's architecture. Components are the basic building block for this approach.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>59:53</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/3H_gb7vJMm0/seradio-episode87-softwareComponents.mp3" fileSize="57489700" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2008/02/episode-87-software-components/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/3H_gb7vJMm0/seradio-episode87-softwareComponents.mp3" length="57489700" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode87-softwareComponents.mp3</feedburner:origEnclosureLink></item><item><title>Episode 86: Interview Dave Thomas</title><link>http://feedproxy.google.com/~r/se-radio/~3/qvj-Y8NBazY/</link><category>Episodes</category><category>agile</category><category>components</category><category>research</category><category>ruby</category><category>smalltalk</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Mon, 11 Feb 2008 04:04:34 PST</pubDate><guid isPermaLink="false"></guid><description>This episode is an interview with &lt;a href="http://www.davethomas.net"&gt;Dave Thomas&lt;/a&gt; (OTI Dave or Smalltalk Dave, not PragDave). We started our discussion with a look at the (non-)success of objects and components. We then discussed some history behine Eclipse and Dave's role in OTI. We then compared Smalltalk and Ruby and looked at the promises of small and powerful languages such as Lisp. We also discussed the role of (static) type systems and the role of tool support for languages.

We then switched gears and looked at what is necessary to scale agile development to the level of large organizations
and how techniques from lean production and manufacturing as well as product management can play an important role.

In the last part of the interview we looked at the state of research today, and especially the relationship between industry and academia in this area. 

We concluded the interview with Dave's opinion on what it takes to be a good developer.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/qvj-Y8NBazY" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2008/02/episode-86-interview-dave-thomas/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">9</slash:comments><itunes:subtitle>This episode is an interview with Dave Thomas (OTI Dave or Smalltalk Dave, not PragDave). We started our discussion with a look at the (non-)success of objects and components. We then discussed some history behine Eclipse and Dave's role in OTI.</itunes:subtitle><itunes:summary>This episode is an interview with Dave Thomas (OTI Dave or Smalltalk Dave, not PragDave). We started our discussion with a look at the (non-)success of objects and components. We then discussed some history behine Eclipse and Dave's role in OTI. We then compared Smalltalk and Ruby and looked at the promises of small and powerful languages such as Lisp. We also discussed the role of (static) type systems and the role of tool support for languages.

We then switched gears and looked at what is necessary to scale agile development to the level of large organizations
and how techniques from lean production and manufacturing as well as product management can play an important role.

In the last part of the interview we looked at the state of research today, and especially the relationship between industry and academia in this area. 

We concluded the interview with Dave's opinion on what it takes to be a good developer.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>40:11</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/snXK7bcNPPo/seradio-episode86-daveThomas.mp3" fileSize="38569086" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2008/02/episode-86-interview-dave-thomas/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/snXK7bcNPPo/seradio-episode86-daveThomas.mp3" length="38569086" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode86-daveThomas.mp3</feedburner:origEnclosureLink></item><item><title>Episode 85: Web Services with Olaf Zimmermann</title><link>http://feedproxy.google.com/~r/se-radio/~3/rJXku3jPSz0/</link><category>Episodes</category><category>enterprise architecture</category><category>middleware</category><category>web services</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Fri, 01 Feb 2008 12:45:36 PST</pubDate><guid isPermaLink="false"></guid><description>In this Episode we're talking about Web Services with IBM's &lt;a href="http://www.zurich.ibm.com/~olz"&gt;Olaf Zimmermann&lt;/a&gt;. We mainly focus on the WS-* stack. We also discuss a couple of SOA foundations and architectural decisions that need to be taken when building an SOA using Web Serivces. We also briefly mention the REST vs. WS-* debate.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/rJXku3jPSz0" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2008/02/episode-85-web-services-with-olaf-zimmermann/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">7</slash:comments><itunes:subtitle>In this Episode we're talking about Web Services with IBM's Olaf Zimmermann. We mainly focus on the WS-* stack. We also discuss a couple of SOA foundations and architectural decisions that need to be taken when building an SOA using Web Serivces.</itunes:subtitle><itunes:summary>In this Episode we're talking about Web Services with IBM's Olaf Zimmermann. We mainly focus on the WS-* stack. We also discuss a couple of SOA foundations and architectural decisions that need to be taken when building an SOA using Web Serivces. We also briefly mention the REST vs. WS-* debate.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>51:56</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/4GQ6oBsAj4E/seradio-episode85-olafZimmermannOnWebServices.mp3" fileSize="49853158" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2008/02/episode-85-web-services-with-olaf-zimmermann/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/4GQ6oBsAj4E/seradio-episode85-olafZimmermannOnWebServices.mp3" length="49853158" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode85-olafZimmermannOnWebServices.mp3</feedburner:origEnclosureLink></item><item><title>Episode 84: Dick Gabriel on Lisp</title><link>http://feedproxy.google.com/~r/se-radio/~3/pd-aHVhBTbI/</link><category>Episodes</category><category>artificial intelligence</category><category>functional programming</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Tue, 22 Jan 2008 09:50:43 PST</pubDate><guid isPermaLink="false"></guid><description>In this Episode we're talking with &lt;a href="http://www.dreamsongs.com/"&gt;Dick Gabriel&lt;/a&gt; on &lt;a href="http://en.wikipedia.org/wiki/Lisp_programming_language"&gt;Lisp&lt;/a&gt;. We started by looking at artificial intelligence as the historic context of Lisp, the goals AI tried to reach, and how Lisp was supposed to help reach those.
 
We then discussed the language itself, starting with the Data As Program / Program As Data concept that is a foundation for Lisp. Then we discussed adding a meta-circular interpreter, programming as language development, and the blurred boundary between language and frameworks (because everything uses the same syntax). We then talked about Lisp's type system and the importance of macros to extend the language.
 
The next section concerned CLOS, the Common Lisp Object System and its important concepts: generic functions, multimethods, mixins, and method combination. We also briefly looked at the meta-object protocol but agreed this is a topic for a separate episode. After a discussion about the various dialects of Lisp and Scheme, we concluded the Lisp discussion by explaining why Lisp did not really catch on ("AI Winter") and Lisp's role in today's industry.
 
We ended the episode with a couple of details about Dick's other life as a poet and his Poem a Day effort.
 
Make sure you listen till the end, where we have added a song about Lisp (courtesy of &lt;a href="http://www.prometheus-music.com/roundworm.html"&gt;Prometheus Music&lt;/a&gt;.)&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/pd-aHVhBTbI" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2008/01/episode-84-dick-gabriel-on-lisp/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">24</slash:comments><itunes:subtitle>In this Episode we're talking with Dick Gabriel on Lisp. We started by looking at artificial intelligence as the historic context of Lisp, the goals AI tried to reach, and how Lisp was supposed to help reach those.   </itunes:subtitle><itunes:summary>In this Episode we're talking with Dick Gabriel on Lisp. We started by looking at artificial intelligence as the historic context of Lisp, the goals AI tried to reach, and how Lisp was supposed to help reach those.
 
We then discussed the language itself, starting with the Data As Program / Program As Data concept that is a foundation for Lisp. Then we discussed adding a meta-circular interpreter, programming as language development, and the blurred boundary between language and frameworks (because everything uses the same syntax). We then talked about Lisp's type system and the importance of macros to extend the language.
 
The next section concerned CLOS, the Common Lisp Object System and its important concepts: generic functions, multimethods, mixins, and method combination. We also briefly looked at the meta-object protocol but agreed this is a topic for a separate episode. After a discussion about the various dialects of Lisp and Scheme, we concluded the Lisp discussion by explaining why Lisp did not really catch on ("AI Winter") and Lisp's role in today's industry.
 
We ended the episode with a couple of details about Dick's other life as a poet and his Poem a Day effort.
 
Make sure you listen till the end, where we have added a song about Lisp (courtesy of Prometheus Music.)</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>1:00:08</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/mm9oMfrO9gM/seradio-episode84-dickGabrielOnLisp.mp3" fileSize="57722065" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2008/01/episode-84-dick-gabriel-on-lisp/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/mm9oMfrO9gM/seradio-episode84-dickGabrielOnLisp.mp3" length="57722065" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode84-dickGabrielOnLisp.mp3</feedburner:origEnclosureLink></item><item><title>Episode 83: Jeff DeLuca on Feature Driven Development</title><link>http://feedproxy.google.com/~r/se-radio/~3/Rn2T-adYTro/</link><category>Episodes</category><category>agile</category><category>feature-driven development</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Sat, 12 Jan 2008 12:58:04 PST</pubDate><guid isPermaLink="false"></guid><description>In this episode we talk with Jeff DeLuca about Feature Driven Development (FDD). As one member of the agile methods family FDD is not so famous as Scrum or Extreme Programming but is becoming more and more popular, especially for situations where you have fixed price contracts. As the inventor of FDD Jeff gives short introduction to the method itself, talks about the basic ideas behind FDD and discusses with us how FDD relates to other members of the agile family.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/Rn2T-adYTro" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2008/01/episode-83-jeff-deluca-on-feature-driven-development/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">6</slash:comments><itunes:subtitle>In this episode we talk with Jeff DeLuca about Feature Driven Development (FDD). As one member of the agile methods family FDD is not so famous as Scrum or Extreme Programming but is becoming more and more popular,</itunes:subtitle><itunes:summary>In this episode we talk with Jeff DeLuca about Feature Driven Development (FDD). As one member of the agile methods family FDD is not so famous as Scrum or Extreme Programming but is becoming more and more popular, especially for situations where you have fixed price contracts. As the inventor of FDD Jeff gives short introduction to the method itself, talks about the basic ideas behind FDD and discusses with us how FDD relates to other members of the agile family.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>39:51</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/aSJLC04RDiY/seradio-episode83-jeffDeLucaOnFeatureDrivenDevelopment.mp3" fileSize="38251752" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2008/01/episode-83-jeff-deluca-on-feature-driven-development/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/aSJLC04RDiY/seradio-episode83-jeffDeLucaOnFeatureDrivenDevelopment.mp3" length="38251752" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode83-jeffDeLucaOnFeatureDrivenDevelopment.mp3</feedburner:origEnclosureLink></item><item><title>Episode 82: Organization of Large Code Bases with Juergen Hoeller</title><link>http://feedproxy.google.com/~r/se-radio/~3/a77Os--cyXM/</link><category>Episodes</category><category>java</category><category>large codebases</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Wed, 02 Jan 2008 09:02:27 PST</pubDate><guid isPermaLink="false"></guid><description>In this episode Eberhard Wolff speaks with Jürgen Höller, the co-found of the Spring framework. Spring is a tremendously successful Java framework so they discuss the design of large frameworks and the issues that arise in the evolution. 
Jürgen explains the management of dependencies in the framework, how to structure such a framework, how to offer compatibility for the existing user base while evolving the framework and the role of metrics during development.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/a77Os--cyXM" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2008/01/episode-82-organization-of-large-code-bases-with-juergen-hoeller/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">6</slash:comments><itunes:subtitle>In this episode Eberhard Wolff speaks with Jürgen Höller, the co-found of the Spring framework. Spring is a tremendously successful Java framework so they discuss the design of large frameworks and the issues that arise in the evolution.  </itunes:subtitle><itunes:summary>In this episode Eberhard Wolff speaks with Jürgen Höller, the co-found of the Spring framework. Spring is a tremendously successful Java framework so they discuss the design of large frameworks and the issues that arise in the evolution. 
Jürgen explains the management of dependencies in the framework, how to structure such a framework, how to offer compatibility for the existing user base while evolving the framework and the role of metrics during development.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>50:56</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/HPsTSxPib3g/seradio-episode82-largeCodebasesWithJuergenHoeller.mp3" fileSize="48902606" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2008/01/episode-82-organization-of-large-code-bases-with-juergen-hoeller/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/HPsTSxPib3g/seradio-episode82-largeCodebasesWithJuergenHoeller.mp3" length="48902606" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode82-largeCodebasesWithJuergenHoeller.mp3</feedburner:origEnclosureLink></item><item><title>Episode 81: Interview Erich Gamma</title><link>http://feedproxy.google.com/~r/se-radio/~3/mdS9Qq0jzBc/</link><category>Episodes</category><category>eclipse</category><category>Interview</category><category>jazz</category><category>junit</category><category>patterns</category><category>testing</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Sun, 23 Dec 2007 10:37:22 PST</pubDate><guid isPermaLink="false"></guid><description>This episode is a conversation with &lt;a href="http://en.wikipedia.org/wiki/Erich_Gamma"&gt;Erich Gamma&lt;/a&gt;. We covered the four things he is known for in chronological order. We started with design patterns and the Gang-of-Four book of which he is the lead author. We then looked at JUnit, the testing framework he coauthored with Kent Beck and how it introduced unit testing to the masses. The next topic is obviously Eclipse, where Erich and his lab in Zürich is responsible for the Java Development Tooling. We also briefly discussed The Eclipse Way, the (obviously) successful process the Eclipse team uses for developing Eclipse itself. Finally, we're looking at Erich's current endeavour, the Jazz project. Jazz is a technology for collaborative software development.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/mdS9Qq0jzBc" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2007/12/episode-81-interview-erich-gamma/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">4</slash:comments><itunes:subtitle>This episode is a conversation with Erich Gamma. We covered the four things he is known for in chronological order. We started with design patterns and the Gang-of-Four book of which he is the lead author. We then looked at JUnit,</itunes:subtitle><itunes:summary>This episode is a conversation with Erich Gamma. We covered the four things he is known for in chronological order. We started with design patterns and the Gang-of-Four book of which he is the lead author. We then looked at JUnit, the testing framework he coauthored with Kent Beck and how it introduced unit testing to the masses. The next topic is obviously Eclipse, where Erich and his lab in Zürich is responsible for the Java Development Tooling. We also briefly discussed The Eclipse Way, the (obviously) successful process the Eclipse team uses for developing Eclipse itself. Finally, we're looking at Erich's current endeavour, the Jazz project. Jazz is a technology for collaborative software development.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>41:52</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/rjR2u9RxuUY/seradio-episode81-erichGamma.mp3" fileSize="40185231" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2007/12/episode-81-interview-erich-gamma/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/rjR2u9RxuUY/seradio-episode81-erichGamma.mp3" length="40185231" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode81-erichGamma.mp3</feedburner:origEnclosureLink></item><item><title>Episode 80: OSGi with Peter Kriens and BJ Hargrave</title><link>http://feedproxy.google.com/~r/se-radio/~3/Y2UtJKC_E5M/</link><category>Episodes</category><category>components</category><category>dependency management</category><category>embedded systems</category><category>java</category><category>osgi</category><category>Technology/Guest</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Wed, 12 Dec 2007 23:03:15 PST</pubDate><guid isPermaLink="false"></guid><description>This episode is about &lt;a href="http://www.osgi.org/"&gt;OSGi&lt;/a&gt;, the dynamic module system for Java. Our guests are &lt;a href="http://www.aqute.biz/Main/HomePage"&gt;Peter Kriens&lt;/a&gt; (OSGI's Technical Director) and &lt;a href="http://blog.bjhargrave.com/"&gt;BJ Hargrave&lt;/a&gt; (OSGI's CTO). We'll discuss what OSGi is all about and why and in which contexts it is useful. Additionally we are having a look at the different layers of OSGI and where and how they are used. Other questions discussed are: What means dynamicity in an OSGI environment? Where is OSGI used? What’s the future of OSGI? How does OSGI interact with existing middleware solutions? How can I run several versions of the same JAR at the same time? Where are OSGI’s problems?&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/Y2UtJKC_E5M" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2007/12/episode-80-osgi-with-peter-kriens-and-bj-hargrave/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><itunes:subtitle>This episode is about OSGi, the dynamic module system for Java. Our guests are Peter Kriens (OSGI's Technical Director) and BJ Hargrave (OSGI's CTO). We'll discuss what OSGi is all about and why and in which contexts it is useful.</itunes:subtitle><itunes:summary>This episode is about OSGi, the dynamic module system for Java. Our guests are Peter Kriens (OSGI's Technical Director) and BJ Hargrave (OSGI's CTO). We'll discuss what OSGi is all about and why and in which contexts it is useful. Additionally we are having a look at the different layers of OSGI and where and how they are used. Other questions discussed are: What means dynamicity in an OSGI environment? Where is OSGI used? What’s the future of OSGI? How does OSGI interact with existing middleware solutions? How can I run several versions of the same JAR at the same time? Where are OSGI’s problems?</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>45:24</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/bzPOCejUbns/seradio-episode80-osgiWithKriensAndHardgrave.mp3" fileSize="43576134" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2007/12/episode-80-osgi-with-peter-kriens-and-bj-hargrave/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/bzPOCejUbns/seradio-episode80-osgiWithKriensAndHardgrave.mp3" length="43576134" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode80-osgiWithKriensAndHardgrave.mp3</feedburner:origEnclosureLink></item><item><title>Episode 79: Small Memory Software with Weir and Noble</title><link>http://feedproxy.google.com/~r/se-radio/~3/QYEFoBT_HDY/</link><category>Episodes</category><category>embedded systems</category><category>Interview</category><category>memory</category><category>patterns</category><category>resource management</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Mon, 03 Dec 2007 01:19:21 PST</pubDate><guid isPermaLink="false"></guid><description>In this Episode we're discussing patterns for small memory software with the authors of the like-named book &lt;a href="http://www.charlesweir.com/"&gt;Charles Weir&lt;/a&gt; and &lt;a href="http://www.mcs.vuw.ac.nz/people/James-Noble.shtml"&gt;James Noble&lt;/a&gt;. We look at various aspects of the small memory problem: How can you manage memory use across a whole system? What can you do when you have run out of primary storage? How can you fit a quart of data into a pint pot of memory? How can you reduce the memory needed for your data? How do you allocate memory to store your data structures? Answers to all those questions are provided in this Episode, and of course in their &lt;a href="http://www.smallmemory.com/"&gt;book&lt;/a&gt;.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/QYEFoBT_HDY" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2007/12/episode-79-small-memory-software-with-weir-and-noble/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">1</slash:comments><itunes:subtitle>In this Episode we're discussing patterns for small memory software with the authors of the like-named book Charles Weir and James Noble. We look at various aspects of the small memory problem: How can you manage memory use across a whole system?</itunes:subtitle><itunes:summary>In this Episode we're discussing patterns for small memory software with the authors of the like-named book Charles Weir and James Noble. We look at various aspects of the small memory problem: How can you manage memory use across a whole system? What can you do when you have run out of primary storage? How can you fit a quart of data into a pint pot of memory? How can you reduce the memory needed for your data? How do you allocate memory to store your data structures? Answers to all those questions are provided in this Episode, and of course in their book.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>1:00:05</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/Ty9Wkfg4yiU/seradio-episode79-smallMemoryWithWeirAndNoble.mp3" fileSize="57683510" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2007/12/episode-79-small-memory-software-with-weir-and-noble/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/Ty9Wkfg4yiU/seradio-episode79-smallMemoryWithWeirAndNoble.mp3" length="57683510" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode79-smallMemoryWithWeirAndNoble.mp3</feedburner:origEnclosureLink></item><item><title>Episode 78: Fault Tolerance with Bob Hanmer Pt. 2</title><link>http://feedproxy.google.com/~r/se-radio/~3/k-xMKXK8wmE/</link><category>Episodes</category><category>embedded systems</category><category>fault tolerance</category><category>Interview</category><category>patterns</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Fri, 23 Nov 2007 02:58:39 PST</pubDate><guid isPermaLink="false"></guid><description>This is the second part of the discussion on fault tolerance with Bob Hanmer (if you didn't listen to Episode 77, which contains part one, please go back and listen now; this episode builds on that previous one!)

We start by discussing a set of error detection patterns. Among are the well-known approaches such as checksums and voting. We then look at error recovery patterns, including restart, rollback or roll forward. The next section looks
at error mitigation patterns, which include shedding load and doing fresh work before stale. The last patterns section then looks at fault treatment patterns.

We conclude the episode with a small discussion about how to design systems using (these and other) patterns, and with some thoughts on why actually wrote the book.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/k-xMKXK8wmE" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2007/11/episode-78-fault-tolerance-with-bob-hanmer-pt-2/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">3</slash:comments><itunes:subtitle>This is the second part of the discussion on fault tolerance with Bob Hanmer (if you didn't listen to Episode 77, which contains part one, please go back and listen now; this episode builds on that previous one!) - </itunes:subtitle><itunes:summary>This is the second part of the discussion on fault tolerance with Bob Hanmer (if you didn't listen to Episode 77, which contains part one, please go back and listen now; this episode builds on that previous one!)

We start by discussing a set of error detection patterns. Among are the well-known approaches such as checksums and voting. We then look at error recovery patterns, including restart, rollback or roll forward. The next section looks
at error mitigation patterns, which include shedding load and doing fresh work before stale. The last patterns section then looks at fault treatment patterns.

We conclude the episode with a small discussion about how to design systems using (these and other) patterns, and with some thoughts on why actually wrote the book.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>45:46</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/Tk68ROTmKnk/seradio-episode78-faultToleranceWithBobHanmer_pt2.mp3" fileSize="43943132" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2007/11/episode-78-fault-tolerance-with-bob-hanmer-pt-2/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/Tk68ROTmKnk/seradio-episode78-faultToleranceWithBobHanmer_pt2.mp3" length="43943132" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode78-faultToleranceWithBobHanmer_pt2.mp3</feedburner:origEnclosureLink></item><item><title>Episode 77: Fault Tolerance with Bob Hanmer Pt. 1</title><link>http://feedproxy.google.com/~r/se-radio/~3/lOTyXC9xREE/</link><category>Episodes</category><category>embedded systems</category><category>fault tolerance</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Tue, 13 Nov 2007 11:08:32 PST</pubDate><guid isPermaLink="false"></guid><description>In this Episode we discuss fault tolerance based on the new book by Bob Hanmer. This is the actually the first part of the discussion, the remainder will be published in the next episode of SE Radio. 

We start by discussing some of the context for fault tolerant systems and the imperfect world assumption. We then discuss a number of terms we will need when discussing the fault tolerance patterns. We then discuss the fault tolerance mindset and connect fault tolerance to a number of related subject areas, such as software quality. We then discuss the shared context for the patterns that follow, among them the important observation that fault tolerance does not come for free!   

Finally we provide an overview over the different sections covered in the book and start the detailed discussion of the patterns by looking at the Architectural Patterns section.

The next episode will discuss the remaining patterns in the book.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/lOTyXC9xREE" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2007/11/episode-77-fault-tolerance-with-bob-hanmer-pt-1/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">3</slash:comments><itunes:subtitle>In this Episode we discuss fault tolerance based on the new book by Bob Hanmer. This is the actually the first part of the discussion, the remainder will be published in the next episode of SE Radio.  - We start by discussing some of the context for f...</itunes:subtitle><itunes:summary>In this Episode we discuss fault tolerance based on the new book by Bob Hanmer. This is the actually the first part of the discussion, the remainder will be published in the next episode of SE Radio. 

We start by discussing some of the context for fault tolerant systems and the imperfect world assumption. We then discuss a number of terms we will need when discussing the fault tolerance patterns. We then discuss the fault tolerance mindset and connect fault tolerance to a number of related subject areas, such as software quality. We then discuss the shared context for the patterns that follow, among them the important observation that fault tolerance does not come for free!   

Finally we provide an overview over the different sections covered in the book and start the detailed discussion of the patterns by looking at the Architectural Patterns section.

The next episode will discuss the remaining patterns in the book.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>45:47</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/6EKkXN5twno/seradio-episode77-faultToleranceWithBobHanmer_pt1.mp3" fileSize="43955223" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2007/11/episode-77-fault-tolerance-with-bob-hanmer-pt-1/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/6EKkXN5twno/seradio-episode77-faultToleranceWithBobHanmer_pt1.mp3" length="43955223" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode77-faultToleranceWithBobHanmer_pt1.mp3</feedburner:origEnclosureLink></item><item><title>Episode 76: Special Episode on the Patterns Journal</title><link>http://feedproxy.google.com/~r/se-radio/~3/O83-5UpZqFs/</link><category>Episodes</category><category>Interview</category><category>patterns</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Fri, 09 Nov 2007 11:17:13 PST</pubDate><guid isPermaLink="false"></guid><description>In this special Episode we briefly discuss the upcoming &lt;a href="http://hillside.net/tplop"&gt;Patterns Journal&lt;/a&gt; with the two editors, Ralph Johnson and James Noble.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/O83-5UpZqFs" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2007/11/episode-76-special-episode-on-the-patterns-journal/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">1</slash:comments><itunes:subtitle>In this special Episode we briefly discuss the upcoming Patterns Journal with the two editors, Ralph Johnson and James Noble.</itunes:subtitle><itunes:summary>In this special Episode we briefly discuss the upcoming Patterns Journal with the two editors, Ralph Johnson and James Noble.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>15:31</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/_6oYuB07zeQ/seradio-episode76-thePatternsJournal.mp3" fileSize="14902093" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2007/11/episode-76-special-episode-on-the-patterns-journal/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/_6oYuB07zeQ/seradio-episode76-thePatternsJournal.mp3" length="14902093" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode76-thePatternsJournal.mp3</feedburner:origEnclosureLink></item><item><title>Episode 75: The New Website</title><link>http://feedproxy.google.com/~r/se-radio/~3/8KeIZD2hVkM/</link><category>Episodes</category><category>News</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Sun, 04 Nov 2007 07:18:50 PST</pubDate><guid isPermaLink="false"></guid><description>In this special Episode we briefly discuss our new website. We will migrate to our new website during the coming week. If you experience any difficulties, &lt;a href="mailto:team@se-radio.net"&gt;contact the team&lt;/a&gt; or temporarily go to the old site at &lt;a href="http://seradio.libsyn.com"&gt;seradio.libsyn.com&lt;/a&gt;.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/8KeIZD2hVkM" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2007/11/episode-75-the-new-website/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">11</slash:comments><itunes:subtitle>In this special Episode we briefly discuss our new website. We will migrate to our new website during the coming week. If you experience any difficulties, contact the team or temporarily go to the old site at seradio.libsyn.com.</itunes:subtitle><itunes:summary>In this special Episode we briefly discuss our new website. We will migrate to our new website during the coming week. If you experience any difficulties, contact the team or temporarily go to the old site at seradio.libsyn.com.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>7:33</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/SbdIOmyyMLE/seradio-episode75-theNewWebsite.mp3" fileSize="7255063" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2007/11/episode-75-the-new-website/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/SbdIOmyyMLE/seradio-episode75-theNewWebsite.mp3" length="7255063" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode75-theNewWebsite.mp3</feedburner:origEnclosureLink></item><item><title>Episode 74: Enterprise Architecture II</title><link>http://feedproxy.google.com/~r/se-radio/~3/Bj5IFP6P4PY/</link><category>Episodes</category><category>architecture</category><category>enterprise architecture</category><category>Technology/Guest</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Sat, 03 Nov 2007 04:35:09 PDT</pubDate><guid isPermaLink="false"></guid><description>Enterprise Architecture is already common practice in most Fortune 100 companies. As the topic is comparably young, knowledge about it is not so widespread in the Software Architects Community, who deals mostly with project architectures. In this episode Alex speaks with Wolfgang Keller who has practical experience as an enterprise architect and has written a book on the topic. He is a Partner with BusinessGlue Consulting. They are specializing in the relationship between EAM and SOA. This episode gives a rough overview what Enterprise Architecture actually is touches the standards in the field and also gives hints on the practical work of Enterprise Architects.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/Bj5IFP6P4PY" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2007/11/episode-74-enterprise-architecture-ii/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">1</slash:comments><itunes:subtitle>Enterprise Architecture is already common practice in most Fortune 100 companies. As the topic is comparably young, knowledge about it is not so widespread in the Software Architects Community, who deals mostly with project architectures.</itunes:subtitle><itunes:summary>Enterprise Architecture is already common practice in most Fortune 100 companies. As the topic is comparably young, knowledge about it is not so widespread in the Software Architects Community, who deals mostly with project architectures. In this episode Alex speaks with Wolfgang Keller who has practical experience as an enterprise architect and has written a book on the topic. He is a Partner with BusinessGlue Consulting. They are specializing in the relationship between EAM and SOA. This episode gives a rough overview what Enterprise Architecture actually is touches the standards in the field and also gives hints on the practical work of Enterprise Architects.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>45:13</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/Y_xDqzKelk0/seradio-episode74-enterpriseArchitecture_II_withWolfgangKeller.mp3" fileSize="43411040" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2007/11/episode-74-enterprise-architecture-ii/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/Y_xDqzKelk0/seradio-episode74-enterpriseArchitecture_II_withWolfgangKeller.mp3" length="43411040" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode74-enterpriseArchitecture_II_withWolfgangKeller.mp3</feedburner:origEnclosureLink></item><item><title>Episode 73: Real Time Systems with Bruce Powel Douglass</title><link>http://feedproxy.google.com/~r/se-radio/~3/zhq6Vmj8XTI/</link><category>Episodes</category><category>embedded systems</category><category>Interview</category><category>real time</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Wed, 24 Oct 2007 11:23:17 PDT</pubDate><guid isPermaLink="false"></guid><description>This episode is a conversation with Bruce Powel Douglass on real time systems. We started by discussing what real time software is, and explored the difference between hard and soft real time. We then looked at different scheduling strategies, and the meaning of terms like urgency and importance in the context of scheduling. Next was a discussion of typical architectural styles for real time systems and how architectures are described in this context. This led us to a discussion about the importance of modeling, formalisms and languages as well as the role of automatic code generation from those models. We then looked at how to model QoS aspects and the role of SysML for modeling real time systems. We then had a brief look at which programming languages are used these days for real time systems and the role of static analysis to determine various properties of those programs in advance. The last part of the discussion focused on some best practices for building real time systems, the challenges in distributed real time systems and how real time systems can be tested effectively.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/zhq6Vmj8XTI" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2007/10/episode-73-real-time-systems-with-bruce-powel-douglass/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><itunes:subtitle>This episode is a conversation with Bruce Powel Douglass on real time systems. We started by discussing what real time software is, and explored the difference between hard and soft real time. We then looked at different scheduling strategies,</itunes:subtitle><itunes:summary>This episode is a conversation with Bruce Powel Douglass on real time systems. We started by discussing what real time software is, and explored the difference between hard and soft real time. We then looked at different scheduling strategies, and the meaning of terms like urgency and importance in the context of scheduling. Next was a discussion of typical architectural styles for real time systems and how architectures are described in this context. This led us to a discussion about the importance of modeling, formalisms and languages as well as the role of automatic code generation from those models. We then looked at how to model QoS aspects and the role of SysML for modeling real time systems. We then had a brief look at which programming languages are used these days for real time systems and the role of static analysis to determine various properties of those programs in advance. The last part of the discussion focused on some best practices for building real time systems, the challenges in distributed real time systems and how real time systems can be tested effectively.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>1:00:16</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/XwyWs0z_zRs/seradio-episode73-realtimeSystemsWithBrucePowelDouglass.mp3" fileSize="57858217" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2007/10/episode-73-real-time-systems-with-bruce-powel-douglass/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/XwyWs0z_zRs/seradio-episode73-realtimeSystemsWithBrucePowelDouglass.mp3" length="57858217" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode73-realtimeSystemsWithBrucePowelDouglass.mp3</feedburner:origEnclosureLink></item><item><title>Episode 72: Erik Meijer on LINQ</title><link>http://feedproxy.google.com/~r/se-radio/~3/ZdCZo0d22S8/</link><category>Episodes</category><category>.net</category><category>c#</category><category>data access</category><category>Interview</category><category>languages</category><category>linq</category><category>persistence</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Wed, 17 Oct 2007 11:13:04 PDT</pubDate><guid isPermaLink="false"></guid><description>This episode is a discussion with Erik Meijer on LINQ. This is a relatively technical discussion about the following topics: what is LINQ, what are the common abstractions between the different data structures one can access with LINQ, what is the relationship to established languages for querying, how does the integration into the type system of the host language work, how to specify the mapping between the language level classes and the data, and how optimizations are implemented (lazy loading, prefetching, etc.).&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/ZdCZo0d22S8" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2007/10/episode-72-erik-meijer-on-linq/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">1</slash:comments><itunes:subtitle>This episode is a discussion with Erik Meijer on LINQ. This is a relatively technical discussion about the following topics: what is LINQ, what are the common abstractions between the different data structures one can access with LINQ,</itunes:subtitle><itunes:summary>This episode is a discussion with Erik Meijer on LINQ. This is a relatively technical discussion about the following topics: what is LINQ, what are the common abstractions between the different data structures one can access with LINQ, what is the relationship to established languages for querying, how does the integration into the type system of the host language work, how to specify the mapping between the language level classes and the data, and how optimizations are implemented (lazy loading, prefetching, etc.).</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>52:51</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/z8KCiG-YhTg/seradio-episode72-ericMeijerOnLINQ.mp3" fileSize="50737865" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2007/10/episode-72-erik-meijer-on-linq/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/z8KCiG-YhTg/seradio-episode72-ericMeijerOnLINQ.mp3" length="50737865" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode72-ericMeijerOnLINQ.mp3</feedburner:origEnclosureLink></item><item><title>Episode 71: Survey Results</title><link>http://feedproxy.google.com/~r/se-radio/~3/s1zHP1fkTFc/</link><category>Episodes</category><category>News</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Sat, 13 Oct 2007 11:09:47 PDT</pubDate><guid isPermaLink="false"></guid><description>In this Episode I talk about the results of the listener survey and reply to some of the suggestions and criticism expressed in survey replies.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/s1zHP1fkTFc" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2007/10/episode-71-survey-results/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">3</slash:comments><itunes:subtitle>In this Episode I talk about the results of the listener survey and reply to some of the suggestions and criticism expressed in survey replies.</itunes:subtitle><itunes:summary>In this Episode I talk about the results of the listener survey and reply to some of the suggestions and criticism expressed in survey replies.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>32:25</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/Y-r4cGxTQBs/seradio-episode71-surveyResults.mp3" fileSize="31120161" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2007/10/episode-71-survey-results/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/Y-r4cGxTQBs/seradio-episode71-surveyResults.mp3" length="31120161" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode71-surveyResults.mp3</feedburner:origEnclosureLink></item><item><title>Episode 70: Gerard Meszaros on XUnit Test Patterns</title><link>http://feedproxy.google.com/~r/se-radio/~3/0BCCe-k0ueU/</link><category>Episodes</category><category>Interview</category><category>junit</category><category>patterns</category><category>testing</category><category>xunit</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Thu, 04 Oct 2007 10:59:45 PDT</pubDate><guid isPermaLink="false"></guid><description>In this episode we talk with Gerard Meszaros about problems and challenges doing unit testing in real-world projects. Starting from a short discussion about the importance of automated unit testing we spend most of this episode to talk about every day problems doing unit testing and how those problems can be solved. Based on this book on xunit testing patterns, Gerard talks about his experiences with unit test smells as an analogy to code smells. He describes an impressive set of unit testing patterns to overcome those difficult testing situations and illustrates them with nice examples everybody doing unit testing will feel familiar with.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/0BCCe-k0ueU" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2007/10/episode-70-gerard-meszaros-on-xunit-test-patterns/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">1</slash:comments><itunes:subtitle>In this episode we talk with Gerard Meszaros about problems and challenges doing unit testing in real-world projects. Starting from a short discussion about the importance of automated unit testing we spend most of this episode to talk about every day ...</itunes:subtitle><itunes:summary>In this episode we talk with Gerard Meszaros about problems and challenges doing unit testing in real-world projects. Starting from a short discussion about the importance of automated unit testing we spend most of this episode to talk about every day problems doing unit testing and how those problems can be solved. Based on this book on xunit testing patterns, Gerard talks about his experiences with unit test smells as an analogy to code smells. He describes an impressive set of unit testing patterns to overcome those difficult testing situations and illustrates them with nice examples everybody doing unit testing will feel familiar with.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>52:43</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/7EUd1_Pv8kg/seradio-episode70-gerardMeszarosOnXUnitTestPatterns.mp3" fileSize="50614985" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2007/10/episode-70-gerard-meszaros-on-xunit-test-patterns/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/7EUd1_Pv8kg/seradio-episode70-gerardMeszarosOnXUnitTestPatterns.mp3" length="50614985" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode70-gerardMeszarosOnXUnitTestPatterns.mp3</feedburner:origEnclosureLink></item><item><title>Episode 69: Nico Josuttis on SOA (SOA Pt. 3)</title><link>http://feedproxy.google.com/~r/se-radio/~3/9aGzlahHra4/</link><category>Episodes</category><category>Interview</category><category>soa</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Mon, 24 Sep 2007 15:00:00 PDT</pubDate><guid isPermaLink="false"></guid><description>This Episode is part five in our (probably ongoing) series on service oriented architecture. In this episode we talk to Nico Josuttis, who has recently published a &lt;a href="http://www.soa-in-practice.com/"&gt;book &lt;/a&gt;on this topic. As its title "SOA in Practice" suggests, it is a very pragmatic book based on Nico's experience as architect and project lead in a number of enterprise-level projects - not all of them had been called SOA, since they at the time the term was not yet coined. The episode discusses some technical aspects of SOA (such as loose coupling, messaging and ESBs), but mainly focusses on non-technical aspects of implementing an SOA.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/9aGzlahHra4" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2007/09/episode-69-nico-josuttis-on-soa-soa-pt-3/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">1</slash:comments><itunes:subtitle>This Episode is part five in our (probably ongoing) series on service oriented architecture. In this episode we talk to Nico Josuttis, who has recently published a book on this topic. As its title "SOA in Practice" suggests,</itunes:subtitle><itunes:summary>This Episode is part five in our (probably ongoing) series on service oriented architecture. In this episode we talk to Nico Josuttis, who has recently published a book on this topic. As its title "SOA in Practice" suggests, it is a very pragmatic book based on Nico's experience as architect and project lead in a number of enterprise-level projects - not all of them had been called SOA, since they at the time the term was not yet coined. The episode discusses some technical aspects of SOA (such as loose coupling, messaging and ESBs), but mainly focusses on non-technical aspects of implementing an SOA.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>56:47</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/UiOfDO7XIaI/seradio-episode69-nicoJosuttisOnSOA.mp3" fileSize="54517470" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2007/09/episode-69-nico-josuttis-on-soa-soa-pt-3/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/UiOfDO7XIaI/seradio-episode69-nicoJosuttisOnSOA.mp3" length="54517470" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode69-nicoJosuttisOnSOA.mp3</feedburner:origEnclosureLink></item><item><title>Episode 68: Dan Grossman on Garbage Collection and Transactional Memory</title><link>http://feedproxy.google.com/~r/se-radio/~3/nTG55TQwQYM/</link><category>Episodes</category><category>concurrency</category><category>garbage collection</category><category>Interview</category><category>transactional memory</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Fri, 14 Sep 2007 07:22:43 PDT</pubDate><guid isPermaLink="false"></guid><description>This episode features a discussion with &lt;a href="http://www.cs.washington.edu/homes/djg/"&gt;Dan Grossman&lt;/a&gt; about an essay paper he wrote for this year's &lt;a href="http://www.oopsla.org/oopsla2007/"&gt;OOPSLA&lt;/a&gt; conference. The paper is about an analogy between garbage collection and transactional memory. In addition to seeing the beauty of the analogy, the discussion also serves as a good introduction to transactional memory (which was mentioned in the &lt;a href="http://www.se-radio.net/index.php?post_id=168233"&gt;Goetz/Holmes episode&lt;/a&gt;) and - to some extent - to garbage collection.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/nTG55TQwQYM" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2007/09/episode-68-dan-grossman-on-garbage-collection-and-transactional-memory/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><itunes:subtitle>This episode features a discussion with Dan Grossman about an essay paper he wrote for this year's OOPSLA conference. The paper is about an analogy between garbage collection and transactional memory. In addition to seeing the beauty of the analogy,</itunes:subtitle><itunes:summary>This episode features a discussion with Dan Grossman about an essay paper he wrote for this year's OOPSLA conference. The paper is about an analogy between garbage collection and transactional memory. In addition to seeing the beauty of the analogy, the discussion also serves as a good introduction to transactional memory (which was mentioned in the Goetz/Holmes episode) and - to some extent - to garbage collection.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>54:19</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/Sh0286-moKo/seradio-episode68-GCandTMwithDanGrossman.mp3" fileSize="52151736" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2007/09/episode-68-dan-grossman-on-garbage-collection-and-transactional-memory/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/Sh0286-moKo/seradio-episode68-GCandTMwithDanGrossman.mp3" length="52151736" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode68-GCandTMwithDanGrossman.mp3</feedburner:origEnclosureLink></item><item><title>Episode 67: Roundtable on MDSD and PLE</title><link>http://feedproxy.google.com/~r/se-radio/~3/WC6JPK4-dn4/</link><category>Episodes</category><category>mdsd</category><category>product lines</category><category>Round Table</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Tue, 04 Sep 2007 07:30:15 PDT</pubDate><guid isPermaLink="false"></guid><description>This is a roundtable discussion on model-driven software develoment and product line engineering. It was recorded at the &lt;a href="http://software-families.org/"&gt;Model-Driven Development and Product Lines: Synergies and Experience&lt;/a&gt; conference in October 2006 in Leipzig. 
The panelists are:
&lt;ul&gt;
  &lt;li&gt;Axel Uhl, &lt;a href="http://www.sap.com"&gt;SAP&lt;/a&gt;
  &lt;/li&gt;&lt;li&gt;Danilo Beuche, &lt;a href="http://www.pure-systems.com"&gt;Pure Systems&lt;/a&gt;
  &lt;/li&gt;&lt;li&gt;Juha Pekka Tolvanen, &lt;a href="http://www.metacase.com"&gt;MetaCase&lt;/a&gt;
  &lt;/li&gt;&lt;li&gt;Tom Stahl, &lt;a href="http://www.bmiag.de/"&gt;b+m&lt;/a&gt;
  &lt;/li&gt;&lt;li&gt;Ruediger Schilling, &lt;a href="http://www.d-s-t-g.com"&gt;Delta Software Technology&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/WC6JPK4-dn4" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2007/09/episode-67-roundtable-on-mdsd-and-ple/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">1</slash:comments><itunes:subtitle>This is a roundtable discussion on model-driven software develoment and product line engineering. It was recorded at the Model-Driven Development and Product Lines: Synergies and Experience conference in October 2006 in Leipzig.  The panelists are: - </itunes:subtitle><itunes:summary>This is a roundtable discussion on model-driven software develoment and product line engineering. It was recorded at the Model-Driven Development and Product Lines: Synergies and Experience conference in October 2006 in Leipzig. 
The panelists are:

  Axel Uhl, SAP
  Danilo Beuche, Pure Systems
  Juha Pekka Tolvanen, MetaCase
  Tom Stahl, b+m
  Ruediger Schilling, Delta Software Technology</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>48:42</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/IJonYIlMRT8/seradio-episode67-roundtableOnMDSDandPLE.mp3" fileSize="46744321" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2007/09/episode-67-roundtable-on-mdsd-and-ple/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/IJonYIlMRT8/seradio-episode67-roundtableOnMDSDandPLE.mp3" length="46744321" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode67-roundtableOnMDSDandPLE.mp3</feedburner:origEnclosureLink></item><item><title>Episode 66: Gary McGraw on Security</title><link>http://feedproxy.google.com/~r/se-radio/~3/SIWpWt1KO_k/</link><category>Episodes</category><category>Interview</category><category>security</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Fri, 24 Aug 2007 15:00:00 PDT</pubDate><guid isPermaLink="false"></guid><description>This episode features an interview with the software security expert Gary McGraw. Gary explains why this topic is so important and gives several security deficiencies examples that he found in the past. The second half of the interview is about his latest book 'Exploiting Online Games' where he explains how online games are hacked and why this is relevant to everybody, not only gamers in their 'First Life'.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/SIWpWt1KO_k" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2007/08/episode-66-gary-mcgraw-on-security/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">3</slash:comments><itunes:subtitle>This episode features an interview with the software security expert Gary McGraw. Gary explains why this topic is so important and gives several security deficiencies examples that he found in the past. The second half of the interview is about his lat...</itunes:subtitle><itunes:summary>This episode features an interview with the software security expert Gary McGraw. Gary explains why this topic is so important and gives several security deficiencies examples that he found in the past. The second half of the interview is about his latest book 'Exploiting Online Games' where he explains how online games are hacked and why this is relevant to everybody, not only gamers in their 'First Life'.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>41:01</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/F6kwfX8Tq-Y/seradio-episode66-garyMcGrawOnSecurity.mp3" fileSize="39378944" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2007/08/episode-66-gary-mcgraw-on-security/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/F6kwfX8Tq-Y/seradio-episode66-garyMcGrawOnSecurity.mp3" length="39378944" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode66-garyMcGrawOnSecurity.mp3</feedburner:origEnclosureLink></item><item><title>Episode 65: Introduction to Embedded Systems</title><link>http://feedproxy.google.com/~r/se-radio/~3/_CgFl6zcMr8/</link><category>Episodes</category><category>embedded systems</category><category>Technology Talk</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Tue, 14 Aug 2007 15:00:00 PDT</pubDate><guid isPermaLink="false"></guid><description>This episode is an introduction to embedded system. It is an introduction in the sense that we cover many topics very briefly: upcoming episodes will provides details for many of these topics.
We start by discussing what an embedded system is an what the important characteristics are. Among them is limited resources, concurrency, real time and hardware integration. We also discuss the range of embedded systems from small mirocontrollers to mobile phones to distributed real time embedded systems. We also cover the different business case for embedded systems (per unit cost) and some non-trivial developmental aspects (cross compilation debugging, heisenbugs).
We close the episode by discussing some important architectural styles (time triggered, event-based, microkernels, state machines) as well as tools of the trade: languages, operating systems and middleware.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/_CgFl6zcMr8" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2007/08/episode-65-introduction-to-embedded-systems/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">1</slash:comments><itunes:subtitle>This episode is an introduction to embedded system. It is an introduction in the sense that we cover many topics very briefly: upcoming episodes will provides details for many of these topics. We start by discussing what an embedded system is an what ...</itunes:subtitle><itunes:summary>This episode is an introduction to embedded system. It is an introduction in the sense that we cover many topics very briefly: upcoming episodes will provides details for many of these topics.
We start by discussing what an embedded system is an what the important characteristics are. Among them is limited resources, concurrency, real time and hardware integration. We also discuss the range of embedded systems from small mirocontrollers to mobile phones to distributed real time embedded systems. We also cover the different business case for embedded systems (per unit cost) and some non-trivial developmental aspects (cross compilation debugging, heisenbugs).
We close the episode by discussing some important architectural styles (time triggered, event-based, microkernels, state machines) as well as tools of the trade: languages, operating systems and middleware.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>44:01</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/j2CfM6iBuQQ/seradio-episode65-introToEmbeddedSystems.mp3" fileSize="42257055" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2007/08/episode-65-introduction-to-embedded-systems/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/j2CfM6iBuQQ/seradio-episode65-introToEmbeddedSystems.mp3" length="42257055" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode65-introToEmbeddedSystems.mp3</feedburner:origEnclosureLink></item><item><title>Episode 64: Luke Hohmann on Architecture and Business</title><link>http://feedproxy.google.com/~r/se-radio/~3/2TpEOoBV31k/</link><category>Episodes</category><category>architecture</category><category>business</category><category>innovation</category><category>Interview</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Sat, 04 Aug 2007 15:00:00 PDT</pubDate><guid isPermaLink="false"></guid><description>In this episode we talk about the relationship between software architecture and the business. Based on his book, &lt;a href="http://www.amazon.com/exec/obidos/tg/detail/-/0201775948/ref=pd_bxgy_text_1/102-8679361-5493744?v=glance&amp;#038;s=books&amp;#038;st=*"&gt;Beyond Software Architecture&lt;/a&gt; we discuss how things such as branding, licensing, updating or different deployment scenarios influence the technical architecture of a system. We also discuss issues such as portability that add a huge amount of complexity, although from a business perspective it often does not make much sense. In the second part of the interview we discuss how the technical team and the business team can improve the way they work together. We look at some of the games (such as &lt;em&gt;Buy a Feature&lt;/em&gt; or &lt;em&gt;Give them a Hot Tub&lt;/em&gt;) from his new book &lt;a href="http://www.amazon.com/gp/product/0321437292/qid=1147394369/sr=1-3/ref=sr_1_3/104-8195174-7443967?s=books&amp;#038;v=glance&amp;#038;n=283155"&gt;Innovation Games&lt;/a&gt;, which discusses how to use collaborative play to be more creative and innovative in product creation.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/2TpEOoBV31k" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2007/08/episode-64-luke-hohmann-on-architecture-and-business/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><itunes:subtitle>In this episode we talk about the relationship between software architecture and the business. Based on his book, Beyond Software Architecture we discuss how things such as branding, licensing, updating or different deployment scenarios influence the t...</itunes:subtitle><itunes:summary>In this episode we talk about the relationship between software architecture and the business. Based on his book, Beyond Software Architecture we discuss how things such as branding, licensing, updating or different deployment scenarios influence the technical architecture of a system. We also discuss issues such as portability that add a huge amount of complexity, although from a business perspective it often does not make much sense. In the second part of the interview we discuss how the technical team and the business team can improve the way they work together. We look at some of the games (such as Buy a Feature or Give them a Hot Tub) from his new book Innovation Games, which discusses how to use collaborative play to be more creative and innovative in product creation.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>52:47</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/JoK-6rZ0KeI/seradio-episode64-architectureAndBusinessWithLukeHohman.mp3" fileSize="50671827" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2007/08/episode-64-luke-hohmann-on-architecture-and-business/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/JoK-6rZ0KeI/seradio-episode64-architectureAndBusinessWithLukeHohman.mp3" length="50671827" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode64-architectureAndBusinessWithLukeHohman.mp3</feedburner:origEnclosureLink></item><item><title>Episode 63: A Pattern Language for Distributed Systems with Henney and Buschmann</title><link>http://feedproxy.google.com/~r/se-radio/~3/x-sOba7RjHg/</link><category>Episodes</category><category>architecture</category><category>distributed systems</category><category>Interview</category><category>patterns</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Wed, 25 Jul 2007 15:00:00 PDT</pubDate><guid isPermaLink="false"></guid><description>In this Episode we talked about the new POSA 4 book which has recently been published. We talk to two of the authors, Kevlin Henney and Frank Buschmann (the third author, Doug Schmidt was not available - and he had also been on the podcast a couple of times :-)). The book contains a pattern language for distributed systems. It contains 114 patterns that had been published before by many different other authors. The patterns have been rewritten to form a consistent language.
We basically talked through the different sections of the book, which gives a really good overview over the challenges and the solutions of building distributed systems. These sections include From Mud to Structure, Distribution Infrastructure, Event Demultiplexing and Dispatching, Interface Partitioning, Component Patitioning, Application Contrl, Concurrency, Synchronization, Object Interaction, Adaptazion and Extension, Modal Behaviour, Resource Management and finally, Database Access.

The book references several other previous works (as listed below). Interestingly, many of these referenced works and authors have also been discussed previously on the podcast. Here are the back references:

&lt;ul&gt;
 &lt;li&gt;&lt;a href="http://www.se-radio.net/index.php?post_id=67317"&gt;Domain Driven Design, Eric Evans&lt;/a&gt;&lt;/li&gt;
 &lt;li&gt;&lt;a href="http://www.se-radio.net/index.php?post_id=160206"&gt;Messaging Patterns, Gregor Hohpe&lt;/a&gt;&lt;/li&gt;
 &lt;li&gt;&lt;a href="http://www.se-radio.net/index.php?post_id=51700"&gt;POSA 2 Patterns, Doug Schmidt&lt;/a&gt;&lt;/li&gt;
 &lt;li&gt;Concurrency: &lt;a href="http://www.se-radio.net/index.php?post_id=81083"&gt;Part 1&lt;/a&gt;, &lt;a href="http://www.se-radio.net/index.php?post_id=99079"&gt;Part 2&lt;/a&gt;, &lt;a href="http://www.se-radio.net/index.php?post_id=126370"&gt;Part 3&lt;/a&gt; and the interview with &lt;a href="http://www.se-radio.net/index.php?post_id=168233"&gt;Goetz and Holmes&lt;/a&gt;&lt;/li&gt;
 &lt;li&gt;Remoting Patterns &lt;a href="http://www.se-radio.net/index.php?post_id=71320"&gt;Part 1&lt;/a&gt; and &lt;a href="http://www.se-radio.net/index.php?post_id=74753"&gt;Part 2&lt;/a&gt;&lt;/li&gt;
 &lt;li&gt;&lt;a href="http://www.se-radio.net/index.php?post_id=96207"&gt;POSA3, Resource Management &lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/x-sOba7RjHg" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2007/07/episode-63-a-pattern-language-for-distributed-systems-with-henney-and-buschmann/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><itunes:subtitle>In this Episode we talked about the new POSA 4 book which has recently been published. We talk to two of the authors, Kevlin Henney and Frank Buschmann (the third author, Doug Schmidt was not available - and he had also been on the podcast a couple of ...</itunes:subtitle><itunes:summary>In this Episode we talked about the new POSA 4 book which has recently been published. We talk to two of the authors, Kevlin Henney and Frank Buschmann (the third author, Doug Schmidt was not available - and he had also been on the podcast a couple of times :-)). The book contains a pattern language for distributed systems. It contains 114 patterns that had been published before by many different other authors. The patterns have been rewritten to form a consistent language.
We basically talked through the different sections of the book, which gives a really good overview over the challenges and the solutions of building distributed systems. These sections include From Mud to Structure, Distribution Infrastructure, Event Demultiplexing and Dispatching, Interface Partitioning, Component Patitioning, Application Contrl, Concurrency, Synchronization, Object Interaction, Adaptazion and Extension, Modal Behaviour, Resource Management and finally, Database Access.

The book references several other previous works (as listed below). Interestingly, many of these referenced works and authors have also been discussed previously on the podcast. Here are the back references:


 Domain Driven Design, Eric Evans
 Messaging Patterns, Gregor Hohpe
 POSA 2 Patterns, Doug Schmidt
 Concurrency: Part 1, Part 2, Part 3 and the interview with Goetz and Holmes
 Remoting Patterns Part 1 and Part 2
 POSA3, Resource Management</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>1:06:40</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/X7LVpR6zpb4/seradio-episode63-aPatternLanguageOnDistSystemsWithHenneyAndBuschmann.mp3" fileSize="63997202" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2007/07/episode-63-a-pattern-language-for-distributed-systems-with-henney-and-buschmann/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/X7LVpR6zpb4/seradio-episode63-aPatternLanguageOnDistSystemsWithHenneyAndBuschmann.mp3" length="63997202" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode63-aPatternLanguageOnDistSystemsWithHenneyAndBuschmann.mp3</feedburner:origEnclosureLink></item><item><title>Episode 62: Martin Odersky on Scala</title><link>http://feedproxy.google.com/~r/se-radio/~3/wqsHKclKKmU/</link><category>Episodes</category><category>functional programming</category><category>Interview</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Sun, 15 Jul 2007 15:00:00 PDT</pubDate><guid isPermaLink="false"></guid><description>In this Episode we talk about the Scala language with its creator Martin Odersky. Scala is a language that fuses object oriented and functional programming. Martin started out by providing a two-minute overview over the language, and then talked a little bit about its history. We then discussed the basics of functional programming. The main part of the episode features a discussion of some of the important features of the Scala language:
&lt;ul&gt;
 &lt;li&gt;Case Classes and Pattern Matching
 &lt;/li&gt;&lt;li&gt;Multiple Inheritance and Compound Types, Traits, Mixins
 &lt;/li&gt;&lt;li&gt;Closures
 &lt;/li&gt;&lt;li&gt;Functions as types, "Function pointers", Anonymous functions
 &lt;/li&gt;&lt;li&gt;Higher Order Functions
 &lt;/li&gt;&lt;li&gt;Currying
 &lt;/li&gt;&lt;li&gt;(Sequence) Comprehensions
 &lt;/li&gt;&lt;li&gt;Generics
 &lt;/li&gt;&lt;li&gt;Type Bounds (Upper, Lower)
 &lt;/li&gt;&lt;li&gt;Static/Dynamic Typing, Type Inference
 &lt;/li&gt;&lt;li&gt;Operators
 &lt;/li&gt;&lt;li&gt;Implicits 
&lt;/li&gt;&lt;/ul&gt;  
We then talked about Scala's actors library, a highly scalable concurrency package. The last part of the episode covered some more general topics, such as where and how Scala is used today, IDE support and the user and developer community. We concluded the episode by looking at current development and next steps in Scala language evolution.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/wqsHKclKKmU" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2007/07/episode-62-martin-odersky-on-scala/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">4</slash:comments><itunes:subtitle>In this Episode we talk about the Scala language with its creator Martin Odersky. Scala is a language that fuses object oriented and functional programming. Martin started out by providing a two-minute overview over the language,</itunes:subtitle><itunes:summary>In this Episode we talk about the Scala language with its creator Martin Odersky. Scala is a language that fuses object oriented and functional programming. Martin started out by providing a two-minute overview over the language, and then talked a little bit about its history. We then discussed the basics of functional programming. The main part of the episode features a discussion of some of the important features of the Scala language:

 Case Classes and Pattern Matching
 Multiple Inheritance and Compound Types, Traits, Mixins
 Closures
 Functions as types, "Function pointers", Anonymous functions
 Higher Order Functions
 Currying
 (Sequence) Comprehensions
 Generics
 Type Bounds (Upper, Lower)
 Static/Dynamic Typing, Type Inference
 Operators
 Implicits 
  
We then talked about Scala's actors library, a highly scalable concurrency package. The last part of the episode covered some more general topics, such as where and how Scala is used today, IDE support and the user and developer community. We concluded the episode by looking at current development and next steps in Scala language evolution.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>53:58</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/9NH_2h8b0yA/seradio-episode62-scalaWithMartinOdersky.mp3" fileSize="51803274" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2007/07/episode-62-martin-odersky-on-scala/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/9NH_2h8b0yA/seradio-episode62-scalaWithMartinOdersky.mp3" length="51803274" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode62-scalaWithMartinOdersky.mp3</feedburner:origEnclosureLink></item><item><title>Episode 61: Internals of GCC</title><link>http://feedproxy.google.com/~r/se-radio/~3/GZ4EfyfWJbo/</link><category>Episodes</category><category>compilers</category><category>gcc</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Thu, 05 Jul 2007 15:00:00 PDT</pubDate><guid isPermaLink="false"></guid><description>This show takes a behind-the-scenes look at compilers and their inner workings, using the Gnu compiler collection (GCC) as an example. Arno interview Morgan Deters, covering all steps from the parsing of different programming languages to machine independenet optimizations and generating processor specific binary code.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/GZ4EfyfWJbo" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2007/07/episode-61-internals-of-gcc/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">5</slash:comments><itunes:subtitle>This show takes a behind-the-scenes look at compilers and their inner workings, using the Gnu compiler collection (GCC) as an example. Arno interview Morgan Deters, covering all steps from the parsing of different programming languages to machine indep...</itunes:subtitle><itunes:summary>This show takes a behind-the-scenes look at compilers and their inner workings, using the Gnu compiler collection (GCC) as an example. Arno interview Morgan Deters, covering all steps from the parsing of different programming languages to machine independenet optimizations and generating processor specific binary code.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>53:14</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/Z_37KeMVQ7k/seradio-episode61-internalsOfGCC.mp3" fileSize="51107372" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2007/07/episode-61-internals-of-gcc/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/Z_37KeMVQ7k/seradio-episode61-internalsOfGCC.mp3" length="51107372" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode61-internalsOfGCC.mp3</feedburner:origEnclosureLink></item><item><title>Episode 60: Roman Pichler on Scrum</title><link>http://feedproxy.google.com/~r/se-radio/~3/AmCp-HqOvs8/</link><category>Episodes</category><category>agile</category><category>processes</category><category>scrum</category><category>Technology/Guest</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Mon, 25 Jun 2007 15:00:00 PDT</pubDate><guid isPermaLink="false"></guid><description>This episode features Scrum, a very popular Agile software development framework. We interview Roman Pichler, a Certified ScrumMaster Trainer and independent consultant. Roman explains the principles behind Scrum, its roles and its key practices. He also answers FAQs. This episode continues our track on software development processes discussing an additional Agile method.
Roman is currently writing a book on Scrum in German that provides more in-depth information of the topics discussed in the podcast. The book will be available in autumn 2007 published by d.punkt (Heidelberg, Germany).&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/AmCp-HqOvs8" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2007/06/episode-60-roman-pichler-on-scrum/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><itunes:subtitle>This episode features Scrum, a very popular Agile software development framework. We interview Roman Pichler, a Certified ScrumMaster Trainer and independent consultant. Roman explains the principles behind Scrum, its roles and its key practices.</itunes:subtitle><itunes:summary>This episode features Scrum, a very popular Agile software development framework. We interview Roman Pichler, a Certified ScrumMaster Trainer and independent consultant. Roman explains the principles behind Scrum, its roles and its key practices. He also answers FAQs. This episode continues our track on software development processes discussing an additional Agile method.
Roman is currently writing a book on Scrum in German that provides more in-depth information of the topics discussed in the podcast. The book will be available in autumn 2007 published by d.punkt (Heidelberg, Germany).</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>1:00:39</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/WTPa0aHzoWc/seradio-episode60-romanPichlerOnScrum.mp3" fileSize="58218916" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2007/06/episode-60-roman-pichler-on-scrum/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/WTPa0aHzoWc/seradio-episode60-romanPichlerOnScrum.mp3" length="58218916" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode60-romanPichlerOnScrum.mp3</feedburner:origEnclosureLink></item><item><title>Episode 59: Static Code Analysis</title><link>http://feedproxy.google.com/~r/se-radio/~3/MbCk_toaIMs/</link><category>Episodes</category><category>debugging</category><category>static analysis</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Sat, 16 Jun 2007 04:52:04 PDT</pubDate><guid isPermaLink="false"></guid><description>This episode is a discussion with Jonathan Aldrich (Assistant Professor at CMU) about static analysis. The discussion covered theory as well as practice and tools. We started with an explanation of what static analysis actually is, which kinds of errors it can find and how it is different from testing and reviews. The core challenge of such an analysis tool is to understand the semantics of the program and reduce its possible state space to make it analysable - in effect reconstructing the programmer's intent from the code. The user can "help" the tool with this challenge by using suitable annotations; also, languages could do a better job of being analysable. The conceptual discussion was concluded by looking at the principles of static analysis (termination, soundness. precision) and how this approach relates to model analysis. 

The second more practical part started out with a discussion of how Microsoft successfully uses static analysis in their Windows development. We then discussed some of the tools available; these include Findbugs, Coverity, Codesonar, Clockwork, Fortify, Polyspace and Codesurfer. To conclude the discussion of tools, we discussed the commonalities and differences with architecture visualization tools as well as metrics and heuristics. 

Part three of the discussion briefly looked at how to introduce static analysis tools into an organization's development process and tool chain. We concluded the discussion by looking at situations where static analysis does not work, as well as at the FLUID research project at CMU.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/MbCk_toaIMs" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2007/06/episode-59-static-code-analysis/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">3</slash:comments><itunes:subtitle>This episode is a discussion with Jonathan Aldrich (Assistant Professor at CMU) about static analysis. The discussion covered theory as well as practice and tools. We started with an explanation of what static analysis actually is,</itunes:subtitle><itunes:summary>This episode is a discussion with Jonathan Aldrich (Assistant Professor at CMU) about static analysis. The discussion covered theory as well as practice and tools. We started with an explanation of what static analysis actually is, which kinds of errors it can find and how it is different from testing and reviews. The core challenge of such an analysis tool is to understand the semantics of the program and reduce its possible state space to make it analysable - in effect reconstructing the programmer's intent from the code. The user can "help" the tool with this challenge by using suitable annotations; also, languages could do a better job of being analysable. The conceptual discussion was concluded by looking at the principles of static analysis (termination, soundness. precision) and how this approach relates to model analysis. 

The second more practical part started out with a discussion of how Microsoft successfully uses static analysis in their Windows development. We then discussed some of the tools available; these include Findbugs, Coverity, Codesonar, Clockwork, Fortify, Polyspace and Codesurfer. To conclude the discussion of tools, we discussed the commonalities and differences with architecture visualization tools as well as metrics and heuristics. 

Part three of the discussion briefly looked at how to introduce static analysis tools into an organization's development process and tool chain. We concluded the discussion by looking at situations where static analysis does not work, as well as at the FLUID research project at CMU.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>45:48</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/jRmzdbq3rNo/seradio-episode59-StaticCodeAnalysis.mp3" fileSize="43964864" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2007/06/episode-59-static-code-analysis/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/jRmzdbq3rNo/seradio-episode59-StaticCodeAnalysis.mp3" length="43964864" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode59-StaticCodeAnalysis.mp3</feedburner:origEnclosureLink></item><item><title>Episode 58: Product Line Engineering Pt. 2</title><link>http://feedproxy.google.com/~r/se-radio/~3/s3h04o0fTiA/</link><category>Episodes</category><category>product lines</category><category>Technology Talk</category><category>variability</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Wed, 06 Jun 2007 05:02:47 PDT</pubDate><guid isPermaLink="false"></guid><description>Variability is one of the key concerns in software product line engineering. The episode introduces the concepts of structural and non-structural (or configurative) variability. It also discusses how to find and model variability, and especially how to implement variability in the solution artifacts. Michael and Markus discuss a series of variability mechanisms that can be used with today's programming languages and technologies.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/s3h04o0fTiA" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2007/06/episode-58-product-line-engineering-pt-2/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><itunes:subtitle>Variability is one of the key concerns in software product line engineering. The episode introduces the concepts of structural and non-structural (or configurative) variability. It also discusses how to find and model variability,</itunes:subtitle><itunes:summary>Variability is one of the key concerns in software product line engineering. The episode introduces the concepts of structural and non-structural (or configurative) variability. It also discusses how to find and model variability, and especially how to implement variability in the solution artifacts. Michael and Markus discuss a series of variability mechanisms that can be used with today's programming languages and technologies.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>48:04</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/7uMg3Eu0qwE/seradio-episode58-ProductLineEngineering_Pt2.mp3" fileSize="46140732" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2007/06/episode-58-product-line-engineering-pt-2/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/7uMg3Eu0qwE/seradio-episode58-ProductLineEngineering_Pt2.mp3" length="46140732" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode58-ProductLineEngineering_Pt2.mp3</feedburner:origEnclosureLink></item><item><title>Episode 57: Compile-Time Metaprogramming</title><link>http://feedproxy.google.com/~r/se-radio/~3/twRpzMv1WXE/</link><category>Episodes</category><category>compile-time meta programming</category><category>compilers</category><category>converge</category><category>dsls</category><category>meta programming</category><category>Technology/Guest</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Sun, 27 May 2007 10:07:47 PDT</pubDate><guid isPermaLink="false"></guid><description>This episode is about compile-time metaprogramming, and specifically, about implementing DSLs via compile-time metaprogramming. Our guest, &lt;a href="http://tratt.net/laurie/"&gt;Laurence Tratt&lt;/a&gt;, illustrates the idea with his (research) programming language called &lt;a href="http://convergepl.org/"&gt;Converge&lt;/a&gt;. 
&lt;br /&gt;&lt;br /&gt;
We started by talking about the importance of a custom syntax for DSL and took a brief look at the definition of DSLs by a chap called Paul Hudak. We then briefly covered the disctinction between internal and external DSLs. 
&lt;br /&gt;&lt;br /&gt;
More to the point of this episode, we discussed the concept of compile-time metaprogramming, and the language features necessary to achieve it: in converge, these concepts are called splice, quasi-quote and insertion. We then looked at how the Converge compiler works, and at the additional features that are required to implement DSLs based on the metaprogramming features mentioned above. Using an example, we then walked through how to implement a simple DSL. 
&lt;br /&gt;&lt;br /&gt;
Looking at some of the more technical details, we discussed the difference between the parse tree and the abstract syntax tree and at different kinds of parsers - specifically, the Earley parser used by Converge. In multi-stage languages (i.e. languages that execute programs and meta programs) error reporting is important, but non trivial. We discussed how this is done in Converge. We finally looked at how to integrate Converge's expression language into your DSL and how to package DSL definition for later use.
&lt;br /&gt;&lt;br /&gt;
The last segment look at the process of implementing a DSL in converge and about some of the history and practical experience with Converge. Lessons learned from building Converge wrap up the episode.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/twRpzMv1WXE" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2007/05/episode-57-compile-time-metaprogramming/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><itunes:subtitle>This episode is about compile-time metaprogramming, and specifically, about implementing DSLs via compile-time metaprogramming. Our guest, Laurence Tratt, illustrates the idea with his (research) programming language called Converge.  - </itunes:subtitle><itunes:summary>This episode is about compile-time metaprogramming, and specifically, about implementing DSLs via compile-time metaprogramming. Our guest, Laurence Tratt, illustrates the idea with his (research) programming language called Converge. 

We started by talking about the importance of a custom syntax for DSL and took a brief look at the definition of DSLs by a chap called Paul Hudak. We then briefly covered the disctinction between internal and external DSLs. 

More to the point of this episode, we discussed the concept of compile-time metaprogramming, and the language features necessary to achieve it: in converge, these concepts are called splice, quasi-quote and insertion. We then looked at how the Converge compiler works, and at the additional features that are required to implement DSLs based on the metaprogramming features mentioned above. Using an example, we then walked through how to implement a simple DSL. 

Looking at some of the more technical details, we discussed the difference between the parse tree and the abstract syntax tree and at different kinds of parsers - specifically, the Earley parser used by Converge. In multi-stage languages (i.e. languages that execute programs and meta programs) error reporting is important, but non trivial. We discussed how this is done in Converge. We finally looked at how to integrate Converge's expression language into your DSL and how to package DSL definition for later use.

The last segment look at the process of implementing a DSL in converge and about some of the history and practical experience with Converge. Lessons learned from building Converge wrap up the episode.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>44:55</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/flojiCYDxd4/seradio-episode57-compileTimeMetaprogrammingWithLaurenceTratt.mp3" fileSize="43112617" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2007/05/episode-57-compile-time-metaprogramming/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/flojiCYDxd4/seradio-episode57-compileTimeMetaprogrammingWithLaurenceTratt.mp3" length="43112617" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode57-compileTimeMetaprogrammingWithLaurenceTratt.mp3</feedburner:origEnclosureLink></item><item><title>Episode 56: Sensor Networks</title><link>http://feedproxy.google.com/~r/se-radio/~3/cnhrzgb_ejw/</link><category>Episodes</category><category>embedded systems</category><category>Interview</category><category>rfid</category><category>sensor networks</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Thu, 17 May 2007 10:12:29 PDT</pubDate><guid isPermaLink="false"></guid><description>In this episode we discuss sensor networks with our guest Steffen Schaefer, who is the Technical Thought Leader for Sensors &amp;#038; Actuator
Solutions at IBM. The discussion resolves around the TREC device, which can be mounted on containers to track them on their journey over seas, railway tracks and roads. The TREC is a small embedded device developed by Steffen's employer, IBM, that has various sensors and communications channels.
&lt;br /&gt;&lt;br /&gt;
In the episode we first talked about container transport in general, and then looked at how the TREC device works - specifically, it's hardware, software and power management. We then looked at the necessary backend infrastructure. The main part of the discussion covered the communication between the device and the backend, using technologies such as Zigby, GSM and satellite communications. We also looked at the middleware infrastructures used, such as the MQtt messaging tool.
&lt;br /&gt;&lt;br /&gt;
We closed the episode with a little discussion of the "Internet of Things" and some discussion about embedded software devleopment in general. Note that SE Radio will feature more embedded topics in the future - an introduction to embedded development will be put online soon.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/cnhrzgb_ejw" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2007/05/episode-56-sensor-networks/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">1</slash:comments><itunes:subtitle>In this episode we discuss sensor networks with our guest Steffen Schaefer, who is the Technical Thought Leader for Sensors &amp; Actuator Solutions at IBM. The discussion resolves around the TREC device, which can be mounted on containers to track them o...</itunes:subtitle><itunes:summary>In this episode we discuss sensor networks with our guest Steffen Schaefer, who is the Technical Thought Leader for Sensors &amp; Actuator
Solutions at IBM. The discussion resolves around the TREC device, which can be mounted on containers to track them on their journey over seas, railway tracks and roads. The TREC is a small embedded device developed by Steffen's employer, IBM, that has various sensors and communications channels.

In the episode we first talked about container transport in general, and then looked at how the TREC device works - specifically, it's hardware, software and power management. We then looked at the necessary backend infrastructure. The main part of the discussion covered the communication between the device and the backend, using technologies such as Zigby, GSM and satellite communications. We also looked at the middleware infrastructures used, such as the MQtt messaging tool.

We closed the episode with a little discussion of the "Internet of Things" and some discussion about embedded software devleopment in general. Note that SE Radio will feature more embedded topics in the future - an introduction to embedded development will be put online soon.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>44:35</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/Qwd9Fo8lPos/seradio-episode56-sensorNetworksWithSteffenSchaefer.mp3" fileSize="42796640" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2007/05/episode-56-sensor-networks/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/Qwd9Fo8lPos/seradio-episode56-sensorNetworksWithSteffenSchaefer.mp3" length="42796640" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode56-sensorNetworksWithSteffenSchaefer.mp3</feedburner:origEnclosureLink></item><item><title>Episode 55: Refactoring Pt. 2</title><link>http://feedproxy.google.com/~r/se-radio/~3/Xf8azTKAh30/</link><category>Episodes</category><category>agile</category><category>refactoring</category><category>Technology Talk</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Mon, 07 May 2007 10:37:14 PDT</pubDate><guid isPermaLink="false"></guid><description>In the first episode on Refactoring we talked about the basic ideas behind refactoring and some base principles why refactoring is a key part of software engineering. Now we move on to more complicated refactorings and discuss three major situations, their problems and possible solutions: advanced refactorings in large projects that can hardly be finished in a few minutes or hours and refactoring in larger teams. Also covered are the refactoring of published APIs and how merciless refactoring could be aligned with backward compatibility of published APIs, and refactorings that affect more than just code like for example database schemas.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/Xf8azTKAh30" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2007/05/episode-55-refactoring-pt-2/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">1</slash:comments><itunes:subtitle>In the first episode on Refactoring we talked about the basic ideas behind refactoring and some base principles why refactoring is a key part of software engineering. Now we move on to more complicated refactorings and discuss three major situations,</itunes:subtitle><itunes:summary>In the first episode on Refactoring we talked about the basic ideas behind refactoring and some base principles why refactoring is a key part of software engineering. Now we move on to more complicated refactorings and discuss three major situations, their problems and possible solutions: advanced refactorings in large projects that can hardly be finished in a few minutes or hours and refactoring in larger teams. Also covered are the refactoring of published APIs and how merciless refactoring could be aligned with backward compatibility of published APIs, and refactorings that affect more than just code like for example database schemas.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>32:08</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/6IsUhTmvbLM/seradio-episode55-refactoring_pt2.mp3" fileSize="30854625" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2007/05/episode-55-refactoring-pt-2/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/6IsUhTmvbLM/seradio-episode55-refactoring_pt2.mp3" length="30854625" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode55-refactoring_pt2.mp3</feedburner:origEnclosureLink></item><item><title>Episode 54: Interview Frank Buschmann</title><link>http://feedproxy.google.com/~r/se-radio/~3/LnMSWR_kSTk/</link><category>Episodes</category><category>architecture</category><category>Interview</category><category>patterns</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Fri, 27 Apr 2007 00:06:31 PDT</pubDate><guid isPermaLink="false"></guid><description>This episode is an interview with Frank Buschmann, one of the pioneers of the pattern movement in Europe. Michael and Frank discuss how it all began: the first conferences on patterns and the first publications by the Gang-of-Four and the POSA 1 team. Frank then elaborates on the new volumes in the Pattern-Oriented Software Architecture book series - POSA 4 and POSA 5 - and gives some examples from the books. The episode concludes with a general discussion on software design and architecture, and best practices on software development.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/LnMSWR_kSTk" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2007/04/episode-54-interview-frank-buschmann/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><itunes:subtitle>This episode is an interview with Frank Buschmann, one of the pioneers of the pattern movement in Europe. Michael and Frank discuss how it all began: the first conferences on patterns and the first publications by the Gang-of-Four and the POSA 1 team.</itunes:subtitle><itunes:summary>This episode is an interview with Frank Buschmann, one of the pioneers of the pattern movement in Europe. Michael and Frank discuss how it all began: the first conferences on patterns and the first publications by the Gang-of-Four and the POSA 1 team. Frank then elaborates on the new volumes in the Pattern-Oriented Software Architecture book series - POSA 4 and POSA 5 - and gives some examples from the books. The episode concludes with a general discussion on software design and architecture, and best practices on software development.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>42:23</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/FZZERuE__a4/seradio-episode54-frankBuschmann.mp3" fileSize="40681767" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2007/04/episode-54-interview-frank-buschmann/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/FZZERuE__a4/seradio-episode54-frankBuschmann.mp3" length="40681767" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode54-frankBuschmann.mp3</feedburner:origEnclosureLink></item><item><title>Episode 53: Product Line Engineering Pt. 1</title><link>http://feedproxy.google.com/~r/se-radio/~3/rOELCkmzEIY/</link><category>Episodes</category><category>architecture</category><category>product lines</category><category>Technology Talk</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Tue, 17 Apr 2007 00:08:39 PDT</pubDate><guid isPermaLink="false"></guid><description>Michael Kircher and Markus Voelter introduce the topic of software product line engineering. They motivate when and why product lines are important to consider and what makes them so special. Further, they introduce some key terminology, such as platform, core asset, feature model, commonality, and variability.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/rOELCkmzEIY" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2007/04/episode-53-product-line-engineering-pt-1/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">2</slash:comments><itunes:subtitle>Michael Kircher and Markus Voelter introduce the topic of software product line engineering. They motivate when and why product lines are important to consider and what makes them so special. Further, they introduce some key terminology,</itunes:subtitle><itunes:summary>Michael Kircher and Markus Voelter introduce the topic of software product line engineering. They motivate when and why product lines are important to consider and what makes them so special. Further, they introduce some key terminology, such as platform, core asset, feature model, commonality, and variability.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>44:50</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/xJVC-d12gdg/seradio-episode53-ProductLineEngineering_Pt1.mp3" fileSize="43045744" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2007/04/episode-53-product-line-engineering-pt-1/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/xJVC-d12gdg/seradio-episode53-ProductLineEngineering_Pt1.mp3" length="43045744" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode53-ProductLineEngineering_Pt1.mp3</feedburner:origEnclosureLink></item><item><title>Episode 52: DSL Development in Ruby</title><link>http://feedproxy.google.com/~r/se-radio/~3/7LSnexozREE/</link><category>Episodes</category><category>dsls</category><category>dynamic languages</category><category>meta programming</category><category>ruby</category><category>scripting</category><category>Technology/Guest</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Sat, 07 Apr 2007 00:52:12 PDT</pubDate><guid isPermaLink="false"></guid><description>In this episode, we're talking to &lt;a href="http://obiefernandez.com/"&gt;Obie Fernandez&lt;/a&gt; about agile DSL development in Ruby. We started our discussion by defining what a DSL is, the difference between internal and external DSLs as well as the importance of the flexibly syntax of the host language in order to make DSLs worthwhile. We then looked at a couple of real world examples for DSLs, specifically, at Business Natural Languages. We then progressed to the main part of the discussions, which centered around the features of Ruby that are important for building DSLs. These include the flexible handling of parentheses, symbols, blocks as well as literal arrays and hashes. We then discussed Ruby's meta programming feautures and how they are important for building DSLs: instantiation, method_missing callback, class macros, top level 
functions and sandboxing. Features like eval, class_eval, instance_eval and define_method are also important for DSLs in 
Ruby, as well as using alias_method for simple AOP.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/7LSnexozREE" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2007/04/episode-52-dsl-development-in-ruby/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><itunes:subtitle>In this episode, we're talking to Obie Fernandez about agile DSL development in Ruby. We started our discussion by defining what a DSL is, the difference between internal and external DSLs as well as the importance of the flexibly syntax of the host la...</itunes:subtitle><itunes:summary>In this episode, we're talking to Obie Fernandez about agile DSL development in Ruby. We started our discussion by defining what a DSL is, the difference between internal and external DSLs as well as the importance of the flexibly syntax of the host language in order to make DSLs worthwhile. We then looked at a couple of real world examples for DSLs, specifically, at Business Natural Languages. We then progressed to the main part of the discussions, which centered around the features of Ruby that are important for building DSLs. These include the flexible handling of parentheses, symbols, blocks as well as literal arrays and hashes. We then discussed Ruby's meta programming feautures and how they are important for building DSLs: instantiation, method_missing callback, class macros, top level 
functions and sandboxing. Features like eval, class_eval, instance_eval and define_method are also important for DSLs in 
Ruby, as well as using alias_method for simple AOP.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>50:42</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/MSL2qXcu1vE/seradio-episode52-DSLsInRuby.mp3" fileSize="48667295" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2007/04/episode-52-dsl-development-in-ruby/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/MSL2qXcu1vE/seradio-episode52-DSLsInRuby.mp3" length="48667295" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode52-DSLsInRuby.mp3</feedburner:origEnclosureLink></item><item><title>Episode 51: Design By Contract</title><link>http://feedproxy.google.com/~r/se-radio/~3/wk9q-liLZUQ/</link><category>Episodes</category><category>dbc</category><category>design-by-contract</category><category>eiffel</category><category>Technology Talk</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Wed, 28 Mar 2007 00:57:29 PDT</pubDate><guid isPermaLink="false"></guid><description>In this episode, Arno and Michael take a look at Design by Contract, a programming technique formalized by Bertrand Meyer. The idea is that an interface is more than method signatures - it is also about specifying the expected behavior that implementations must provide. While some languages include direct support for this style of programming, it is a useful mindset when desiging interfaces even without such language features.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/wk9q-liLZUQ" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2007/03/episode-51-design-by-contract/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><itunes:subtitle>In this episode, Arno and Michael take a look at Design by Contract, a programming technique formalized by Bertrand Meyer. The idea is that an interface is more than method signatures - it is also about specifying the expected behavior that implementat...</itunes:subtitle><itunes:summary>In this episode, Arno and Michael take a look at Design by Contract, a programming technique formalized by Bertrand Meyer. The idea is that an interface is more than method signatures - it is also about specifying the expected behavior that implementations must provide. While some languages include direct support for this style of programming, it is a useful mindset when desiging interfaces even without such language features.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>37:13</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/jooZiRsewPo/seradio-episode51-designByContract.mp3" fileSize="35734810" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2007/03/episode-51-design-by-contract/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/jooZiRsewPo/seradio-episode51-designByContract.mp3" length="35734810" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode51-designByContract.mp3</feedburner:origEnclosureLink></item><item><title>Episode 50: Announcements and Requests</title><link>http://feedproxy.google.com/~r/se-radio/~3/8Wyq1vD7KUs/</link><category>Episodes</category><category>News</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Thu, 22 Mar 2007 00:10:39 PDT</pubDate><guid isPermaLink="false"></guid><description>This is another episode where we mainly announce topics related to the podcast itself.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/8Wyq1vD7KUs" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2007/03/episode-50-announcements-and-requests/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><itunes:subtitle>This is another episode where we mainly announce topics related to the podcast itself.</itunes:subtitle><itunes:summary>This is another episode where we mainly announce topics related to the podcast itself.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>8:25</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/ZvOxO7gwfbw/seradio-episode50-announcementsAndRequests.mp3" fileSize="8083074" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2007/03/episode-50-announcements-and-requests/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/ZvOxO7gwfbw/seradio-episode50-announcementsAndRequests.mp3" length="8083074" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode50-announcementsAndRequests.mp3</feedburner:origEnclosureLink></item><item><title>Episode 49: Dynamic Languages for Static Minds</title><link>http://feedproxy.google.com/~r/se-radio/~3/eSDprsVF0v0/</link><category>Episodes</category><category>dynamic languages</category><category>groovy</category><category>meta programming</category><category>python</category><category>ruby</category><category>scripting</category><category>Technology/Guest</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Sun, 18 Mar 2007 00:15:03 PDT</pubDate><guid isPermaLink="false"></guid><description>In this Episode we talk about dynamic languages for statically-typed minds, or in other words: which are the interesting features people should learn when they go from a langauge such as Java or C# to a language like Python or Ruby. We used Ruby as the concrete example language.
&lt;br /&gt;&lt;br /&gt;
We started the discussion about important features with the concept of dynamically changing an object's type and the idea of message passing. We then looked at the concepts of blocks and closures. Next in line is a discussion about functions that create functions as well as currying. This lead into a quick discussion about continuations. Open classes, aliasing and the relationship to AOP was next on our agenda.
&lt;br /&gt;&lt;br /&gt;
We then looked considered a somewhat more engineering-oriented view and looked at the importance of testing and what are the best steps of getting from static programming to dynamic programming. Finally, we discussed a bit about the current (as of October 2006) state of dynamic languages on mainstream platforms.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/eSDprsVF0v0" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2007/03/episode-49-dynamic-languages-for-static-minds/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">1</slash:comments><itunes:subtitle>In this Episode we talk about dynamic languages for statically-typed minds, or in other words: which are the interesting features people should learn when they go from a langauge such as Java or C# to a language like Python or Ruby.</itunes:subtitle><itunes:summary>In this Episode we talk about dynamic languages for statically-typed minds, or in other words: which are the interesting features people should learn when they go from a langauge such as Java or C# to a language like Python or Ruby. We used Ruby as the concrete example language.

We started the discussion about important features with the concept of dynamically changing an object's type and the idea of message passing. We then looked at the concepts of blocks and closures. Next in line is a discussion about functions that create functions as well as currying. This lead into a quick discussion about continuations. Open classes, aliasing and the relationship to AOP was next on our agenda.

We then looked considered a somewhat more engineering-oriented view and looked at the importance of testing and what are the best steps of getting from static programming to dynamic programming. Finally, we discussed a bit about the current (as of October 2006) state of dynamic languages on mainstream platforms.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>33:06</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/_LE0hS5hJrY/seradio-episode49-dynamicLanguages.mp3" fileSize="31782998" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2007/03/episode-49-dynamic-languages-for-static-minds/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/_LE0hS5hJrY/seradio-episode49-dynamicLanguages.mp3" length="31782998" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode49-dynamicLanguages.mp3</feedburner:origEnclosureLink></item><item><title>Episode 48: Interview Dragos Manolescua</title><link>http://feedproxy.google.com/~r/se-radio/~3/dfcsACCU8so/</link><category>Episodes</category><category>architecture</category><category>architecture evaluation</category><category>architecture review</category><category>atam</category><category>Interview</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Wed, 07 Mar 2007 23:50:49 PST</pubDate><guid isPermaLink="false"></guid><description>In this Episode we discuss software architecture evaluation with &lt;a href="http://micro-workflow.com/"&gt;Dragos Manolescu&lt;/a&gt;, an architect at Microsoft's &lt;a href="http://microsoft.com/practices/"&gt;patterns &amp;#38; practices group&lt;/a&gt;. 
&lt;br /&gt;&lt;br /&gt;
We start off the discussion by trying to define what software architecture evaluation is and when and you want to evaluate an architecture in the system's lifecycle. We then make sure evaluators set the expectations for the evaluation process right - it is important to understand that architecture evaluation is typically not primarily a review of the technology decisions made for the architecture.
&lt;br /&gt;&lt;br /&gt;
We then discuss the kinds of notations that are useful for describing architectures, and which of these are especially helpful for the evaluator. Next we look at the core of the architecture evaluation task, namely, the integration of the various stakeholders and their views. We also discuss real reviews from reviews that are staged "for show" only.
&lt;br /&gt;&lt;br /&gt;
Next in the discussion is a brief look at the tools you can use for architecture evaluation, as well as a closer look at the various methods for achitecture evalualtion proposed by the &lt;a href="http://www.sei.cmu.edu/"&gt;Software Engineering Institute (SEI)&lt;/a&gt;. We conclude the discussion by outlining how architecture evaluation fits into an agile development process.
&lt;br /&gt;&lt;br /&gt;
... and finally, we briefly plug the &lt;a href="http://www.amazon.com/dp/0321321944?tag=microworkflow-20&amp;#038;camp=14573&amp;#038;creative=327641&amp;#038;linkCode=as1&amp;#038;creativeASIN=0321321944&amp;#038;adid=0CSB8D3GZ99Q2V6QA1N6&amp;#038;"&gt;PLOPD5&lt;/a&gt; book, on which Dragos, Markus and James Noble have been working recently :-)&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/dfcsACCU8so" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2007/03/episode-48-interview-dragos-manolescua/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><itunes:subtitle>In this Episode we discuss software architecture evaluation with Dragos Manolescu, an architect at Microsoft's patterns &amp; practices group.  - We start off the discussion by trying to define what software architecture evaluation is and when and you wan...</itunes:subtitle><itunes:summary>In this Episode we discuss software architecture evaluation with Dragos Manolescu, an architect at Microsoft's patterns &amp; practices group. 

We start off the discussion by trying to define what software architecture evaluation is and when and you want to evaluate an architecture in the system's lifecycle. We then make sure evaluators set the expectations for the evaluation process right - it is important to understand that architecture evaluation is typically not primarily a review of the technology decisions made for the architecture.

We then discuss the kinds of notations that are useful for describing architectures, and which of these are especially helpful for the evaluator. Next we look at the core of the architecture evaluation task, namely, the integration of the various stakeholders and their views. We also discuss real reviews from reviews that are staged "for show" only.

Next in the discussion is a brief look at the tools you can use for architecture evaluation, as well as a closer look at the various methods for achitecture evalualtion proposed by the Software Engineering Institute (SEI). We conclude the discussion by outlining how architecture evaluation fits into an agile development process.

... and finally, we briefly plug the PLOPD5 book, on which Dragos, Markus and James Noble have been working recently :-)</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>45:17</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/0MJvYGqL-Jc/seradio-episode48-dragosManolescu.mp3" fileSize="43478750" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2007/03/episode-48-interview-dragos-manolescua/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/0MJvYGqL-Jc/seradio-episode48-dragosManolescu.mp3" length="43478750" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode48-dragosManolescu.mp3</feedburner:origEnclosureLink></item><item><title>Episode 47: Interview Grady Booch</title><link>http://feedproxy.google.com/~r/se-radio/~3/NLhHFzk5XbU/</link><category>Episodes</category><category>architecture</category><category>Interview</category><category>patterns</category><category>product lines</category><category>software engineering</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Mon, 26 Feb 2007 01:16:58 PST</pubDate><guid isPermaLink="false"></guid><description>In this Episode we are happy to talk to &lt;a href="http://www.booch.com/architecture/contact.jsp"&gt;Grady Booch&lt;/a&gt;.  We started off by discussing his &lt;a href="http://www.booch.com/architecture/blog.jsp"&gt;Architecture Handbook&lt;/a&gt;, how it came into being, the progress, and how it will look like once it's finished. In this context we also looked at the issue of how to distinguish architecture from design. We then asked him about how "professional" software architecture is these days, as well as about the ubiquity of software product lines in industry. The next couple of minutes looked at the question of whether software development is an engineering discipline, craftsmanship or an art form, and we discussed the key qualifications of software developers. Grady then elaborated on the problems of developing in large teams as well as the potential limits of complexity we can tackle with software.
&lt;br /&gt;
&lt;br /&gt;
We then got back to a more technical discussion, where we looked at model-driven development, DSLs, etc. and the role of the UML in that context. Next was a discussion about scripting languages, and the current trend towards new languages. We then looked at component marketplaces and other forms of reuse, as well as the importance of OO these days and the relevance of AO. We concluded with a (small) outlook to the future.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/NLhHFzk5XbU" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2007/02/episode-47-interview-grady-booch/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><itunes:subtitle>In this Episode we are happy to talk to Grady Booch.  We started off by discussing his Architecture Handbook, how it came into being, the progress, and how it will look like once it's finished. In this context we also looked at the issue of how to dist...</itunes:subtitle><itunes:summary>In this Episode we are happy to talk to Grady Booch.  We started off by discussing his Architecture Handbook, how it came into being, the progress, and how it will look like once it's finished. In this context we also looked at the issue of how to distinguish architecture from design. We then asked him about how "professional" software architecture is these days, as well as about the ubiquity of software product lines in industry. The next couple of minutes looked at the question of whether software development is an engineering discipline, craftsmanship or an art form, and we discussed the key qualifications of software developers. Grady then elaborated on the problems of developing in large teams as well as the potential limits of complexity we can tackle with software.


We then got back to a more technical discussion, where we looked at model-driven development, DSLs, etc. and the role of the UML in that context. Next was a discussion about scripting languages, and the current trend towards new languages. We then looked at component marketplaces and other forms of reuse, as well as the importance of OO these days and the relevance of AO. We concluded with a (small) outlook to the future.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>40:31</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/vIIgwUWaQ3w/seradio-episode47-gradyBooch.mp3" fileSize="38890394" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2007/02/episode-47-interview-grady-booch/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/vIIgwUWaQ3w/seradio-episode47-gradyBooch.mp3" length="38890394" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode47-gradyBooch.mp3</feedburner:origEnclosureLink></item><item><title>Episode 46: Refactoring Pt. 1</title><link>http://feedproxy.google.com/~r/se-radio/~3/MLtehd-rdqU/</link><category>Episodes</category><category>refactoring</category><category>Technology Talk</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Fri, 16 Feb 2007 01:25:33 PST</pubDate><guid isPermaLink="false"></guid><description>Changeable software has been a goal of several technique in software engineering. Probably the most important is Refactoring, changing the code without changing the behaviour (or at least without breaking the tests). In this episode Eberhard talks with Martin Lippert about this technique. The episode covers a history of refactoring, a definition of code smells and how to actually do refactorings in your everyday work. Also some advanced topics - like the ROI of Refactoring or Refactoring in dynamic languages - are covered.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/MLtehd-rdqU" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2007/02/episode-46-refactoring-pt-1/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">2</slash:comments><itunes:subtitle>Changeable software has been a goal of several technique in software engineering. Probably the most important is Refactoring, changing the code without changing the behaviour (or at least without breaking the tests).</itunes:subtitle><itunes:summary>Changeable software has been a goal of several technique in software engineering. Probably the most important is Refactoring, changing the code without changing the behaviour (or at least without breaking the tests). In this episode Eberhard talks with Martin Lippert about this technique. The episode covers a history of refactoring, a definition of code smells and how to actually do refactorings in your everyday work. Also some advanced topics - like the ROI of Refactoring or Refactoring in dynamic languages - are covered.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>37:08</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/W33Kr4j7xrM/seradio-episode46-refactoring_pt1.mp3" fileSize="35649145" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2007/02/episode-46-refactoring-pt-1/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/W33Kr4j7xrM/seradio-episode46-refactoring_pt1.mp3" length="35649145" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode46-refactoring_pt1.mp3</feedburner:origEnclosureLink></item><item><title>Episode 45: Round Table on Ultra Large Scale Systems</title><link>http://feedproxy.google.com/~r/se-radio/~3/24Hkqdh97q0/</link><category>Episodes</category><category>architecture</category><category>distributed systems</category><category>Round Table</category><category>ultra large scale systems</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Tue, 06 Feb 2007 02:00:52 PST</pubDate><guid isPermaLink="false"></guid><description>This Episode is a round table discussion about Ultra-Large Scale Systems. In 2006, a number of authors (among them our guests Linda Northrop, Doug Schmidt, Kevin Sullivan, and Gregor Kiczales) have produced a report that addressed the following question: 

&lt;i&gt;Given the issues with today's software engineering, how can we build the systems of the future that are likely to have billions of lines of code? &lt;/i&gt;

In this episode, our guests discuss many of the issues that arise from this kind of system and provide an overview of the research areas that should be investigated in order to tackle the challenge. If you want to get more detailed information, you can read the ULS Report (PDF).&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/24Hkqdh97q0" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2007/02/episode-45-round-table-on-ultra-large-scale-systems/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">1</slash:comments><itunes:subtitle>This Episode is a round table discussion about Ultra-Large Scale Systems. In 2006, a number of authors (among them our guests Linda Northrop, Doug Schmidt, Kevin Sullivan, and Gregor Kiczales) have produced a report that addressed the following questio...</itunes:subtitle><itunes:summary>This Episode is a round table discussion about Ultra-Large Scale Systems. In 2006, a number of authors (among them our guests Linda Northrop, Doug Schmidt, Kevin Sullivan, and Gregor Kiczales) have produced a report that addressed the following question: 

Given the issues with today's software engineering, how can we build the systems of the future that are likely to have billions of lines of code? 

In this episode, our guests discuss many of the issues that arise from this kind of system and provide an overview of the research areas that should be investigated in order to tackle the challenge. If you want to get more detailed information, you can read the ULS Report (PDF).</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>52:24</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/hHiuOSPRGjI/seradio-episode45-ultraLargeScaleSystems.mp3" fileSize="50303187" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2007/02/episode-45-round-table-on-ultra-large-scale-systems/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/hHiuOSPRGjI/seradio-episode45-ultraLargeScaleSystems.mp3" length="50303187" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode45-ultraLargeScaleSystems.mp3</feedburner:origEnclosureLink></item><item><title>Episode 44: Interview Brian Goetz and David Holmes</title><link>http://feedproxy.google.com/~r/se-radio/~3/bqICWnvwuGw/</link><category>Episodes</category><category>concurrency</category><category>Interview</category><category>java</category><category>transactional memory</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Sat, 27 Jan 2007 02:06:26 PST</pubDate><guid isPermaLink="false"></guid><description>This is another episode on concurrency. We talk to two experts in the field, Brian Goetz and David Holmes about aspects of concurrency we hadn't really covered before. 

We start out by discussing liveness and safety and then continue to talk about synchronizers (latches, barriers, semaphores) as well as the importance of agreeing on protocols when developing concurrent applications. We then talked about thread confinement as a way of building thread-safe programs, as well as using functional programming and immutable data. The next set of topics covers various ways of how compilers can optimize the performance wrt. to concurrency, talking about techniques such as escape analysis as well as lock elision and coarsening. We then covered how to test concurrent programs and the consequences of the Java memory model on concurrency. We then went on to look at some more advanced topics, namely, lock-free programming and atomic variables. We also briefly discussed the idea of transactional memory. 

Finally, we looked at how better language support - specifically, a more declarative style of concurrent programming as e.g. in the Fortress language - can aid in improving the quality of concurrent programs.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/bqICWnvwuGw" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2007/01/episode-44-interview-brian-goetz-and-david-holmes/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">1</slash:comments><itunes:subtitle>This is another episode on concurrency. We talk to two experts in the field, Brian Goetz and David Holmes about aspects of concurrency we hadn't really covered before.  - We start out by discussing liveness and safety and then continue to talk about s...</itunes:subtitle><itunes:summary>This is another episode on concurrency. We talk to two experts in the field, Brian Goetz and David Holmes about aspects of concurrency we hadn't really covered before. 

We start out by discussing liveness and safety and then continue to talk about synchronizers (latches, barriers, semaphores) as well as the importance of agreeing on protocols when developing concurrent applications. We then talked about thread confinement as a way of building thread-safe programs, as well as using functional programming and immutable data. The next set of topics covers various ways of how compilers can optimize the performance wrt. to concurrency, talking about techniques such as escape analysis as well as lock elision and coarsening. We then covered how to test concurrent programs and the consequences of the Java memory model on concurrency. We then went on to look at some more advanced topics, namely, lock-free programming and atomic variables. We also briefly discussed the idea of transactional memory. 

Finally, we looked at how better language support - specifically, a more declarative style of concurrent programming as e.g. in the Fortress language - can aid in improving the quality of concurrent programs.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>49:27</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/H88VVgsw0C0/seradio-episode44-goetzAndHolmes.mp3" fileSize="47464826" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2007/01/episode-44-interview-brian-goetz-and-david-holmes/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/H88VVgsw0C0/seradio-episode44-goetzAndHolmes.mp3" length="47464826" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode44-goetzAndHolmes.mp3</feedburner:origEnclosureLink></item><item><title>Episode 43: eXtreme Programming Pt.2</title><link>http://feedproxy.google.com/~r/se-radio/~3/4q4jQZwETKg/</link><category>Episodes</category><category>agile</category><category>extreme programming</category><category>processes</category><category>Technology Talk</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Wed, 17 Jan 2007 02:08:50 PST</pubDate><guid isPermaLink="false"></guid><description>This is the second part of our two part discussion of the eXtreme Programming development methodology. While the first part introduced the values, principles and basic practices, this time Arno and Alex speak about the practices that set the context for an XP project and how to get started, and they discuss some FAQs they often get when introducing XP.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/4q4jQZwETKg" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2007/01/episode-43-extreme-programming-pt-2/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><itunes:subtitle>This is the second part of our two part discussion of the eXtreme Programming development methodology. While the first part introduced the values, principles and basic practices, this time Arno and Alex speak about the practices that set the context fo...</itunes:subtitle><itunes:summary>This is the second part of our two part discussion of the eXtreme Programming development methodology. While the first part introduced the values, principles and basic practices, this time Arno and Alex speak about the practices that set the context for an XP project and how to get started, and they discuss some FAQs they often get when introducing XP.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>1:14:32</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/gNmhBUpa8cI/seradio-episode43-eXtremeProgramming_pt2.mp3" fileSize="71558919" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2007/01/episode-43-extreme-programming-pt-2/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/gNmhBUpa8cI/seradio-episode43-eXtremeProgramming_pt2.mp3" length="71558919" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode43-eXtremeProgramming_pt2.mp3</feedburner:origEnclosureLink></item><item><title>Episode 42: Interview Gregor Hohpe</title><link>http://feedproxy.google.com/~r/se-radio/~3/y-D4R3BN3_c/</link><category>Episodes</category><category>eai</category><category>Interview</category><category>messaging</category><category>middleware</category><category>soa</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Sun, 07 Jan 2007 02:13:11 PST</pubDate><guid isPermaLink="false"></guid><description>In this episode, Gregor Hohpe gives us a great introduction to enterprise messaging based on his EAI Patterns book. Before we started discusssing the patterns in his book, we characterized messaging and talked about the various interaction styles. We also contrasted the messaging architectural style with an RPC based approach. We then took a look at the relationship to SOA, the role of contracts and the orchestration-vs-choreography discussion. We briefly discussed the nature of pattern languages before we then went through the different section in the book. There are six main sections: channel, message, routing, transfomation, endpoint as well as management and monitoring. We discussed the core patterns for each of these sections. This should give listeners a good high-level view of message-based systems. We concluded the discussion by looking at the critical importance of systems management and monitoring.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/y-D4R3BN3_c" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2007/01/episode-42-interview-gregor-hohpe/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><itunes:subtitle>In this episode, Gregor Hohpe gives us a great introduction to enterprise messaging based on his EAI Patterns book. Before we started discusssing the patterns in his book, we characterized messaging and talked about the various interaction styles.</itunes:subtitle><itunes:summary>In this episode, Gregor Hohpe gives us a great introduction to enterprise messaging based on his EAI Patterns book. Before we started discusssing the patterns in his book, we characterized messaging and talked about the various interaction styles. We also contrasted the messaging architectural style with an RPC based approach. We then took a look at the relationship to SOA, the role of contracts and the orchestration-vs-choreography discussion. We briefly discussed the nature of pattern languages before we then went through the different section in the book. There are six main sections: channel, message, routing, transfomation, endpoint as well as management and monitoring. We discussed the core patterns for each of these sections. This should give listeners a good high-level view of message-based systems. We concluded the discussion by looking at the critical importance of systems management and monitoring.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>1:04:55</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/vZT-JKaW6LA/seradio-episode42-gregorHohpe.mp3" fileSize="62327873" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2007/01/episode-42-interview-gregor-hohpe/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/vZT-JKaW6LA/seradio-episode42-gregorHohpe.mp3" length="62327873" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode42-gregorHohpe.mp3</feedburner:origEnclosureLink></item><item><title>Episode 41: Architecture Patterns (Architecture Pt. 4)</title><link>http://feedproxy.google.com/~r/se-radio/~3/kUhcYkU7xUk/</link><category>Episodes</category><category>architecture</category><category>patterns</category><category>Technology Talk</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Wed, 27 Dec 2006 02:14:51 PST</pubDate><guid isPermaLink="false"></guid><description>This is the fourth and final episode on the fundamentals of Software Architecture. We talk mainly about architectural styles and patterns, as introduced in the POSA 1 Book. We also discuss a little bit the process of actually using those patterns for architecting systems.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/kUhcYkU7xUk" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2006/12/episode-41-architecture-patterns-architecture-pt-4/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><itunes:subtitle>This is the fourth and final episode on the fundamentals of Software Architecture. We talk mainly about architectural styles and patterns, as introduced in the POSA 1 Book. We also discuss a little bit the process of actually using those patterns for a...</itunes:subtitle><itunes:summary>This is the fourth and final episode on the fundamentals of Software Architecture. We talk mainly about architectural styles and patterns, as introduced in the POSA 1 Book. We also discuss a little bit the process of actually using those patterns for architecting systems.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>47:21</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/mM-EZDIPtis/seradio-episode41-architecture_pt4.mp3" fileSize="45460294" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2006/12/episode-41-architecture-patterns-architecture-pt-4/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/mM-EZDIPtis/seradio-episode41-architecture_pt4.mp3" length="45460294" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode41-architecture_pt4.mp3</feedburner:origEnclosureLink></item><item><title>Episode 40: Interview Werner Vogels</title><link>http://feedproxy.google.com/~r/se-radio/~3/sJ__Tl4LnkU/</link><category>Episodes</category><category>architecture</category><category>distributed systems</category><category>enterprise</category><category>Interview</category><category>soa</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Sat, 16 Dec 2006 03:58:29 PST</pubDate><guid isPermaLink="false"></guid><description>This episode is an interview with Werner Vogels, the CTO of amazon.com. We first talked about what scalability is, and which aspects there are to scalability. We then took a brief look at the technologies used at amazon, specifically, the middleware systems and the issue of vendor lock-in. Web services, and the role of SOA was the next topic. Then we covered what a service actually is add Werner explained the term "pizza teams". Testing and Deployment was the next topic followed by a look at architectural characteristics of scalable systems, the value of simplicity and the CAP theorem. We concluded the discussion with a brief look at the future of distributed systems&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/sJ__Tl4LnkU" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2006/12/episode-40-interview-werner-vogels/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">3</slash:comments><itunes:subtitle>This episode is an interview with Werner Vogels, the CTO of amazon.com. We first talked about what scalability is, and which aspects there are to scalability. We then took a brief look at the technologies used at amazon, specifically,</itunes:subtitle><itunes:summary>This episode is an interview with Werner Vogels, the CTO of amazon.com. We first talked about what scalability is, and which aspects there are to scalability. We then took a brief look at the technologies used at amazon, specifically, the middleware systems and the issue of vendor lock-in. Web services, and the role of SOA was the next topic. Then we covered what a service actually is add Werner explained the term "pizza teams". Testing and Deployment was the next topic followed by a look at architectural characteristics of scalable systems, the value of simplicity and the CAP theorem. We concluded the discussion with a brief look at the future of distributed systems</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>40:41</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/rS4bzpkXw6g/seradio-episode40-wernerVogels.mp3" fileSize="39058413" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2006/12/episode-40-interview-werner-vogels/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/rS4bzpkXw6g/seradio-episode40-wernerVogels.mp3" length="39058413" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode40-wernerVogels.mp3</feedburner:origEnclosureLink></item><item><title>Episode 39: Interview Steve Vinoski</title><link>http://feedproxy.google.com/~r/se-radio/~3/_-eYxzcpABY/</link><category>Episodes</category><category>corba</category><category>distributed systems</category><category>Interview</category><category>messaging</category><category>middleware</category><category>soa</category><category>web services</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Wed, 06 Dec 2006 04:01:27 PST</pubDate><guid isPermaLink="false"></guid><description>This episode is an interview with Steve Vinoski. Steve works as the Chief Engineer for IONA. He's what you'd call a middleware guru, he was for example deeply involved with CORBA. So, this interview centers mainly around middleware. We begin by talking about his own history wrt. middleare and ORBs and how ORBs evolved over time. We then talked about whether coarse-grained, stateless components might be a better abstraction for distributed systems than "objects". We then covered the future of CORBA, it's use in ethe embedded space as well as the practical relevance of the POSA patterns when building ORBs. Then we switched topics and addressed the role of web services as a "middleware middleware" and the maturity of WS-* specifications. We then looked at what Steve is working on these days, which is e.g. the Advanced Message Queueing Protocol (AMQP) as well as dynamic languages. We concluded the interwiew with his view on SOA.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/_-eYxzcpABY" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2006/12/episode-39-interview-steve-vinoski/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><itunes:subtitle>This episode is an interview with Steve Vinoski. Steve works as the Chief Engineer for IONA. He's what you'd call a middleware guru, he was for example deeply involved with CORBA. So, this interview centers mainly around middleware.</itunes:subtitle><itunes:summary>This episode is an interview with Steve Vinoski. Steve works as the Chief Engineer for IONA. He's what you'd call a middleware guru, he was for example deeply involved with CORBA. So, this interview centers mainly around middleware. We begin by talking about his own history wrt. middleare and ORBs and how ORBs evolved over time. We then talked about whether coarse-grained, stateless components might be a better abstraction for distributed systems than "objects". We then covered the future of CORBA, it's use in ethe embedded space as well as the practical relevance of the POSA patterns when building ORBs. Then we switched topics and addressed the role of web services as a "middleware middleware" and the maturity of WS-* specifications. We then looked at what Steve is working on these days, which is e.g. the Advanced Message Queueing Protocol (AMQP) as well as dynamic languages. We concluded the interwiew with his view on SOA.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>38:37</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/kotUIZSg5m4/seradio-episode39-steveVinoski.mp3" fileSize="37072720" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2006/12/episode-39-interview-steve-vinoski/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/kotUIZSg5m4/seradio-episode39-steveVinoski.mp3" length="37072720" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode39-steveVinoski.mp3</feedburner:origEnclosureLink></item><item><title>Episode 38: Interview James Noble</title><link>http://feedproxy.google.com/~r/se-radio/~3/zZA4foA9Iyg/</link><category>Episodes</category><category>agile</category><category>Interview</category><category>post moden programming</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Sun, 26 Nov 2006 04:03:47 PST</pubDate><guid isPermaLink="false"></guid><description>Designers, programmers, engineers, we must all return to programming! 

Very few programmers tend to see their (sometimes rather general) difficulties as the core of the subject and as a result there is a widely held consensus as to what programming is really about. If these notes prove to be a source of recognition or to give you the appreciation that we have simply written down what you already know about the programmer's trade, some of our goals will have been reached.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/zZA4foA9Iyg" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2006/11/episode-38-interview-james-noble/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><itunes:subtitle>Designers, programmers, engineers, we must all return to programming!  - Very few programmers tend to see their (sometimes rather general) difficulties as the core of the subject and as a result there is a widely held consensus as to what programming ...</itunes:subtitle><itunes:summary>Designers, programmers, engineers, we must all return to programming! 

Very few programmers tend to see their (sometimes rather general) difficulties as the core of the subject and as a result there is a widely held consensus as to what programming is really about. If these notes prove to be a source of recognition or to give you the appreciation that we have simply written down what you already know about the programmer's trade, some of our goals will have been reached.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>20:52</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/3kTQJTnRN24/seradio-episode38-jamesNoble.mp3" fileSize="20028314" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2006/11/episode-38-interview-james-noble/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/3kTQJTnRN24/seradio-episode38-jamesNoble.mp3" length="20028314" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode38-jamesNoble.mp3</feedburner:origEnclosureLink></item><item><title>Episode 37: eXtreme Programming Pt.1</title><link>http://feedproxy.google.com/~r/se-radio/~3/AkS7QKIblPs/</link><category>Episodes</category><category>agile</category><category>extreme programming</category><category>processes</category><category>Technology Talk</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Sat, 18 Nov 2006 04:07:54 PST</pubDate><guid isPermaLink="false"></guid><description>This is the first of two episodes where Arno and Alex discuss eXtreme Programming in se-radio's development process track. eXtreme Programming (XP) revolutionized the way of thinking about software development methodologies and helped to make the agile movement popular. In this episode they discuss the very basics of XP, its value system, principles and the basic practices used in an XP project. The second episode will continue the introduction adding the missing practices and how to introduce XP into projects.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/AkS7QKIblPs" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2006/11/episode-37-extreme-programming-pt-1/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">2</slash:comments><itunes:subtitle>This is the first of two episodes where Arno and Alex discuss eXtreme Programming in se-radio's development process track. eXtreme Programming (XP) revolutionized the way of thinking about software development methodologies and helped to make the agile...</itunes:subtitle><itunes:summary>This is the first of two episodes where Arno and Alex discuss eXtreme Programming in se-radio's development process track. eXtreme Programming (XP) revolutionized the way of thinking about software development methodologies and helped to make the agile movement popular. In this episode they discuss the very basics of XP, its value system, principles and the basic practices used in an XP project. The second episode will continue the introduction adding the missing practices and how to introduce XP into projects.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>1:02:54</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/pwiDTq2WusI/seradio-episode37-extremeProgramming_pt1.mp3" fileSize="60386452" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2006/11/episode-37-extreme-programming-pt-1/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/pwiDTq2WusI/seradio-episode37-extremeProgramming_pt1.mp3" length="60386452" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode37-extremeProgramming_pt1.mp3</feedburner:origEnclosureLink></item><item><title>Episode 36: Interview Guy Steele</title><link>http://feedproxy.google.com/~r/se-radio/~3/EhssfZVRia8/</link><category>Episodes</category><category>concurrency</category><category>fortress</category><category>Interview</category><category>languages</category><category>lisp</category><category>occam</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Fri, 10 Nov 2006 04:11:50 PST</pubDate><guid isPermaLink="false"></guid><description>This episode is an interview with Guy L. Steele Jr.. Guy is a Sun Fellow and heads the Programming Language Research Group within Sun, and a generally well known "programming language guy" (see here for details). We briefly talk about Lisp and the resurgence of dynamic languages before we delve into the main topic, the Fortress programming language he is working on. Fortress is a language intended to replace Fortran as a scientific computing language. We talk about how mathematical notations, syntax extensio and built-in support for parallelism are crucial properties of such a language. We then briefly talk about potentials for compiler optimization before taking a closer look at the type system (static typing, type inference), traits and contract specification as well as first-class support for hierarchical components. We conclude the discussion with a look at automatic partitioning and distribuion of concurrent algorithms and a brief look at the future roadmap for the Fortress language.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/EhssfZVRia8" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2006/11/episode-36-interview-guy-steele/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">1</slash:comments><itunes:subtitle>This episode is an interview with Guy L. Steele Jr.. Guy is a Sun Fellow and heads the Programming Language Research Group within Sun, and a generally well known "programming language guy" (see here for details).</itunes:subtitle><itunes:summary>This episode is an interview with Guy L. Steele Jr.. Guy is a Sun Fellow and heads the Programming Language Research Group within Sun, and a generally well known "programming language guy" (see here for details). We briefly talk about Lisp and the resurgence of dynamic languages before we delve into the main topic, the Fortress programming language he is working on. Fortress is a language intended to replace Fortran as a scientific computing language. We talk about how mathematical notations, syntax extensio and built-in support for parallelism are crucial properties of such a language. We then briefly talk about potentials for compiler optimization before taking a closer look at the type system (static typing, type inference), traits and contract specification as well as first-class support for hierarchical components. We conclude the discussion with a look at automatic partitioning and distribuion of concurrent algorithms and a brief look at the future roadmap for the Fortress language.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>28:28</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/2lkcjjqec0I/seradio-episode36-guySteele.mp3" fileSize="27330061" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2006/11/episode-36-interview-guy-steele/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/2lkcjjqec0I/seradio-episode36-guySteele.mp3" length="27330061" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode36-guySteele.mp3</feedburner:origEnclosureLink></item><item><title>Episode 35: Roadmap</title><link>http://feedproxy.google.com/~r/se-radio/~3/Ctrzu2UlQKk/</link><category>Episodes</category><category>News</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Wed, 08 Nov 2006 04:13:28 PST</pubDate><guid isPermaLink="false"></guid><description>This episode mainly outlines the upcoming programming and interviews.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/Ctrzu2UlQKk" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2006/11/episode-35-roadmap/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><itunes:subtitle>This episode mainly outlines the upcoming programming and interviews.</itunes:subtitle><itunes:summary>This episode mainly outlines the upcoming programming and interviews.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>10:36</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/UeRdkoOsM78/seradio-episode35-roadmap.mp3" fileSize="10176598" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2006/11/episode-35-roadmap/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/UeRdkoOsM78/seradio-episode35-roadmap.mp3" length="10176598" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode35-roadmap.mp3</feedburner:origEnclosureLink></item><item><title>Episode 34: Enterprise Architecture</title><link>http://feedproxy.google.com/~r/se-radio/~3/NjjUSVBQgBA/</link><category>Episodes</category><category>architecture</category><category>enterprise</category><category>operations</category><category>Technology/Guest</category><category>web apps</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Thu, 02 Nov 2006 04:17:02 PST</pubDate><guid isPermaLink="false"></guid><description>In this episode Markus and our Guest Andy Longshaw talk about enterprise architecture. More specifically, we talk about some of the patterns in Andy Longshaw's and Paul Dyson's book Architecting Enterprise Solutions: Patterns for High-Capability Internet-based Systems. These includes things like replication, load balancing, monitoring and application management.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/NjjUSVBQgBA" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2006/11/episode-34-enterprise-architecture/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><itunes:subtitle>In this episode Markus and our Guest Andy Longshaw talk about enterprise architecture. More specifically, we talk about some of the patterns in Andy Longshaw's and Paul Dyson's book Architecting Enterprise Solutions: Patterns for High-Capability Intern...</itunes:subtitle><itunes:summary>In this episode Markus and our Guest Andy Longshaw talk about enterprise architecture. More specifically, we talk about some of the patterns in Andy Longshaw's and Paul Dyson's book Architecting Enterprise Solutions: Patterns for High-Capability Internet-based Systems. These includes things like replication, load balancing, monitoring and application management.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>1:01:13</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/BwMFtilifl0/seradio-episode34-enterpriseArchitectureWithAndyLongshaw.mp3" fileSize="58768114" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2006/11/episode-34-enterprise-architecture/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/BwMFtilifl0/seradio-episode34-enterpriseArchitectureWithAndyLongshaw.mp3" length="58768114" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode34-enterpriseArchitectureWithAndyLongshaw.mp3</feedburner:origEnclosureLink></item><item><title>Episode 33: Service Oriented Architecture, Pt.2b</title><link>http://feedproxy.google.com/~r/se-radio/~3/h1voyCyK-0g/</link><category>Episodes</category><category>architecture</category><category>business</category><category>components</category><category>jbi</category><category>sca</category><category>services</category><category>soa</category><category>Technology Talk</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Mon, 23 Oct 2006 06:19:03 PDT</pubDate><guid isPermaLink="false"></guid><description>This is the second snippet of the SOA 2 double-episode. Eberhard and Markus continue the discussion with the issue of service reuse and a couple of development process issues. We also look at the duality between infrastructure development and application development in the context of an SOA. We then discuss the great spaghetti misunderstanding :-). We conclude this episode with a look at how to integrate BPM into the conceptual SOA framework we've built up to now, and we'll also briefly skim over a number of technologies related to SOA. 

Note that this episode, as well as the last one, is based on a set of slides; these can be downloaded from here. This episode covers slides 39 through 74.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/h1voyCyK-0g" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2006/10/episode-33-service-oriented-architecture-pt-2b/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">1</slash:comments><itunes:subtitle>This is the second snippet of the SOA 2 double-episode. Eberhard and Markus continue the discussion with the issue of service reuse and a couple of development process issues. We also look at the duality between infrastructure development and applicati...</itunes:subtitle><itunes:summary>This is the second snippet of the SOA 2 double-episode. Eberhard and Markus continue the discussion with the issue of service reuse and a couple of development process issues. We also look at the duality between infrastructure development and application development in the context of an SOA. We then discuss the great spaghetti misunderstanding :-). We conclude this episode with a look at how to integrate BPM into the conceptual SOA framework we've built up to now, and we'll also briefly skim over a number of technologies related to SOA. 

Note that this episode, as well as the last one, is based on a set of slides; these can be downloaded from here. This episode covers slides 39 through 74.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>45:40</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/yY2EQMF3ABg/seradio-episode33-soa_pt2b.mp3" fileSize="43834851" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2006/10/episode-33-service-oriented-architecture-pt-2b/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/yY2EQMF3ABg/seradio-episode33-soa_pt2b.mp3" length="43834851" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode33-soa_pt2b.mp3</feedburner:origEnclosureLink></item><item><title>Episode 32: Service Oriented Architecture, Pt.2a</title><link>http://feedproxy.google.com/~r/se-radio/~3/c-vYoRQhu38/</link><category>Episodes</category><category>architecture</category><category>components</category><category>services</category><category>soa</category><category>Technology Talk</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Fri, 13 Oct 2006 06:20:46 PDT</pubDate><guid isPermaLink="false"></guid><description>In this, as well as in the next episode Eberhard and Markus continue their discussion about SOA (the episode got too long, so we had to split it into two ... SOA 2a and SOA 2b). In this episode, we talk about the various perspectives on SOA (CBD, EAI, BPM), about fundamental requirements towards an SOA, and we discuss the role of models in defining sustainable architectures. We also discuss how a programming model based on the described approach typically looks like. We then discuss a number of issues any large-scale SOA faces (and for which the SOA paradigm does not really provide an out-of-the-box solution: In this episode we discuss data type ownership and (weak) typing of data types.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/c-vYoRQhu38" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2006/10/episode-32-service-oriented-architecture-pt-2a/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><itunes:subtitle>In this, as well as in the next episode Eberhard and Markus continue their discussion about SOA (the episode got too long, so we had to split it into two ... SOA 2a and SOA 2b). In this episode, we talk about the various perspectives on SOA (CBD, EAI,</itunes:subtitle><itunes:summary>In this, as well as in the next episode Eberhard and Markus continue their discussion about SOA (the episode got too long, so we had to split it into two ... SOA 2a and SOA 2b). In this episode, we talk about the various perspectives on SOA (CBD, EAI, BPM), about fundamental requirements towards an SOA, and we discuss the role of models in defining sustainable architectures. We also discuss how a programming model based on the described approach typically looks like. We then discuss a number of issues any large-scale SOA faces (and for which the SOA paradigm does not really provide an out-of-the-box solution: In this episode we discuss data type ownership and (weak) typing of data types.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>51:53</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/o-oMEldtwCw/seradio-episode32-soa_pt2a.mp3" fileSize="49804980" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2006/10/episode-32-service-oriented-architecture-pt-2a/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/o-oMEldtwCw/seradio-episode32-soa_pt2a.mp3" length="49804980" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode32-soa_pt2a.mp3</feedburner:origEnclosureLink></item><item><title>Episode 31: Agile Documentation</title><link>http://feedproxy.google.com/~r/se-radio/~3/bekkR3VqwLg/</link><category>Episodes</category><category>agile</category><category>documentation</category><category>Technology/Guest</category><category>typography</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Tue, 03 Oct 2006 06:27:15 PDT</pubDate><guid isPermaLink="false"></guid><description>In this episode, our guest Andreas Rueping and Markus talk about documenting software. While this is a topic that many people don't like or consider fun, it is nonetheless very important. Based on his book, Agile Documentation, we talk about various aspects documenting software such as what to document, when to document, which media to use as well as specifically a number of layouting tips for nice documents.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/bekkR3VqwLg" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2006/10/episode-31-agile-documentation/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">1</slash:comments><itunes:subtitle>In this episode, our guest Andreas Rueping and Markus talk about documenting software. While this is a topic that many people don't like or consider fun, it is nonetheless very important. Based on his book, Agile Documentation,</itunes:subtitle><itunes:summary>In this episode, our guest Andreas Rueping and Markus talk about documenting software. While this is a topic that many people don't like or consider fun, it is nonetheless very important. Based on his book, Agile Documentation, we talk about various aspects documenting software such as what to document, when to document, which media to use as well as specifically a number of layouting tips for nice documents.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>44:02</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/QLVE2AoF5-g/seradio-episode31-agileDocumentationWithAndreasRueping.mp3" fileSize="42277535" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2006/10/episode-31-agile-documentation/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/QLVE2AoF5-g/seradio-episode31-agileDocumentationWithAndreasRueping.mp3" length="42277535" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode31-agileDocumentationWithAndreasRueping.mp3</feedburner:origEnclosureLink></item><item><title>Episode 30: Architecture Pt.3</title><link>http://feedproxy.google.com/~r/se-radio/~3/qEpMO0AXJug/</link><category>Episodes</category><category>architecture</category><category>Technology Talk</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Fri, 22 Sep 2006 15:00:00 PDT</pubDate><guid isPermaLink="false"></guid><description>In this third Episode on software architecture, Michael and Markus talk about the basic tools that an architect uses when architecting systems. These tools include things like separation, abstraction, compression and sharing. We also relate these tools to the quality attributes we introduced in previous archtecture episodes.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/qEpMO0AXJug" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2006/09/episode-30-architecture-pt-3/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><itunes:subtitle>In this third Episode on software architecture, Michael and Markus talk about the basic tools that an architect uses when architecting systems. These tools include things like separation, abstraction, compression and sharing.</itunes:subtitle><itunes:summary>In this third Episode on software architecture, Michael and Markus talk about the basic tools that an architect uses when architecting systems. These tools include things like separation, abstraction, compression and sharing. We also relate these tools to the quality attributes we introduced in previous archtecture episodes.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>30:08</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/ia2EifvBjBg/seradio-episode30-architecture_pt3.mp3" fileSize="28930304" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2006/09/episode-30-architecture-pt-3/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/ia2EifvBjBg/seradio-episode30-architecture_pt3.mp3" length="28930304" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode30-architecture_pt3.mp3</feedburner:origEnclosureLink></item><item><title>Episode 29: Concurrency Pt.3</title><link>http://feedproxy.google.com/~r/se-radio/~3/WZ7h3kzRARY/</link><category>Episodes</category><category>concurrency</category><category>Technology Talk</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Tue, 12 Sep 2006 15:00:00 PDT</pubDate><guid isPermaLink="false"></guid><description>The third part of our concurrency series by Michael and Alexander discusses how to build highly scalable servers. The discussion focusses especially on event-driven servers. As possible solution patterns a reactor-based design is suggested along-side several patterns for multi-threading issues: Reader/Writers Locks, Thread Pools, and Leader/Followers.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/WZ7h3kzRARY" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2006/09/episode-29-concurrency-pt-3/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">1</slash:comments><itunes:subtitle>The third part of our concurrency series by Michael and Alexander discusses how to build highly scalable servers. The discussion focusses especially on event-driven servers. As possible solution patterns a reactor-based design is suggested along-side s...</itunes:subtitle><itunes:summary>The third part of our concurrency series by Michael and Alexander discusses how to build highly scalable servers. The discussion focusses especially on event-driven servers. As possible solution patterns a reactor-based design is suggested along-side several patterns for multi-threading issues: Reader/Writers Locks, Thread Pools, and Leader/Followers.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>36:28</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/hcBR3AcHg-A/seradio-episode29-concurrency_pt3.mp3" fileSize="35010560" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2006/09/episode-29-concurrency-pt-3/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/hcBR3AcHg-A/seradio-episode29-concurrency_pt3.mp3" length="35010560" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode29-concurrency_pt3.mp3</feedburner:origEnclosureLink></item><item><title>Episode 28: Type Systems</title><link>http://feedproxy.google.com/~r/se-radio/~3/6x3MUKcafrE/</link><category>Episodes</category><category>dynamic languages</category><category>Technology Talk</category><category>type systems</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Sat, 02 Sep 2006 15:00:00 PDT</pubDate><guid isPermaLink="false"></guid><description>In recent episodes we have discusses statically and dynamically typed languages and domain specific languages - topics that are much talked about in the community at the moment. In this episode we look at the foundation of programming languages : types. We explain what a type actually is, how type systems work and what polymorphism works.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/6x3MUKcafrE" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2006/09/episode-28-type-systems/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">1</slash:comments><itunes:subtitle>In recent episodes we have discusses statically and dynamically typed languages and domain specific languages - topics that are much talked about in the community at the moment. In this episode we look at the foundation of programming languages : types.</itunes:subtitle><itunes:summary>In recent episodes we have discusses statically and dynamically typed languages and domain specific languages - topics that are much talked about in the community at the moment. In this episode we look at the foundation of programming languages : types. We explain what a type actually is, how type systems work and what polymorphism works.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>46:52</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/Wz1Th0ozeMA/seradio-episode28-typeSystems.mp3" fileSize="44993434" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2006/09/episode-28-type-systems/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/Wz1Th0ozeMA/seradio-episode28-typeSystems.mp3" length="44993434" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode28-typeSystems.mp3</feedburner:origEnclosureLink></item><item><title>Episode 27: Service Oriented Architecture Pt.1</title><link>http://feedproxy.google.com/~r/se-radio/~3/TZrK4sRF3u4/</link><category>Episodes</category><category>soa</category><category>Technology Talk</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Wed, 23 Aug 2006 15:00:00 PDT</pubDate><guid isPermaLink="false"></guid><description>SOA (Service Oriented Architecture) appears to be just another hype - after all we have been building distributed systems for quite a while now. But the real value of SOA is non-technical. In this episode Eberhard and Markus discuss the advantages and disadvantages, what SOA actually is and how it compares to other approaches that have been tried out before.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/TZrK4sRF3u4" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2006/08/episode-27-service-oriented-architecture-pt-1/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><itunes:subtitle>SOA (Service Oriented Architecture) appears to be just another hype - after all we have been building distributed systems for quite a while now. But the real value of SOA is non-technical. In this episode Eberhard and Markus discuss the advantages and ...</itunes:subtitle><itunes:summary>SOA (Service Oriented Architecture) appears to be just another hype - after all we have been building distributed systems for quite a while now. But the real value of SOA is non-technical. In this episode Eberhard and Markus discuss the advantages and disadvantages, what SOA actually is and how it compares to other approaches that have been tried out before.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>48:49</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/y9Yzsbz-400/seradio-episode27-soa_pt1.mp3" fileSize="46870417" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2006/08/episode-27-service-oriented-architecture-pt-1/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/y9Yzsbz-400/seradio-episode27-soa_pt1.mp3" length="46870417" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode27-soa_pt1.mp3</feedburner:origEnclosureLink></item><item><title>Episode 26: Interview Jutta Eckstein</title><link>http://feedproxy.google.com/~r/se-radio/~3/XPPHdG3n72Y/</link><category>Episodes</category><category>agile</category><category>extreme programming</category><category>Interview</category><category>processes</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Sun, 13 Aug 2006 15:00:00 PDT</pubDate><guid isPermaLink="false"></guid><description>In this Episode, Arno, Bernd and Markus interview Jutta Eckstein. Jutta is a pioneer and expert on using Agile software development, specifically in larger teams. In the interview we talk about the agile manifesto, the role of personal relationships and trust in software projects, differences between agility in the small and in the large, as well as offshoring.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/XPPHdG3n72Y" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2006/08/episode-26-interview-jutta-eckstein/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">1</slash:comments><itunes:subtitle>In this Episode, Arno, Bernd and Markus interview Jutta Eckstein. Jutta is a pioneer and expert on using Agile software development, specifically in larger teams. In the interview we talk about the agile manifesto,</itunes:subtitle><itunes:summary>In this Episode, Arno, Bernd and Markus interview Jutta Eckstein. Jutta is a pioneer and expert on using Agile software development, specifically in larger teams. In the interview we talk about the agile manifesto, the role of personal relationships and trust in software projects, differences between agility in the small and in the large, as well as offshoring.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>45:40</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/wY9iQE9nYHk/seradio-episode26-juttaEckstein.mp3" fileSize="43832761" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2006/08/episode-26-interview-jutta-eckstein/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/wY9iQE9nYHk/seradio-episode26-juttaEckstein.mp3" length="43832761" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode26-juttaEckstein.mp3</feedburner:origEnclosureLink></item><item><title>Episode 25: Architecture Pt. 2</title><link>http://feedproxy.google.com/~r/se-radio/~3/afsLcQoGsyA/</link><category>Episodes</category><category>architecture</category><category>Technology Talk</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Thu, 03 Aug 2006 15:00:00 PDT</pubDate><guid isPermaLink="false"></guid><description>In this Episode, Michael and Markus continue the discussion about the fundamentals of software architecture (we're doing it without Alex, because it is really hard to find a suitable time for all of us on the phone :-)). We talk about the various quality attributes (such as performance, scalability, maintainability and many more) and how they relate to each other.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/afsLcQoGsyA" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2006/08/episode-25-architecture-pt-2/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">1</slash:comments><itunes:subtitle>In this Episode, Michael and Markus continue the discussion about the fundamentals of software architecture (we're doing it without Alex, because it is really hard to find a suitable time for all of us on the phone :-)).</itunes:subtitle><itunes:summary>In this Episode, Michael and Markus continue the discussion about the fundamentals of software architecture (we're doing it without Alex, because it is really hard to find a suitable time for all of us on the phone :-)). We talk about the various quality attributes (such as performance, scalability, maintainability and many more) and how they relate to each other.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>32:56</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/S3JPQ8gAw3U/seradio-episode25-architecture_pt2.mp3" fileSize="31608345" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2006/08/episode-25-architecture-pt-2/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/S3JPQ8gAw3U/seradio-episode25-architecture_pt2.mp3" length="31608345" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode25-architecture_pt2.mp3</feedburner:origEnclosureLink></item><item><title>Episode 24: Development Processes Pt.1</title><link>http://feedproxy.google.com/~r/se-radio/~3/DGKa8f9cCuc/</link><category>Episodes</category><category>agile</category><category>extreme programming</category><category>processes</category><category>scrum</category><category>Technology Talk</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Mon, 24 Jul 2006 15:00:00 PDT</pubDate><guid isPermaLink="false"></guid><description>In this episode Arno and Alex talk about the basics of software development processes. They discuss why and when software development processes are needed and also why some developers don't like them. They discuss the theories behind different processes and talk about defined vs empiric processes in general. This episode is the first in a row that will later on describe specific processes like eXtreme programming or the unified process.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/DGKa8f9cCuc" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2006/07/episode-24-development-processes-pt-1/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">8</slash:comments><itunes:subtitle>In this episode Arno and Alex talk about the basics of software development processes. They discuss why and when software development processes are needed and also why some developers don't like them. They discuss the theories behind different processe...</itunes:subtitle><itunes:summary>In this episode Arno and Alex talk about the basics of software development processes. They discuss why and when software development processes are needed and also why some developers don't like them. They discuss the theories behind different processes and talk about defined vs empiric processes in general. This episode is the first in a row that will later on describe specific processes like eXtreme programming or the unified process.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>47:11</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/C57TuMjFHAk/seradio-episode24-developmentProcesses_pt1.mp3" fileSize="45292692" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2006/07/episode-24-development-processes-pt-1/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/C57TuMjFHAk/seradio-episode24-developmentProcesses_pt1.mp3" length="45292692" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode24-developmentProcesses_pt1.mp3</feedburner:origEnclosureLink></item><item><title>Episode 23: Architecture Pt. 1</title><link>http://feedproxy.google.com/~r/se-radio/~3/fP2yn6yyPaI/</link><category>Episodes</category><category>architecture</category><category>Technology Talk</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Fri, 14 Jul 2006 15:00:00 PDT</pubDate><guid isPermaLink="false"></guid><description>This is the first of a series of Episodes on Software Architecture. Alex, Michael and Markus talk about rather fundamental topics in this episode, we'll go into much more detail in subsequent episodes in that series. Topics in this episode include:
&lt;ul&gt;
 &lt;li&gt;What is architecture, how is it different from design&lt;/li&gt;
 &lt;li&gt;what different kinds of architecture are there in addition to software architecture&lt;/li&gt;
 &lt;li&gt;the role of the architect, do we have one or more?&lt;/li&gt;
 &lt;li&gt;architecture in agile software development&lt;/li&gt;
 &lt;li&gt;tasks of the architect&lt;/li&gt;
 &lt;li&gt;architect vs. the technical project lead&lt;/li&gt;
 &lt;li&gt;architecture and project politics&lt;/li&gt;
 &lt;li&gt;architecture requirements, estimating, team assembling&lt;/li&gt;
&lt;/ul&gt;
There aren't too many good references for this general architecture discussion. You might want to take a look at &lt;a href="http://www.amazon.com/gp/product/0321154959/"&gt;Software Architecture in Practice&lt;/a&gt; by Len Bass, or, if you speak German, at the book &lt;a href="http://www.amazon.de/gp/product/3827415349/028-4688515-4293347"&gt;Software-Architektur&lt;/a&gt; by Vogel, Arnold, Chugtai, Ihler, Mehlig, Neumann, Voelter and Zdun.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/fP2yn6yyPaI" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2006/07/episode-23-architecture-pt-1/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><itunes:subtitle>This is the first of a series of Episodes on Software Architecture. Alex, Michael and Markus talk about rather fundamental topics in this episode, we'll go into much more detail in subsequent episodes in that series. Topics in this episode include: - </itunes:subtitle><itunes:summary>This is the first of a series of Episodes on Software Architecture. Alex, Michael and Markus talk about rather fundamental topics in this episode, we'll go into much more detail in subsequent episodes in that series. Topics in this episode include:

 What is architecture, how is it different from design
 what different kinds of architecture are there in addition to software architecture
 the role of the architect, do we have one or more?
 architecture in agile software development
 tasks of the architect
 architect vs. the technical project lead
 architecture and project politics
 architecture requirements, estimating, team assembling

There aren't too many good references for this general architecture discussion. You might want to take a look at Software Architecture in Practice by Len Bass, or, if you speak German, at the book Software-Architektur by Vogel, Arnold, Chugtai, Ihler, Mehlig, Neumann, Voelter and Zdun.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>42:32</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/2HDGhEOEAYU/seradio-episode23-architecture_pt1.mp3" fileSize="40837760" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2006/07/episode-23-architecture-pt-1/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/2HDGhEOEAYU/seradio-episode23-architecture_pt1.mp3" length="40837760" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode23-architecture_pt1.mp3</feedburner:origEnclosureLink></item><item><title>Episode 22: Feedback</title><link>http://feedproxy.google.com/~r/se-radio/~3/LGOZZaFALj8/</link><category>Episodes</category><category>News</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Sun, 09 Jul 2006 15:00:00 PDT</pubDate><guid isPermaLink="false"></guid><description>This is an episode with some more of your feedback. Specifically, the episode also contains a 5 minute section from &lt;a href="http://rifers.org/blogs/gbevin"&gt;Geert Bevin&lt;/a&gt; where he explains how Continuations are used an implemented in the &lt;a href="http://rifers.org/"&gt;Rife Framework&lt;/a&gt;. This is in response to a discussion about continuations and Rife in &lt;a href="http://se-radio.net/index.php?post_id=90043"&gt;Episode 15, Future of Enterprise Java&lt;/a&gt;. We also have some feedback from &lt;a href="http://www.cs.umd.edu/~pugh/"&gt;Bill Pugh&lt;/a&gt; about flaws in our description about the problems of double-checked locking in Java.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/LGOZZaFALj8" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2006/07/episode-22-feedback/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><itunes:subtitle>This is an episode with some more of your feedback. Specifically, the episode also contains a 5 minute section from Geert Bevin where he explains how Continuations are used an implemented in the Rife Framework.</itunes:subtitle><itunes:summary>This is an episode with some more of your feedback. Specifically, the episode also contains a 5 minute section from Geert Bevin where he explains how Continuations are used an implemented in the Rife Framework. This is in response to a discussion about continuations and Rife in Episode 15, Future of Enterprise Java. We also have some feedback from Bill Pugh about flaws in our description about the problems of double-checked locking in Java.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>23:09</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/SsYwQtld0fw/seradio-episode22-feedback.mp3" fileSize="22220510" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2006/07/episode-22-feedback/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/SsYwQtld0fw/seradio-episode22-feedback.mp3" length="22220510" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode22-feedback.mp3</feedburner:origEnclosureLink></item><item><title>Episode 21: Error Handling Pt. 2</title><link>http://feedproxy.google.com/~r/se-radio/~3/bg8ZM4qkbsc/</link><category>Episodes</category><category>error handling</category><category>Technology Talk</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Tue, 04 Jul 2006 15:00:00 PDT</pubDate><guid isPermaLink="false"></guid><description>In this Episode, Arno and Michael take a closer look at Exceptions and Error conditions, how to categorize them and how to deal with them. We look at the different levels of guarantee that a piece of code can provide with regard to exceptional condition and finish with a discussion of a number of best practices and their respective trade-offs.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/bg8ZM4qkbsc" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2006/07/episode-21-error-handling-pt-2/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><itunes:subtitle>In this Episode, Arno and Michael take a closer look at Exceptions and Error conditions, how to categorize them and how to deal with them. We look at the different levels of guarantee that a piece of code can provide with regard to exceptional conditio...</itunes:subtitle><itunes:summary>In this Episode, Arno and Michael take a closer look at Exceptions and Error conditions, how to categorize them and how to deal with them. We look at the different levels of guarantee that a piece of code can provide with regard to exceptional condition and finish with a discussion of a number of best practices and their respective trade-offs.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>35:59</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/qsX7JikxWQw/seradio-episode21-errorHandling_pt2.mp3" fileSize="34538603" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2006/07/episode-21-error-handling-pt-2/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/qsX7JikxWQw/seradio-episode21-errorHandling_pt2.mp3" length="34538603" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode21-errorHandling_pt2.mp3</feedburner:origEnclosureLink></item><item><title>Episode 20: Interview Michael Stal</title><link>http://feedproxy.google.com/~r/se-radio/~3/2Ji_PJmNauk/</link><category>Episodes</category><category>.net</category><category>Interview</category><category>java</category><category>middleware</category><category>patterns</category><category>soa</category><category>web services</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Sat, 24 Jun 2006 15:00:00 PDT</pubDate><guid isPermaLink="false"></guid><description>In this Episode, we talk to Michael Stal, a Senior Principal Engineer at Siemens Corporate Technology, POSA 1 and 2 Co-Author and Editor of the german JavaSpetrum magazine. Since Michael's core focus is middlware, much of our discussion centered around that topic. Webservices and SOA, of course, have also been covered. Other topics include Java vs. .NET as well as Patterns.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/2Ji_PJmNauk" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2006/06/episode-20-interview-michael-stal/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">1</slash:comments><itunes:subtitle>In this Episode, we talk to Michael Stal, a Senior Principal Engineer at Siemens Corporate Technology, POSA 1 and 2 Co-Author and Editor of the german JavaSpetrum magazine. Since Michael's core focus is middlware,</itunes:subtitle><itunes:summary>In this Episode, we talk to Michael Stal, a Senior Principal Engineer at Siemens Corporate Technology, POSA 1 and 2 Co-Author and Editor of the german JavaSpetrum magazine. Since Michael's core focus is middlware, much of our discussion centered around that topic. Webservices and SOA, of course, have also been covered. Other topics include Java vs. .NET as well as Patterns.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>43:58</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/mWLGnonDG-E/seradio-episode20-michaelStal.mp3" fileSize="42213632" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2006/06/episode-20-interview-michael-stal/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/mWLGnonDG-E/seradio-episode20-michaelStal.mp3" length="42213632" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode20-michaelStal.mp3</feedburner:origEnclosureLink></item><item><title>Episode 19: Concurrency Pt. 2</title><link>http://feedproxy.google.com/~r/se-radio/~3/Wh7E6YT1_JI/</link><category>Episodes</category><category>concurrency</category><category>Technology Talk</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Wed, 14 Jun 2006 15:00:00 PDT</pubDate><guid isPermaLink="false"></guid><description>In this second part of our concurrency series Michael and Alexander talk about basic patterns for concurrent programming, such as Active and Monitor Object, Scoped Locking and Futures. Further, they discuss some architectural considerations regarding the number of threads and resource usage in general. For more information, see the references for &lt;a href="http://se-radio.net/index.php?post_id=81083"&gt;part one&lt;/a&gt; as well as the following links&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/Wh7E6YT1_JI" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2006/06/episode-19-concurrency-pt-2/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">1</slash:comments><itunes:subtitle>In this second part of our concurrency series Michael and Alexander talk about basic patterns for concurrent programming, such as Active and Monitor Object, Scoped Locking and Futures. Further, they discuss some architectural considerations regarding t...</itunes:subtitle><itunes:summary>In this second part of our concurrency series Michael and Alexander talk about basic patterns for concurrent programming, such as Active and Monitor Object, Scoped Locking and Futures. Further, they discuss some architectural considerations regarding the number of threads and resource usage in general. For more information, see the references for part one as well as the following links</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>27:42</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/GXH6jvLmL2k/seradio-episode19-concurrency_pt2.mp3" fileSize="26590976" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2006/06/episode-19-concurrency-pt-2/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/GXH6jvLmL2k/seradio-episode19-concurrency_pt2.mp3" length="26590976" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode19-concurrency_pt2.mp3</feedburner:origEnclosureLink></item><item><title>Episode 18: Resource Management</title><link>http://feedproxy.google.com/~r/se-radio/~3/ZVII2JWXz8U/</link><category>Episodes</category><category>patterns</category><category>resource management</category><category>Technology/Guest</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Sun, 04 Jun 2006 15:00:00 PDT</pubDate><guid isPermaLink="false"></guid><description>In this episode Michael and our guest Prashant Jain talk about patterns for resource management. Efficient management of resources is critical in the execution of any kind of software. Ranging from embedded software in a mobile device to software in a large enterprise server, it is important that the resources, such as memory, threads, file handles, or network connections, are managed efficiently to allow the systems to function properly and effectively. Michael and Prashant discuss various patterns, such as Lazy Acquisition, Caching, Leasing and Evictor and explain when, why, and how to apply them for effective resource management.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/ZVII2JWXz8U" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2006/06/episode-18-resource-management/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><itunes:subtitle>In this episode Michael and our guest Prashant Jain talk about patterns for resource management. Efficient management of resources is critical in the execution of any kind of software. Ranging from embedded software in a mobile device to software in a ...</itunes:subtitle><itunes:summary>In this episode Michael and our guest Prashant Jain talk about patterns for resource management. Efficient management of resources is critical in the execution of any kind of software. Ranging from embedded software in a mobile device to software in a large enterprise server, it is important that the resources, such as memory, threads, file handles, or network connections, are managed efficiently to allow the systems to function properly and effectively. Michael and Prashant discuss various patterns, such as Lazy Acquisition, Caching, Leasing and Evictor and explain when, why, and how to apply them for effective resource management.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>43:30</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/v_WR08Ohx-w/seradio-episode18-resourceManagement.mp3" fileSize="41756367" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2006/06/episode-18-resource-management/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/v_WR08Ohx-w/seradio-episode18-resourceManagement.mp3" length="41756367" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode18-resourceManagement.mp3</feedburner:origEnclosureLink></item><item><title>Episode 17: Feedback and Roadmap</title><link>http://feedproxy.google.com/~r/se-radio/~3/AU3Is1gOxWQ/</link><category>Episodes</category><category>News</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Mon, 29 May 2006 15:00:00 PDT</pubDate><guid isPermaLink="false"></guid><description>This is a short episode that outlines the upcoming episodes and interviews, as well as reports on some listener feedback.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/AU3Is1gOxWQ" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2006/05/episode-17-feedback-and-roadmap/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><itunes:subtitle>This is a short episode that outlines the upcoming episodes and interviews, as well as reports on some listener feedback.</itunes:subtitle><itunes:summary>This is a short episode that outlines the upcoming episodes and interviews, as well as reports on some listener feedback.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>14:55</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/py9JIFkU6p4/seradio-episode17-feedbackAndRoadmap.mp3" fileSize="14313140" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2006/05/episode-17-feedback-and-roadmap/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/py9JIFkU6p4/seradio-episode17-feedbackAndRoadmap.mp3" length="14313140" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode17-feedbackAndRoadmap.mp3</feedburner:origEnclosureLink></item><item><title>Episode 16: MDSD Pt. 3, Hands-On</title><link>http://feedproxy.google.com/~r/se-radio/~3/MbIHohzgWNM/</link><category>Episodes</category><category>mdsd</category><category>Technology Talk</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Thu, 25 May 2006 15:00:00 PDT</pubDate><guid isPermaLink="false"></guid><description>This episode provides a hands-on guided tour through a simple model-driven software project. It is based on an actual code sample (see link below) and takes a look at the typical steps of real-life code generation: prototypical implementation, defining the metamodel, reading a model into a metamodel instance, writing templates and validating the model. The example for the episode uses openArchitectureWare as a generator environment, but the overall approach is tool independent. This episode is the first in a new category "code/technology" that discusses technical concepts based on actual code. Please give feedback whether you find this format useful or not.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/MbIHohzgWNM" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2006/05/episode-16-mdsd-pt-3-hands-on/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">10</slash:comments><itunes:subtitle>This episode provides a hands-on guided tour through a simple model-driven software project. It is based on an actual code sample (see link below) and takes a look at the typical steps of real-life code generation: prototypical implementation,</itunes:subtitle><itunes:summary>This episode provides a hands-on guided tour through a simple model-driven software project. It is based on an actual code sample (see link below) and takes a look at the typical steps of real-life code generation: prototypical implementation, defining the metamodel, reading a model into a metamodel instance, writing templates and validating the model. The example for the episode uses openArchitectureWare as a generator environment, but the overall approach is tool independent. This episode is the first in a new category "code/technology" that discusses technical concepts based on actual code. Please give feedback whether you find this format useful or not.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>1:00:17</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/WvVtmBXegqQ/seradio-episode16-mdsd_pt3.mp3" fileSize="57864069" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2006/05/episode-16-mdsd-pt-3-hands-on/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/WvVtmBXegqQ/seradio-episode16-mdsd_pt3.mp3" length="57864069" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode16-mdsd_pt3.mp3</feedburner:origEnclosureLink></item><item><title>Episode 15: The Future of Enterprise Java</title><link>http://feedproxy.google.com/~r/se-radio/~3/XKHFxSetJGY/</link><category>Episodes</category><category>enterprise</category><category>java</category><category>languages</category><category>spring</category><category>Technology Talk</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Mon, 15 May 2006 15:00:00 PDT</pubDate><guid isPermaLink="false"></guid><description>A very important area for Java are Enterprise Systems. With the advent of new technologies like Ruby on Rails, Java EE 5 or EJB 3 the landscape for Enterprise Systems appears to be changing a lot at the moment. In this episode Markus talks with Eberhard about what Enterprise Java actually is, why and where it is used. Based on that they discuss what the future might look like and how to make Enterprise Java shine in the future.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/XKHFxSetJGY" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2006/05/episode-15-the-future-of-enterprise-java/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">1</slash:comments><itunes:subtitle>A very important area for Java are Enterprise Systems. With the advent of new technologies like Ruby on Rails, Java EE 5 or EJB 3 the landscape for Enterprise Systems appears to be changing a lot at the moment.</itunes:subtitle><itunes:summary>A very important area for Java are Enterprise Systems. With the advent of new technologies like Ruby on Rails, Java EE 5 or EJB 3 the landscape for Enterprise Systems appears to be changing a lot at the moment. In this episode Markus talks with Eberhard about what Enterprise Java actually is, why and where it is used. Based on that they discuss what the future might look like and how to make Enterprise Java shine in the future.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>37:54</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/erUjl0veyJA/seradio-episode15-enterpriseJava.mp3" fileSize="36387236" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2006/05/episode-15-the-future-of-enterprise-java/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/erUjl0veyJA/seradio-episode15-enterpriseJava.mp3" length="36387236" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode15-enterpriseJava.mp3</feedburner:origEnclosureLink></item><item><title>Episode 14: Interview Ted Neward</title><link>http://feedproxy.google.com/~r/se-radio/~3/TfIb8U6DLmQ/</link><category>Episodes</category><category>.net</category><category>c#</category><category>Interview</category><category>languages</category><category>linq</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Fri, 05 May 2006 15:00:00 PDT</pubDate><guid isPermaLink="false"></guid><description>In this Episode we talk to Ted Neward. Since Ted is active in the .NET and Java universes, we started out by discussing some of the differences between the two platforms. The main discussion, however, focussed on new features in the C# 3.0 language. These include LINQ (language-integrated query). A very interesting discussion about extension methods, lamda expression, typing (dynamic, duck, compiler) and other language "tricks" follows. We also visited the topic of language development on the .NET and Java platforms in general, also looking at topics such as concurrency and the Scala language.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/TfIb8U6DLmQ" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2006/05/episode-14-interview-ted-neward/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">1</slash:comments><itunes:subtitle>In this Episode we talk to Ted Neward. Since Ted is active in the .NET and Java universes, we started out by discussing some of the differences between the two platforms. The main discussion, however, focussed on new features in the C# 3.0 language.</itunes:subtitle><itunes:summary>In this Episode we talk to Ted Neward. Since Ted is active in the .NET and Java universes, we started out by discussing some of the differences between the two platforms. The main discussion, however, focussed on new features in the C# 3.0 language. These include LINQ (language-integrated query). A very interesting discussion about extension methods, lamda expression, typing (dynamic, duck, compiler) and other language "tricks" follows. We also visited the topic of language development on the .NET and Java platforms in general, also looking at topics such as concurrency and the Scala language.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>1:04:37</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/1v8dk5IYGoU/seradio-episode14-tedNeward.mp3" fileSize="62031872" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2006/05/episode-14-interview-ted-neward/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/1v8dk5IYGoU/seradio-episode14-tedNeward.mp3" length="62031872" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode14-tedNeward.mp3</feedburner:origEnclosureLink></item><item><title>Episode 13: Ruby in Practice</title><link>http://feedproxy.google.com/~r/se-radio/~3/3rtX9JI1dV0/</link><category>Episodes</category><category>dynamic languages</category><category>languages</category><category>ruby</category><category>scripting</category><category>Technology/Guest</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Wed, 26 Apr 2006 15:00:00 PDT</pubDate><guid isPermaLink="false"></guid><description>Ruby has been getting more and more attention by the developer community over the last couple of years. Nevertheless Ruby as language and as a plattform is not too widespread. Most developers don't know people who have actually done commercial Ruby projects. Therefore it is sometimes hard to judge if Ruby is just a hype topic or if Ruby can be used for serious projects today. In this episode Alexander speaks with Thomas Quas about a commercial Ruby project Thomas finished a while ago. Thomas shares his insights and practical experiences with Ruby doing a project under strong time pressure. As Thomas has many years experience doing Java projects we also do some high level comparisons between both platforms.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/3rtX9JI1dV0" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2006/04/episode-13-ruby-in-practice/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">1</slash:comments><itunes:subtitle>Ruby has been getting more and more attention by the developer community over the last couple of years. Nevertheless Ruby as language and as a plattform is not too widespread. Most developers don't know people who have actually done commercial Ruby pro...</itunes:subtitle><itunes:summary>Ruby has been getting more and more attention by the developer community over the last couple of years. Nevertheless Ruby as language and as a plattform is not too widespread. Most developers don't know people who have actually done commercial Ruby projects. Therefore it is sometimes hard to judge if Ruby is just a hype topic or if Ruby can be used for serious projects today. In this episode Alexander speaks with Thomas Quas about a commercial Ruby project Thomas finished a while ago. Thomas shares his insights and practical experiences with Ruby doing a project under strong time pressure. As Thomas has many years experience doing Java projects we also do some high level comparisons between both platforms.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>31:50</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/pqp-q49TPE8/seradio-episode13-rubyInPractice.mp3" fileSize="30565901" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2006/04/episode-13-ruby-in-practice/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/pqp-q49TPE8/seradio-episode13-rubyInPractice.mp3" length="30565901" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode13-rubyInPractice.mp3</feedburner:origEnclosureLink></item><item><title>Episode 12: Concurrency Pt. 1</title><link>http://feedproxy.google.com/~r/se-radio/~3/lJLihLsyf0M/</link><category>Episodes</category><category>concurrency</category><category>Technology Talk</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Tue, 18 Apr 2006 15:00:00 PDT</pubDate><guid isPermaLink="false"></guid><description>This is the first part of a series of Concurrency episodes. In this part Alex and Michael motivate and introduce the topic. We explain fundamental terms, such as thread, process, or mutex and dicuss typical challenges, such as deadlocks and race conditions.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/lJLihLsyf0M" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2006/04/episode-12-concurrency-pt-1/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><itunes:subtitle>This is the first part of a series of Concurrency episodes. In this part Alex and Michael motivate and introduce the topic. We explain fundamental terms, such as thread, process, or mutex and dicuss typical challenges,</itunes:subtitle><itunes:summary>This is the first part of a series of Concurrency episodes. In this part Alex and Michael motivate and introduce the topic. We explain fundamental terms, such as thread, process, or mutex and dicuss typical challenges, such as deadlocks and race conditions.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>25:16</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/wDMgVUHC9l0/seradio-episode12-concurrency_pt1.mp3" fileSize="24253045" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2006/04/episode-12-concurrency-pt-1/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/wDMgVUHC9l0/seradio-episode12-concurrency_pt1.mp3" length="24253045" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode12-concurrency_pt1.mp3</feedburner:origEnclosureLink></item><item><title>Episode 11: Interview Gregor Kiczales</title><link>http://feedproxy.google.com/~r/se-radio/~3/br-LZ73FOCk/</link><category>Episodes</category><category>aop</category><category>aspect oriented programming</category><category>Interview</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Sat, 08 Apr 2006 15:00:00 PDT</pubDate><guid isPermaLink="false"></guid><description>In this Episode we have the pleasure of talking with Gregor Kiczales. Gregor is one of the fathers of aspect-oriented programming (AOP). Today he is a professor of computer science at the University of British Columbia. Back in his days at Xerox Parc, he and a number of other people worked on the early forms of AOP as well as on some of its forerunners, such as meta object protocols. In this interview, we talk about a number of interesting topics, such as the history of AOP, the relationship of AO to interceptors, the industry acceptance of AOP, early aspects (i.e. using AO in development phased before implementation) as well as adoption strategies for AOP.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/br-LZ73FOCk" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2006/04/episode-11-interview-gregor-kiczales/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><itunes:subtitle>In this Episode we have the pleasure of talking with Gregor Kiczales. Gregor is one of the fathers of aspect-oriented programming (AOP). Today he is a professor of computer science at the University of British Columbia. Back in his days at Xerox Parc,</itunes:subtitle><itunes:summary>In this Episode we have the pleasure of talking with Gregor Kiczales. Gregor is one of the fathers of aspect-oriented programming (AOP). Today he is a professor of computer science at the University of British Columbia. Back in his days at Xerox Parc, he and a number of other people worked on the early forms of AOP as well as on some of its forerunners, such as meta object protocols. In this interview, we talk about a number of interesting topics, such as the history of AOP, the relationship of AO to interceptors, the industry acceptance of AOP, early aspects (i.e. using AO in development phased before implementation) as well as adoption strategies for AOP.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>34:14</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/Kq6rhZhYK2I/seradio-episode11-gregorKiczales.mp3" fileSize="32857153" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2006/04/episode-11-interview-gregor-kiczales/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/Kq6rhZhYK2I/seradio-episode11-gregorKiczales.mp3" length="32857153" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode11-gregorKiczales.mp3</feedburner:origEnclosureLink></item><item><title>Episode 10: Remoting Pt. 2</title><link>http://feedproxy.google.com/~r/se-radio/~3/3oVHATF9SZA/</link><category>Episodes</category><category>.net</category><category>corba</category><category>middleware</category><category>remoting</category><category>Technology Talk</category><category>web services</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Wed, 29 Mar 2006 14:00:00 PST</pubDate><guid isPermaLink="false"></guid><description>This is the second part of the remoting infrastructures discussion started in Episode 9. We take a look at how remoting infrastructures such as CORBA, .NET Remoting or Web Services work internally. This includes the low level details of the transport layer, marshalling, client proxies as well as interceptors and asynchronous communication. At the end, Michael will explain how all this relates to CORBA and Markus will map the concepts to .NET remoting. We don't have additional links in these show notes since all the relevant links had been posted for Episode 9 already.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/3oVHATF9SZA" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2006/03/episode-10-remoting-pt-2/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><itunes:subtitle>This is the second part of the remoting infrastructures discussion started in Episode 9. We take a look at how remoting infrastructures such as CORBA, .NET Remoting or Web Services work internally. This includes the low level details of the transport l...</itunes:subtitle><itunes:summary>This is the second part of the remoting infrastructures discussion started in Episode 9. We take a look at how remoting infrastructures such as CORBA, .NET Remoting or Web Services work internally. This includes the low level details of the transport layer, marshalling, client proxies as well as interceptors and asynchronous communication. At the end, Michael will explain how all this relates to CORBA and Markus will map the concepts to .NET remoting. We don't have additional links in these show notes since all the relevant links had been posted for Episode 9 already.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>34:42</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/90rypbH13YY/seradio-episode10-remoting_pt2.mp3" fileSize="33317533" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2006/03/episode-10-remoting-pt-2/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/90rypbH13YY/seradio-episode10-remoting_pt2.mp3" length="33317533" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode10-remoting_pt2.mp3</feedburner:origEnclosureLink></item><item><title>Episode 9: Remoting Pt.1 and Listener Feedback</title><link>http://feedproxy.google.com/~r/se-radio/~3/Jr6pN8F3GAk/</link><category>Episodes</category><category>.net</category><category>corba</category><category>middleware</category><category>remoting</category><category>Technology Talk</category><category>web services</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Sun, 19 Mar 2006 14:00:00 PST</pubDate><guid isPermaLink="false"></guid><description>This Episode as well as the next one take a look at remoting infrastructures such as CORBA, .NET Remoting or Webservices. In this first part we will take a look at why remote communication is necessary in the first place, what remoting middleware can do for you as well as which other middleware technologies exist in addition to OO-RPC systems, such as messaging middleware. Finally, we conclude with a brief overview of what the broker pattern can do for us in the context of remoting middleware.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/Jr6pN8F3GAk" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2006/03/episode-9-remoting-pt-1-and-listener-feedback/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">1</slash:comments><itunes:subtitle>This Episode as well as the next one take a look at remoting infrastructures such as CORBA, .NET Remoting or Webservices. In this first part we will take a look at why remote communication is necessary in the first place,</itunes:subtitle><itunes:summary>This Episode as well as the next one take a look at remoting infrastructures such as CORBA, .NET Remoting or Webservices. In this first part we will take a look at why remote communication is necessary in the first place, what remoting middleware can do for you as well as which other middleware technologies exist in addition to OO-RPC systems, such as messaging middleware. Finally, we conclude with a brief overview of what the broker pattern can do for us in the context of remoting middleware.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>40:12</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/Icde6egLEmI/seradio-episode9-remoting_pt1.mp3" fileSize="38592896" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2006/03/episode-9-remoting-pt-1-and-listener-feedback/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/Icde6egLEmI/seradio-episode9-remoting_pt1.mp3" length="38592896" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode9-remoting_pt1.mp3</feedburner:origEnclosureLink></item><item><title>Episode 8: Interview Eric Evans</title><link>http://feedproxy.google.com/~r/se-radio/~3/pN5_Q5YT0a0/</link><category>Episodes</category><category>domain-driven design</category><category>Interview</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Wed, 08 Mar 2006 14:00:00 PST</pubDate><guid isPermaLink="false"></guid><description>Eric Evans is the author of the well known Domain-Driven Design book. In his day job he works as a consultant and coach for his own company, Domain Language. In this interview, Eric talks about the essential building blocks of domain-driven design as well as about a set of best practices on how to address complex projects. In a third part, he elaborates on the relationship of domain-driven design and MDSD/MDA.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/pN5_Q5YT0a0" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2006/03/episode-8-interview-eric-evans/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">1</slash:comments><itunes:subtitle>Eric Evans is the author of the well known Domain-Driven Design book. In his day job he works as a consultant and coach for his own company, Domain Language. In this interview, Eric talks about the essential building blocks of domain-driven design as w...</itunes:subtitle><itunes:summary>Eric Evans is the author of the well known Domain-Driven Design book. In his day job he works as a consultant and coach for his own company, Domain Language. In this interview, Eric talks about the essential building blocks of domain-driven design as well as about a set of best practices on how to address complex projects. In a third part, he elaborates on the relationship of domain-driven design and MDSD/MDA.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>38:45</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/Mxx8VDBQIn8/seradio-episode8-ericEvans.mp3" fileSize="37197440" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2006/03/episode-8-interview-eric-evans/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/Mxx8VDBQIn8/seradio-episode8-ericEvans.mp3" length="37197440" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode8-ericEvans.mp3</feedburner:origEnclosureLink></item><item><title>Episode 7: Error Handling</title><link>http://feedproxy.google.com/~r/se-radio/~3/Fq3Nc538iXY/</link><category>Episodes</category><category>error handling</category><category>Technology Talk</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Mon, 27 Feb 2006 14:00:00 PST</pubDate><guid isPermaLink="false"></guid><description>This week, Arno and Markus take a look at error handling at the architectural level. They discuss the different kinds of errors, the groups of people who need to know about them and proven high-level approaches. Later episodes will investigate more technical aspects of error handling, such as idioms for using exceptions or a discussion of checked vs. unchecked exceptions.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/Fq3Nc538iXY" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2006/02/episode-7-error-handling/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><itunes:subtitle>This week, Arno and Markus take a look at error handling at the architectural level. They discuss the different kinds of errors, the groups of people who need to know about them and proven high-level approaches.</itunes:subtitle><itunes:summary>This week, Arno and Markus take a look at error handling at the architectural level. They discuss the different kinds of errors, the groups of people who need to know about them and proven high-level approaches. Later episodes will investigate more technical aspects of error handling, such as idioms for using exceptions or a discussion of checked vs. unchecked exceptions.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>29:43</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/7f_9S8tpC7U/seradio-episode7-errorhandling.mp3" fileSize="28525952" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2006/02/episode-7-error-handling/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/7f_9S8tpC7U/seradio-episode7-errorhandling.mp3" length="28525952" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode7-errorhandling.mp3</feedburner:origEnclosureLink></item><item><title>Episode 6: Model-Driven Software Development Pt. 2</title><link>http://feedproxy.google.com/~r/se-radio/~3/s3cBLHtV5cg/</link><category>Episodes</category><category>dsls</category><category>mdd</category><category>mdsd</category><category>modeling</category><category>Technology Talk</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Sat, 18 Feb 2006 14:00:00 PST</pubDate><guid isPermaLink="false"></guid><description>After discussing some of the more technical aspects of MDSD in the last episode, we take a look at other important topics in this one. This includes some tips on how to introduce MDSD into projects and how the development process has to be adapted for this to work, as well as a look at the return on investment for MDSD. The relationship of MDSD and Agile software development is also discussed. Finally, we take a look at offshoring in the context of MDSD.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/s3cBLHtV5cg" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2006/02/episode-6-model-driven-software-development-pt-2/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><itunes:subtitle>After discussing some of the more technical aspects of MDSD in the last episode, we take a look at other important topics in this one. This includes some tips on how to introduce MDSD into projects and how the development process has to be adapted for ...</itunes:subtitle><itunes:summary>After discussing some of the more technical aspects of MDSD in the last episode, we take a look at other important topics in this one. This includes some tips on how to introduce MDSD into projects and how the development process has to be adapted for this to work, as well as a look at the return on investment for MDSD. The relationship of MDSD and Agile software development is also discussed. Finally, we take a look at offshoring in the context of MDSD.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>21:40</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/ZWkJu7FPHlU/seradio-episode6-mdsd_pt2.mp3" fileSize="20798194" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2006/02/episode-6-model-driven-software-development-pt-2/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/ZWkJu7FPHlU/seradio-episode6-mdsd_pt2.mp3" length="20798194" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode6-mdsd_pt2.mp3</feedburner:origEnclosureLink></item><item><title>Episode 5: Model-Driven Software Development Pt. 1</title><link>http://feedproxy.google.com/~r/se-radio/~3/EbLUAO-Mw_g/</link><category>Episodes</category><category>dsls</category><category>mdd</category><category>mdsd</category><category>modeling</category><category>Technology Talk</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Thu, 09 Feb 2006 14:00:00 PST</pubDate><guid isPermaLink="false"></guid><description>In this Episode, Eberhard and Markus provide an introduction to Model-Driven Software Development. Since the discussion turned out to be too long, we separated things into two episodes, thus Episode 6 will be the second part of this discussion. In this first part we disucsss core concepts of MDSD, the relationship to MDA, and hint at a couple of tools.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/EbLUAO-Mw_g" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2006/02/episode-5-model-driven-software-development-pt-1/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><itunes:subtitle>In this Episode, Eberhard and Markus provide an introduction to Model-Driven Software Development. Since the discussion turned out to be too long, we separated things into two episodes, thus Episode 6 will be the second part of this discussion.</itunes:subtitle><itunes:summary>In this Episode, Eberhard and Markus provide an introduction to Model-Driven Software Development. Since the discussion turned out to be too long, we separated things into two episodes, thus Episode 6 will be the second part of this discussion. In this first part we disucsss core concepts of MDSD, the relationship to MDA, and hint at a couple of tools.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>33:54</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/ZAEeIxfcmaQ/seradio-episode5-mdsd_pt1.mp3" fileSize="32548281" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2006/02/episode-5-model-driven-software-development-pt-1/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/ZAEeIxfcmaQ/seradio-episode5-mdsd_pt1.mp3" length="32548281" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode5-mdsd_pt1.mp3</feedburner:origEnclosureLink></item><item><title>Episode 4: Scripting Languages</title><link>http://feedproxy.google.com/~r/se-radio/~3/jXWe0J7PJxU/</link><category>Episodes</category><category>languages</category><category>python</category><category>ruby</category><category>scripting</category><category>Technology Talk</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Wed, 01 Feb 2006 14:00:00 PST</pubDate><guid isPermaLink="false"></guid><description>In this Episode, Alexander and Markus talk about scripting languages. Topics include the definition of what a scripting language is, typical usage scenarios, performance issues, programming styles and IDE support. In later Episodes we will talk about more specific topics, such as dynamic typing, reflection, functional programming as well as specific languages such as Ruby.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/jXWe0J7PJxU" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2006/02/episode-4-scripting-languages/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">4</slash:comments><itunes:subtitle>In this Episode, Alexander and Markus talk about scripting languages. Topics include the definition of what a scripting language is, typical usage scenarios, performance issues, programming styles and IDE support.</itunes:subtitle><itunes:summary>In this Episode, Alexander and Markus talk about scripting languages. Topics include the definition of what a scripting language is, typical usage scenarios, performance issues, programming styles and IDE support. In later Episodes we will talk about more specific topics, such as dynamic typing, reflection, functional programming as well as specific languages such as Ruby.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>37:29</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/QdkFhElKDyQ/seradio-episode4-scriptingLanguages.mp3" fileSize="31491088" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2006/02/episode-4-scripting-languages/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/QdkFhElKDyQ/seradio-episode4-scriptingLanguages.mp3" length="31491088" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode4-scriptingLanguages.mp3</feedburner:origEnclosureLink></item><item><title>Episode 3: Interview Doug Schmidt</title><link>http://feedproxy.google.com/~r/se-radio/~3/G_c-33LtnmM/</link><category>Episodes</category><category>distributed systems</category><category>embedded systems</category><category>Interview</category><category>mdsd</category><category>middleware</category><category>patterns</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Wed, 25 Jan 2006 11:00:00 PST</pubDate><guid isPermaLink="false"></guid><description>In this episode we talk with Doug Schmidt. Doug is a professor of computer science at Vanderbilt University and a well-respected authority in the fields of middleware, patterns and model-driven development. In this interview we talk about these topics in the context of distributed, realtime embedded (DRE) systems.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/G_c-33LtnmM" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2006/01/episode-3-interview-doug-schmidt/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">3</slash:comments><itunes:subtitle>In this episode we talk with Doug Schmidt. Doug is a professor of computer science at Vanderbilt University and a well-respected authority in the fields of middleware, patterns and model-driven development.</itunes:subtitle><itunes:summary>In this episode we talk with Doug Schmidt. Doug is a professor of computer science at Vanderbilt University and a well-respected authority in the fields of middleware, patterns and model-driven development. In this interview we talk about these topics in the context of distributed, realtime embedded (DRE) systems.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>58:18</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/4JMlz7FTF04/seradio-episode3-dougschmidt.mp3" fileSize="48968173" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2006/01/episode-3-interview-doug-schmidt/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/4JMlz7FTF04/seradio-episode3-dougschmidt.mp3" length="48968173" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode3-dougschmidt.mp3</feedburner:origEnclosureLink></item><item><title>Episode 2: Dependencies</title><link>http://feedproxy.google.com/~r/se-radio/~3/ARUL1hn07MY/</link><category>Episodes</category><category>dependency management</category><category>Technology Talk</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Tue, 24 Jan 2006 15:00:00 PST</pubDate><guid isPermaLink="false"></guid><description>Eberhard and Markus discuss the important topic of associations and dependencies in this show. While OO languages provide direct support for subtyping, most don't provide a first-class construct for other relationships between objects. The discussion elaborates on the problem and looks at various remedies, most importantly, dependency injection.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/ARUL1hn07MY" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2006/01/episode-2-dependencies/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><itunes:subtitle>Eberhard and Markus discuss the important topic of associations and dependencies in this show. While OO languages provide direct support for subtyping, most don't provide a first-class construct for other relationships between objects.</itunes:subtitle><itunes:summary>Eberhard and Markus discuss the important topic of associations and dependencies in this show. While OO languages provide direct support for subtyping, most don't provide a first-class construct for other relationships between objects. The discussion elaborates on the problem and looks at various remedies, most importantly, dependency injection.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>39:57</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/Ww38DkC9Aas/seradio-episode2-dependencies.mp3" fileSize="33556608" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2006/01/episode-2-dependencies/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/Ww38DkC9Aas/seradio-episode2-dependencies.mp3" length="33556608" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode2-dependencies.mp3</feedburner:origEnclosureLink></item><item><title>Episode 1: Patterns</title><link>http://feedproxy.google.com/~r/se-radio/~3/tGhjop21jGg/</link><category>Episodes</category><category>patterns</category><category>Technology Talk</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Sat, 21 Jan 2006 16:00:00 PST</pubDate><guid isPermaLink="false"></guid><description>In this episode Michael and Markus talk about patterns. Starting with some of their "most used" patterns, they go into some detail about the history of patterns. They then discuss the various pattern forms as well as some misconceptions about patterns. Other topics include the domains that are covered by patterns as well as pattern languages.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/tGhjop21jGg" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2006/01/episode-1-patterns/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">4</slash:comments><itunes:subtitle>In this episode Michael and Markus talk about patterns. Starting with some of their "most used" patterns, they go into some detail about the history of patterns. They then discuss the various pattern forms as well as some misconceptions about patterns.</itunes:subtitle><itunes:summary>In this episode Michael and Markus talk about patterns. Starting with some of their "most used" patterns, they go into some detail about the history of patterns. They then discuss the various pattern forms as well as some misconceptions about patterns. Other topics include the domains that are covered by patterns as well as pattern languages.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>35:47</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/pqV5QHLBLys/seradio-episode1-patterns.mp3" fileSize="30062208" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2006/01/episode-1-patterns/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/pqV5QHLBLys/seradio-episode1-patterns.mp3" length="30062208" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode1-patterns.mp3</feedburner:origEnclosureLink></item><item><title>Episode 0: About</title><link>http://feedproxy.google.com/~r/se-radio/~3/SyTwNhyRHXg/</link><category>Episodes</category><category>News</category><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">team@se-radio.net (SE-Radio Team)</dc:creator><pubDate>Fri, 20 Jan 2006 16:00:00 PST</pubDate><guid isPermaLink="false"></guid><description>This is the first episode (actually, episode zero) of software engineering radio. The episode does not contain real content, rather, Markus explains what the podcast is all about.&lt;img src="http://feeds.feedburner.com/~r/se-radio/~4/SyTwNhyRHXg" height="1" width="1" alt=""/&gt;</description><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.se-radio.net/2006/01/episode-0-about/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">3</slash:comments><itunes:subtitle>This is the first episode (actually, episode zero) of software engineering radio. The episode does not contain real content, rather, Markus explains what the podcast is all about.</itunes:subtitle><itunes:summary>This is the first episode (actually, episode zero) of software engineering radio. The episode does not contain real content, rather, Markus explains what the podcast is all about.</itunes:summary><itunes:author>se-radio team</itunes:author><itunes:image href="http://media.computer.org/sponsored/podcast/se-radio/se-radio-logo-1400x1475.jpg" /><itunes:explicit>clean</itunes:explicit><itunes:duration>5:23</itunes:duration><media:content url="http://feedproxy.google.com/~r/se-radio/~5/HP4FT84Qos8/seradio-episode0-about.mp3" fileSize="4527305" type="audio/mpeg" /><itunes:keywords>software,engineering,development,programming,software,architecture,concurrency,testing,architecture,embedded,software,embedded,systems,enterprise,software,patterns,MDSD,MDA,SOA,Scripting,Languages,Programming</itunes:keywords><feedburner:origLink>http://www.se-radio.net/2006/01/episode-0-about/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/se-radio/~5/HP4FT84Qos8/seradio-episode0-about.mp3" length="4527305" type="audio/mpeg" /><feedburner:origEnclosureLink>http://media.libsyn.com/media/seradio/seradio-episode0-about.mp3</feedburner:origEnclosureLink></item><media:credit role="author">SE-Radio Team</media:credit><media:rating>nonadult</media:rating><media:description type="plain">Information for Software Developers and Architects</media:description></channel></rss>
